{\rtf1\ansi \deff0{\fonttbl{\f16\froman Times New Roman;}{\f17\froman Symbol;}{\f18\fnil Wingdings;}{\f19\froman Wingdings 2;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red128\green128\blue128;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red192\green192\blue192;\red0\green0\blue0;}\viewkind4\ftnbj \sectd{\header \pard \tqc\tx4320\tqr\tx8640 \plain\f16 \par }{\footer \pard \tqc\tx4320\tqr\tx8640 \plain\f16 \par }\pard \plain\f16 Una Breve Historia del 'Hackerismo'.\par \par 1. Prologo: Los 'Aut\'e9nticos Programadores'.\par \par Al principio, hab\'eda 'Aut\'e9nticos Programadores'.\par \par No es que se autodenominaran as\'ed. Tampoco se llamaban a si mismos 'hackers', o de otra forma particular. El soniquete de 'Aut\'e9nticos Programadores' no fue acu\'f1ado, posteriormente por uno de ellos, hasta despu\'e9s de 1.980. Pero desde 1.945 hacia delante, la tecnolog\'eda de la inform\'e1tica atrajo muchas de las mentes mas brillantes y creativas del mundo. Desde el primer computadora ENIAC de Eckert y Mauchly hacia delante, hab\'eda mas o menos una cultura t\'e9cnica continua y autoconsciente de programadores entusiastas. Gente que construyo y jugo con el software por diversi\'f3n.\par \par Los 'Aut\'e9nticos Programadores' salieron por lo general del campo de la ingenier\'eda o de la f\'edsica. Desde luego eran radio aficionados. Llevaban calcetines blancos, camisas de poliester, corbatas y gruesas gafas; codificaban en c\'f3digo maquina, ensamblador, FORTRAN y una media docena de viejisimos lenguajes ahora olvidados.\par \par Desde el final de la Segunda Guerra Mundial hasta principio de los 70, en los grandes d\'edas de la inform\'e1tica por lotes y los gigantescos 'mainframes' de acero, los 'Aut\'e9nticos Programadores' eran los dominantes de la cultura t\'e9cnica en inform\'e1tica. Algunas de las piezas reverenciadas del folclore 'hacker' pertenecen a esta era, incluyendo varias listas de Leyes de Murphy y el p\'f3ster en seudoaleman "Blinkenlights" que aun adorna muchas salas de computadoras.\par \par Algunas personas que se criaron en la cultura de los 'Aut\'e9nticos Programadores' permanecen activos en los 90. Seymour Cray, dise\'f1ador de la l\'ednea de supercomputadoras CRAY, estuvo entre los mejores, cont\'f3 una vez que tecleo un sistema operativo completo, de su propio dise\'f1o dentro de una computadora de su propio dise\'f1o a trav\'e9s del teclado de su panel frontal. En octal. Sin un error. Y funciono. 'Macho Supremo' de los 'Aut\'e9nticos Programadores'.\par \par La cultura 'Aut\'e9nticos Programadores', sin embargo, estaba muy asociada con  inform\'e1tica 'batch' (y especialmente 'batch' cient\'edfico). Fue finalmente eclipsada por el surgimiento de la inform\'e1tica interactiva, las universidades y las redes de ordenadores. Estos dieron a luz  a otra tradici\'f3n de ingenier\'eda que, finalmente, evolucionar\'eda a la actual cultura 'hacker' de fuente abierta (open-source).\par  \par 2. Los Primeros 'Hackers'\par \par El comienzo de la cultura 'hacker' tal como la conocemos hoy puede ser convenientemente datada en 1.961, el a\'f1o que el MIT adquiri\'f3 el primer PDP-1. El comit\'e9 de energ\'eda y se\'f1ales del Club T\'e9cnico de Maquetas de Ferrocarril del MIT adopto la maquina como su juguete tecnol\'f3gico favorito e invento, herramientas de programaci\'f3n, argot y una completa cultura adicional,  que aun hoy es identificable con nosotros. Esos primeros a\'f1os han sido examinados en la primera parte del libro de Steven Levy, \plain\i\f16\cf1 Hackers\plain\f16 .\par \par La cultura de computadoras del MIT parece haber sido la primera en adoptar el termino 'hacker'. Los 'Hackers' del Club T\'e9cnico de Maquetas de Ferrocarril se convirtieron en el n\'facleo del Laboratorio de Inteligencia Artificial del MIT. El centro mas importante del mundo de investigaci\'f3n en IA en los primeros 80. Y su influencia fue mucho mas amplia despu\'e9s de 1.969, el primer a\'f1o de ARPANET.\par \par ARPANET fue la primera red de computadoras de alta velocidad, transcontinental. Fue construida por el Departamento de Defensa como un experimento en comunicaciones digitales. pero creci\'f3 hasta enlazar juntas cientos de universidades, contratistas de Defensa y laboratorios de investigaci\'f3n. Permiti\'f3 a los investigadores de cualquier lugar intercambiar informaci\'f3n con una velocidad y flexibilidad sin precedentes, dando un enorme empuje al trabajo colaborativo e incrementando tremendamente el ritmo y la intensidad del avance tecnol\'f3gico.\par \par Pero ARPANET tambi\'e9n hizo algo muy bien. Su autopista electr\'f3nica aglutino una masa critica de 'hackers' por todos los EE.UU.; en vez de permanecer en peque\'f1os grupos aislados cada uno desarrollando sus propias y ef\'edmeras culturas locales, se descubrieron (o reinventaron) a si mismos como una tribu interconectada.\par \par Los primeros objetos intencionados de la cultura 'hacker' - la primera lista del argot, las primeras s\'e1tiras, las primeras discusiones autoconscientes de la \'e9tica 'hacker' - fueron propagados en la ARPANET en sus primeros a\'f1os. En particular la primera versi\'f3n del Fichero de Jerga, desarrollado como una colaboraci\'f3n cruzada durante el periodo 1.973 - 1.975. Este diccionario de argot llego a ser uno de los documentos definitorios de la cultura. Fue finalmente publicado como \plain\i\f16 The New Hacker\'b4s Dictionary\plain\f16 .\par \par El 'hackerismo' floreci\'f3 en las universidades conectadas a la red, especialmente (pero no exclusivamente) en sus departamentos de ciencia de la inform\'e1tica. El laboratorio de IA del MIT fue el primero entre pares desde los \'faltimos a\'f1os 60. Pero el Laboratorio de Inteligencia Artificial de Stanford (SAIL) y la Universidad Carnegie-Mellon (CMU) han llegado ha tener casi la misma importancia. En todas fueron prosperando centros de ciencia de la inform\'e1tica e investigaci\'f3n en IA. Todas atrajeron gente brillante que contribuyeron con grandes cosas al 'hackerismo', tanto en el nivel t\'e9cnico como folcl\'f3rico.\par \par Sin embargo, para entender lo que llego mas tarde, necesitamos echar otro vistazo a los computadoras; porque el ascenso de Lab y su eventual ca\'edda, fue conducido por las oleadas de cambio en la tecnolog\'eda inform\'e1tica.\par \par Desde los d\'edas del PDP-1 la fortuna del 'hackerismo' ha sido tejida junto con la serie de minicomputadoras PDP de Digital Equipment Corporation. DEC estuvo en la vanguardia de la inform\'e1tica interactiva comercial y los sistemas operativos de tiempo compartido. Debido a que sus maquinas eran flexibles, potentes y relativamente baratas para la \'e9poca, montones de universidades las compraron.\par \par Tiempo compartido barato, fue el medio en el que creci\'f3 la cultura 'hacker', y en la mayor parte de su vida ARPANET fue principalmente una red de maquinas DEC. La mas importante de estas fue la PDP-10, comercializada en 1.967. la 10 permaneci\'f3 como la maquina favorita del 'hackerismo' durante casi 50 a\'f1os; TOPS-10 (el sistema operativo de DEC para la maquina) y MACRO-10 (su ensamblador) aun son recordados con nost\'e1lgico cari\'f1o en gran parte del argot y el folclore.\par \par En el MIT, a pesar de usar el mismo PDP-10 que todo los dem\'e1s, cogieron un camino ligeramente diferente; ellos rechazaron totalmente el software para el PDP-10 de DEC y construyeron su propio sistema operativo, el fabuloso ITS.\par \par ITS significaba 'Incompatible Tiemesharing System' (Sistema de tiempo compartido incompatible) lo cual da un buen ejemplo de la actitud de los 'hackers' del MIT. Ellos lo quer\'edan a su manera. Afortunadamente para todos, la gente del MIT ten\'edan la inteligencia igualada con su arrogancia. ITS, a pesar de que siempre fue raro, exc\'e9ntrico y ocasionalmente err\'f3neo, hospedo una brillante serie de innovaciones t\'e9cnicas y aun podr\'eda decirse que mantiene el r\'e9cord del sistema de tiempo compartido de  uso continuado mas largo.\par \par ITS se escribi\'f3 en ensamblador, pero muchos proyectos ITS fueron escritos en el lenguaje de IA LISP. LISP era bastante mas potente y flexible que cualquier otro lenguaje de su tiempo; de hecho, esta aun mejor dise\'f1ado que muchos de los lenguajes de hoy, veinticinco a\'f1os despu\'e9s. LISP facilito a los 'hackers' de ITS pensar de forma creativa e inusual. Fue un importante factor de su \'e9xito, y permanece como uno de los lenguajes favoritos del 'hackerismo'.\par \par Muchas de las creaciones t\'e9cnicas de la cultura ITS, permanecen vivas hoy; el programa editor EMACS es quiz\'e1s el mas conocido. Y mucho del folclore ITS esta aun vivo en los 'hackers', como uno puede ver en el Fichero de Jerga.\par \par SAIL y CMU no estuvieron dormidos, ninguna de las dos. Muchos de los lideres de los 'hackers' crecieron alrededor del PDP-10 de SAIL, despu\'e9s llegaron a ser figuras clave en el desarrollo de la ordenador personal y de los actuales interfaces de software ventana/icono/rat\'f3n. Mientras tanto los 'hackers' en CMU estaban haciendo el trabajo que pudo encabezar la primera practica a gran escala de aplicaciones rob\'f3ticas industriales y de sistemas expertos .\par \par Otro importante nodo de la cultura fue XEROX PARC, el famoso Palo Alto Research Center (Centro de Investigaci\'f3n Palo Alto). Por mas de una d\'e9cada, desde los primeros 70, hasta mitad de los 80, PARC produjo un asombroso volumen de originales innovaciones de hardware y software. El moderno rat\'f3n, la interface de software con ventanas e iconos, fueron inventados all\'ed. Tambi\'e9n la impresora l\'e1ser y la red de \'e1rea local; y la serie de maquinas D de PARC anticiparon una d\'e9cada la potencia de la computadora personal de los 80. Lamentablemente, no fueron profetas en su propia compa\'f1\'eda; tanto que llego  ha haber un chiste que describ\'eda PARC como un lugar caracterizado por el desarrollo de brillantes ideas para todos los dem\'e1s. Su influencia en el 'hackerismo' fue generalizada.\par \par Las culturas de ARPANET y del PDP-10 crecieron en fuerza y variedad durante los 70. Las facilidades para las listas de correo electr\'f3nico que hab\'edan sido utilizadas para fomentar la cooperaci\'f3n entre grupos de inter\'e9s a trav\'e9s de los continentes, fue increment\'e1ndose tambi\'e9n con el uso para prop\'f3sitos mas sociales y recreativos. DARPA hizo la vista gorda a todas las actividades t\'e9cnicamente 'no autorizadas'; Comprendieron que la sobrecarga extra era un peque\'f1o precio a pagar por atraer una generaci\'f3n completa de gente brillante hacia el campo de la inform\'e1tica.\par \par Quiz\'e1s la mas conocida de las listas de correo 'sociales' de ARPANET fue la lista SF-LOVERS, para los forofos de la ciencia ficci\'f3n; aun hoy permanece muy activa, de hecho, en la gran 'Internet' en la que se transformo ARPANET. Pero hubo muchos otros, pioneros de un estilo de comunicaci\'f3n que mas tarde pudo ser comercializado para servicios de tiempo compartido, como Compuserve, GEnie y Prodigy ( y mas tarde dominados por AOL).\par \par 3. El ascenso de UNIX\par \par Mientras tanto, sin embargo, fuera en las tierras v\'edrgenes de New Jersey, en alguna parte ha estado llegando desde 1969 que pod\'eda hacer sombra a la tradici\'f3n de PDP-10. El a\'f1o del nacimiento de ARPANET fue tambi\'e9n el a\'f1o que un hacker de Bell Labs llamado Ken Thompson invento UNIX.\par \par Thompson hab\'eda estado metido con el trabajo de desarrollo de un sistema operativo de tiempo compartido llamado Multics, el cual compart\'eda ancestros comunes con ITS. Multics fue un artefacto de pruebas para algunas importantes ideas acerca de como la complejidad de un sistema operativo pod\'eda ocultarse dentro de \'e9l, invisible al usuario, e incluso a la mayor\'eda de los programadores. La idea era hacer el uso desde fuera de Multics (y programar para el) mucho mas simple, para que el trabajo mas real pudiera realizarse.\par \par Los Bell Labs salieron del proyecto cuando Multics mostr\'f3 signos de hinchaz\'f3n a un inservible elefante blanco (el sistema fue promocionado comercialmente posteriormente por Honeywell pero nunca llego a triunfar). Ken Thompson perdi\'f3 el entorno Multics, y comenz\'f3 a probar una implementacion de esas ideas y algunas propias sobre un DEC PDP-7 desahuciado.\par \par Otro hacker llamado Dennis Ritchie invento un nuevo lenguaje llamado 'C'  para usar bajo el embrionario Unix de Thompson. Como Unix, 'C' fue dise\'f1ado para ser agradable, "no cautivo" y flexible. El inter\'e9s por estas herramientas se extendi\'f3 a los Bell Labs, y ellos consiguieron un respaldo en 1971 cuando Thompson y Ritchie consiguieron una oferta para producir lo que llamar\'edamos un sistema de automatizaci\'f3n de oficinas, para uso interno. Pero Thompson y Ritchie ten\'edan puesto el ojo en algo mas grande.\par \par Tradicionalmente los sistemas operativos han sido escritos estrictamente en ensamblador, para conseguir sacar la mayor eficiencia posible de sus maquinas 'Hosts'. Thompson y Ritchie fueron entre los primeros en darse cuenta que la tecnolog\'eda del hardware y el compilador eran lo suficientemente buenos como para que pudiera escribirse un sistema operativo completo en 'C', y por 1974 el entorno completo hab\'eda sido satisfactoriamente portado a muchas maquinas de diferentes tipos.\par \par Esto no hab\'eda ocurrido nunca anteriormente, y las implicaciones fueron enormes. Si Unix pod\'eda presentar el mismo aspecto, las mismas capacidades en maquinas de muy diferentes tipos, esto pod\'eda servir como un entorno de desarrollo para todas ellas. Nunca mas los usuarios tendr\'edan que pagar por un dise\'f1o completo de nuevo software cada vez que una maquina quedara obsoleta. Los 'hackers' pod\'edan portar sus conjuntos de herramientas entre diferentes maquinas, en vez de tener que reinventar el equivalente del fuego y la rueda cada vez.\par \par Junto a la portabilidad, Unix y 'C' ten\'edan tambi\'e9n otras fortalezas importantes. Ambos estaban construidos bajo la filosof\'eda 'Mantelo simple, est\'fapido'. Un programador pod\'eda f\'e1cilmente mantener la estructura l\'f3gica completa de 'C' en su cabeza (no como otros lenguajes anteriores o posteriores) antes que necesitar consultar el manual constantemente; y Unix estaba estructurado como un flexible kit de herramientas de programas simples dise\'f1ados para combinarse entre ellos de manera practica.\par \par La combinaci\'f3n demostr\'f3 ser adaptable a una amplia variedad de tareas inform\'e1ticas, incluyendo muchas completamente imprevistas por los dise\'f1adores. Se esparci\'f3 muy r\'e1pidamente dentro de AT&T, a pesar de la ausencia de cualquier programa de soporte formal para el. Por 1980 se hab\'eda extendido a un amplio numero de universidades y lugares de investigaci\'f3n inform\'e1tica, y miles de hackers lo consideraron su sede.\par \par Las maquinas que hicieron de caballo de tiro de la primera cultura Unix fue el PDP-11 y su descendiente el VAX. Pero, gracias a la portabilidad de Unix, funcionaba sobre la amplia variedad de maquinas que uno pod\'eda encontrar en la totalidad de ARPANET sin cambios sustanciales. Y nadie uso ensamblador; los programas en C fueron f\'e1cilmente portados a todas esas maquinas.\par \par Unix hasta tenia su propio sistema de redes, del tipo UUCP: Baja velocidad y poco fiable, pero barato. Dos maquinas Unix cualquiera pod\'edan intercambiar correo electr\'f3nico punto-a-punto sobre l\'edneas de tel\'e9fono normales y corrientes; esta capacidad estaba construida dentro del sistema, no como un extra opcional. En 1980 el primer sitio USENET comenz\'f3  el intercambio de noticias, formando un gigantesco tabl\'f3n de anuncios distribuido que crecer\'eda r\'e1pidamente mas grande que ARPANET. Los sitios Unix comenzaron a formar su propia naci\'f3n en red alrededor de USENET.\par \par As\'ed mismo algunos sitios Unix estaban en ARPANET. Las culturas PDP-10 y Unix/USENET comenzaron a encontrarse y entremezclarse en los bordes, pero no se mezclaron muy bien al principio. Los hackers del PDP-10 tend\'edan a considerar a la legi\'f3n Unix un grupo de advenedizos, empleando herramientas que parec\'edan rid\'edculamente primitivas cuando se comparaban con las barroca y encantadora complejidad de LISP y ITS. "Cuchillos de piedra y pieles de oso!" murmuraban.\par \par Y todav\'eda hubo un tercera corriente que broto. Los primeros ordenadores personales se vendieron en 1975; Apple se fundo en 1977, y progresaron llegando con una casi incre\'edble rapidez en la creaci\'f3n de j\'f3venes y deslumbrantes hackers. Su lenguaje fue BASIC, tan primitivo que tanto los partisanos de PDP-10 y los aficionados de Unix los consideraban, con desd\'e9n, inferiores.\par \par 4. El fin de los viejos d\'edas\par \par De este modo se llego a 1980; tres culturas, solapadas en los bordes pero agrupadas alrededor de tecnolog\'edas muy diferentes. La cultura ARPANET/PDP-10 emparejada a LISP, MACRO, TOPS-10, ITS y SAIL. La legi\'f3n Unix y C con sus PDP-11,  sus VAX y las diminutas conexiones telef\'f3nicas. Y una an\'e1rquica horda de primerizos entusiastas de la microinform\'e1tica inclinados a llevar el poder de la inform\'e1tica al pueblo.\par \par En medio de esto, la cultura ITS pod\'eda aun pretender ser el orgullo del lugar. Pero nubes tormentosas estaban acumul\'e1ndose sobre el Lab. La tecnolog\'eda del PDP-10, de la cual depend\'eda ITS , estaba envejeciendo, y el propio Lab estaba escindido en bandos por el primer intento de comercializaci\'f3n de la Inteligencia Artificial. Algunos de los mejores del Lab ( y de SAIL y de CMU) estaban siendo tentados fuera con altos salarios en nuevas compa\'f1\'edas.\par \par El golpe mortal llego en 1983, cuando DEC cancelo su proyecto consecutivo del PDP-10, 'J\'fapiter', con el prop\'f3sito de concentrarse en las l\'edneas PDP-11 y VAX. ITS no tenia un gran futuro. Puesto que no era portable, supon\'eda mas esfuerzo del que cualquiera pod\'eda permitirse trasladar ITS al nuevo hardware. La variante de Unix de Berkeley, corriendo en un VAX se convirti\'f3 en el sistema de hackeo por excelencia, y cualquiera con un ojo puesto en el futuro pod\'eda ver que la microcinform\'e1tica estaba imponi\'e9ndose en el poder tan r\'e1pidamente que muy probablemente barrer\'eda a todos los anteriores a ella.\par \par \par }
