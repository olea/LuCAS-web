{\rtf1\ansi
{\fonttbl
{\f0\fswiss Helvetica;}
{\f1\fmodern Courier;}
{\f2\froman Times;}
{\f3\froman Symbol;}
}
{\info{\comment Translated from SGML to RTF w/ Linuxdoc-SGML}}

\page{\pard\plain\keepn\f0\fs36\b\tx576{1 Introducci[oacute]n a este art[iacute]culo}}
{}#{\footnote TOC_0}

${\footnote Introducci_oacute_n_a_este_art_iacute_culo}
+{\footnote browse}
\par\pard\plain\li500\sb200\fi0
{}K{\footnote Introducci[oacute]n a este art[iacute]culo}

En el art[iacute]culo anterior de la serie de bases de datos v[iacute]a la World 
Wide Web vimos los componentes de los que iba a formar parte 
nuestro sistema de acceso a la base de datos y las ventajas de 
utilizar GNU/Linux como sistema de desarrollo para nuestro 
proyecto. En este art[iacute]culo vamos a seguir en la l[iacute]nea dictada por el 
anterior determinando el componente que nos falta para desarrollar el 
sistema, en particular, el lenguaje a trav[eacute]s del cual vamos a 
programar el acceso la base de datos; veremos varias alternativas y nos 
decantaremos (por varias razones) por una de ellas.
\par\pard\plain
\li500{}
\sb200\fi0
Tambi[eacute]n vamos a hacer una breve introducci[oacute]n a la aplicaci[oacute]n que vamos 
a realizar, definiremos el esquema entidad-relaci[oacute]n y la conversi[oacute]n a 
tablas de la misma.
\par\pard\plain
\li500{}
\sb200\fi0
Quedar[aacute] para el siguiente art[iacute]culo el dise[ntilde]o del interfaz en s[iacute] y su 
implementaci[oacute]n con herramientas de generaci[oacute]n autom[aacute]tica.
\par\pard\plain
\li500{}
\sb200\fi0

\page{\pard\plain\keepn\f0\fs36\b\tx576{2 Acceso a bases de datos mediante WWW}}
{}#{\footnote TOC_1}

${\footnote Acceso_a_bases_de_datos_mediante_WWW}
+{\footnote browse}
\par\pard\plain\li500\sb200\fi0
{}K{\footnote Acceso a bases de datos mediante WWW}

El uso de Apache y PostgreSQL nos da la arquitectura necesaria para 
instalar un sistema de acceso a base de datos v[iacute]a WWW, pero como se 
puede dar cuenta el lector, a[uacute]n falta un componente intermedio ¿qui[eacute]n 
act[uacute]a de uni[oacute]n entre el servidor de WWW y el servidor de la Base de 
Datos? (ver {\uldb Figura 1}{\v enlacebd}). 
\par\pard\plain
\li500{}
\sb200\fi0
****************** FIGURA 1*****************************
\par\pard\plain
\li500{}
\sb200\fi0
Es el dise[ntilde]ador el que ha de tomar la decisi[oacute]n de qu[eacute] se puede 
implementar entre la base de datos, y el servidor, aunque en realidad 
puede no ser en absoluto necesario que estos se comuniquen, como ahora 
veremos. Hay dos posibles soluciones a este problema, por un lado se 
puede mantener la arquitectura cliente/servidor a trav[eacute]s del protocolo 
HTTP, y por otro se puede romper esta arquitectura y separar los dos 
servidores de forma que el cliente utilice un m[eacute]todo de acceso 
distinto para cada uno. 
\par\pard\plain
\li500{}
\sb200\fi0
En este segundo caso (presentado en la {\uldb Figura 3}{\v enlacebd3}) el papel del servidor de WWW ser[iacute]a el de ofrecer la 
aplicaci[oacute]n que permite al cliente se comunicarse con la base de datos. 
Esta aplicaci[oacute]n estar[iacute]a necesariamente programada en Java y se 
distribuir[iacute]a como un {\i applet} dentro de una p[aacute]gina HTML. Esta 
posibilidad no va a ser tratada dentro de esta serie ya que rompe el 
esquema que hemos pretendido introducir, el dise[ntilde]o de esta aplicaci[oacute]n 
no ser[iacute]a con tecnolog[iacute]as est[aacute]ndar de la WWW (formularios, p[aacute]ginas, 
etc..) sino que ser[iacute]a realizada {\i ad hoc} para el problema 
particular al que nos enfrentamos. El interfaz gr[aacute]fico se realizar[iacute]a 
con los elementos proporcionados por el lenguaje Java (ya sea 
{\i AWT} o {\i Swing}), y la comunicaci[oacute]n con la base de datos 
se har[iacute]a a trav[eacute]s del est[aacute]ndar JDBC.
\par\pard\plain
\li500{}
\sb200\fi0
******************** FIGURA 3 **************************
\par\pard\plain
\li500{}
\sb200\fi0
Para el primer caso (mostrado en la {\uldb figura 2}{\v enlacebd2}) tenemos varias posibilidades de comunicaci[oacute]n entre el servidor y 
el sistema de base de datos, todas tienen en com[uacute]n el hecho de que nos 
van a permitir "introducir" la aplicaci[oacute]n como elemento dentro de 
p[aacute]ginas HTML normales. Utilizando {\i tags} especiales podremos 
incorporar los elementos de programaci[oacute]n de dichos lenguajes,  
que ser[aacute]n preprocesados antes de enviar la p[aacute]gina al cliente. El 
cliente, por tanto, no ser[aacute] consciente de la existencia de una base de 
datos por debajo por que, por lo que a [eacute]l respecta, los datos se 
devuelven de la misma forma de lo que est[aacute] acostumbrada a ver cualquier 
persona que navega por la WWW. Para realizar la entrada de datos se 
utilizar[aacute]n, pues, formularios como se definen en el est[aacute]ndar HTML, 
cuyos datos ser[aacute]n procesados dentro de la programaci[oacute]n de las otras 
p[aacute]ginas. 
\par\pard\plain
\li500{}
\sb200\fi0
******************** FIGURA 2 *************************
\par\pard\plain
\li500{}
\sb200\fi0
Tenemos varios m[eacute]todos para hacer esto:
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} {\f1 mod[lowbar]perl}. Se trata de un m[oacute]dulo para Apache que permite 
introducir c[oacute]digo Perl ({\i Practical Extraction and Report 
Language}) en las p[aacute]ginas, de forma que se pueda obtener un 
comportamiento din[aacute]mico. As[iacute]mismo, permite acelerar la ejecuci[oacute]n de 
CGI's ya escritos en Perl entre un 400[percnt] y un 2000[percnt], ya que, al 
introducirlo el Apache, desaparece la sobrecarga de inicializaci[oacute]n del 
int[eacute]rprete (que siempre estar[aacute] cargado). Usando Perl, junto con el 
m[oacute]dulo DBI, podemos acceder, de forma transparente, a cualquier base de 
datos. Este mecanismo se usa en m[uacute]ltiples servidores "activos" como 
\url{urlnam}. 
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} PHP/FI ({\i Hypertext Preprocessor}, antes {\i Personal 
HomePage}). Se trata de un lenguaje de programaci[oacute]n que puede 
introducirse dentro de p[aacute]ginas HTML, con una sintaxis parecida a C, 
y funciones similares a las que realiza el lenguaje ASP para el 
Servidor de Informaci[oacute]n de Microsoft, pero se trata de una 
implementaci[oacute]n libre y, por tanto, mucho m[aacute]s abierta. PHP/FI pas[oacute] de 
ser una aplicaci[oacute]n para construir p[aacute]ginas personales (con contadores y 
elementos parecidos) a utilizarse en gran n[uacute]mero de servidores 
profesionales. Este lenguaje soporta la comunicaci[oacute]n con bases de 
datos, y est[aacute] disponible tanto como CGI independiente como m[oacute]dulo en 
Apache. Soporta las bases PostgreSQL, MySQL y msql. 
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} {\f1 www-sql}. Es un sencillo lenguaje para 
introducir consultas SQL en p[aacute]ginas HTML, de forma que [eacute]stas sean 
preprocesadas por un programa antes de enviar la p[aacute]gina al 
cliente. Actualmente s[oacute]lo tiene soporte para las bases de datos 
PostgreSQL y MySQL.
\par\pard\plain
\li500{}
\sb200\fi0
Como se puede ver, las alternativas a la hora de hacer el dise[ntilde]o son 
abundantes y dependen, en gran medida, de la versatilidad que se quiera 
tener a la hora de implementar la aplicaci[oacute]n. La alternativa de 
introducir Perl en las p[aacute]ginas es quiz[aacute]s la m[aacute]s vers[aacute]til, ya que, una 
vez hecho se puede hacer uso de cualquiera de los m[oacute]dulos de Perl para 
casi cualquier funci[oacute]n conocida (como por ejemplo conectarse a 
tel[eacute]fonos m[oacute]viles con WAP). El lenguaje PHP es tambi[eacute]n muy vers[aacute]til, 
aunque no tanto como Perl, y se encuentra m[aacute]s limitado en el acceso a 
base de datos. Finalmente, www-sql es una librer[iacute]a mucho m[aacute]s 
espec[iacute]fica, con un pseudo-lenguaje de programaci[oacute]n mucho menos 
expresivo que los anteriores (tiene pocos sistemas de bucles y pocas 
funciones para manipular los datos).
\par\pard\plain
\li500{}
\sb200\fi0
Como quiera que en el proyecto que vamos a abordar no va a ser en 
exceso complicado, vamos a elegir la alternativa que m[aacute]s sencilla va a 
resultar de implementar, que ser[aacute] {\f1 www-sql} (en su versi[oacute]n para 
PostgreSQL, es decir {\f1 www-pgsql}).
\par\pard\plain
\li500{}
\sb200\fi0

\page{\pard\plain\keepn\f0\fs36\b\tx576{3 Instalaci[oacute]n de www-pgsql}}
{}#{\footnote TOC_2}

${\footnote Instalaci_oacute_n_de_www_pgsql}
+{\footnote browse}
\par\pard\plain\li500\sb200\fi0
{}K{\footnote Instalaci[oacute]n de www-pgsql}

La instalaci[oacute]n de este 
lenguaje ser[aacute] bastante sencilla. Es necesario instalar la 
aplicaci[oacute]n en si, lo cual logramos instalando el paquete 
{\f1 www-pgsql} en un sistema Debian GNU/Linux (para otras 
distribuciones mirar el {\uldb listado 2}{\v listado2}).
\par\pard\plain
\li500{}
\sb200\fi0
************** LISTADO 2******************************+
\par\pard\plain
\li500{}
\sb200\fi0
Una vez hecho esto, se deber[iacute]a haber instalado un programa 
({\f1 www-pgsql}) en la localizaci[oacute]n de los CGI scripts de nuestro 
sistema, este ser[aacute] generalmente {\f1 /usr/lib/cgi-bin}, aunque puede 
modificarse por el fichero de configuraci[oacute]n de Apache 
{\f1 srm.conf} (en la l[iacute]nea {\f1 ScriptAlias /cgi-bin/ 
/usr/lib/cgi-bin/}). Lo que hace falta ahora es modificar tanto  
nuestro servidor de WWW como nuestra base de datos para que sea 
posible acceder a trav[eacute]s de este sistema.
\par\pard\plain
\li500{}
\sb200\fi0
Para modificar a Apache, lo que vamos a hacer es modificar su fichero 
de configuraci[oacute]n {\f1 srm.conf}, para que todos los ficheros que 
terminen en {\f1 .pgsql} sean procesados por el programa que acabamos 
de instalar. A[ntilde]adiendo lo siguiente: 

\par\pard\sb200\keep\li1000{}{\f1 \line
\line
\par\pard\sb200\keep\li1500{}{\f1 # Para www-pgsql \line
AddHandler www-pgsql pgsql \line
Action www-pgsql /cgi-bin/www-pgsql}\line
\par\pard\sb200\li1000{}}
\par\pard\sb200\li500{} 
Esto permitir[iacute]a que cuando  a Apache  le sea solicitado un fichero que tenga 
como extensi[oacute]n {\f1 pgsql}, enviar[aacute], antes de devolverlo al cliente 
que lo ha pedido, este fichero a un programa ({\f1 /cgi-bin/www-pgsql}) 
para que lo procese. Lo que ser[aacute] enviado al cliente ser[aacute] el resultado 
de este programa. Para poder activar esta directiva es necesario que en el fichero {\f1 htttp.conf} est[eacute] definida la carga del m[oacute]dulo {\f1 mime[lowbar]module}.
\par\pard\plain
\li500{}
\sb200\fi0
Para modificar el a gestor de la base de datos PostgreSQL y que 
nuestro {\i script} pueda funcionar, es necesario editar los 
ficheros de configuraci[oacute]n para permitir varias cosas. Por un lado es 
necesario habilitar la posibilidad de conectarse a la base de datos a 
trav[eacute]s de TCP/IP, de no estar habilitado s[oacute]lo los clientes en la 
m[aacute]quina local podr[iacute]an hacerlo. {\f1 www-pgsql} realiza 
una conexi[oacute]n TCP/IP con el sistema de base de datos 
(aunque est[eacute] instalado en el mismo servidor) y ser[aacute]  
necesario habilitarlo, lo que lanzar[aacute] al demonio de gesti[oacute]n de la misma 
con la opci[oacute]n {\f1 -i}. Para ello modificamos el fichero de 
configuraci[oacute]n del gestor de la base de datos (en Debian GNU/Linux 
{\f1 /etc/postgres/postmaster.init}) para a[ntilde]adir lo siguiente:
\par\pard\plain
\li500{}
\sb200\fi0

\par\pard\sb200\keep\li1000{}{\f1 \line
\line
\par\pard\sb200\keep\li1500{}{\f1 # Whether to allow connections through TCP/IP as well as through Unix \line
# sockets: yes/no. \line
# By default, for greater security, we do not allow TCP/IP access. \line
# This means that only users on this machine can access the database. \line
PGALLOWTCPIP=yes}\line
\par\pard\sb200\li1000{}}
\par\pard\sb200\li500{}\par\pard\plain
\li500{}
\sb200\fi0
A continuaci[oacute]n es necesario modificar la configuraci[oacute]n de la base de 
datos para que permita acceso, sin clave, desde el ordenador local, por 
defecto, en el fichero {\f1 /var/postgres/data/pg[lowbar]hba.conf}. Se hace 
esto s[oacute]lo para conexiones a trav[eacute]s de sockets en dominio UNIX (local) 
y a trav[eacute]s de {\i localhost} (direcci[oacute]n IP: 127.0.0.1), pero es 
necesario habilitarlos para nuestra direcci[oacute]n IP. Suponiendo que 
nuestra direcci[oacute]n IP fuera 192.168.1.1, modificar[iacute]amos el fichero para 
que queda de la siguiente forma: 

\par\pard\sb200\keep\li1000{}{\f1 \line
\line
\par\pard\sb200\keep\li1500{}{\f1 # Por defecto, permite cualquier cosa en sockets dominio UNIX y \line
localhost \line
local        all                                         trust \line
host         all         127.0.0.1     255.255.255.255   trust  \line
# A[ntilde]adido para www-pgsql \line
host         all         192.168.1.1   255.255.255.255     trust}\line
\par\pard\sb200\li1000{}}
\par\pard\sb200\li500{}\par\pard\plain
\li500{}
\sb200\fi0
Hay que tener cuidado, sin embargo, ya que esta configuraci[oacute]n abre un posible agujero de seguridad en la base de datos. Si un usuario pone ficheros, al margen 
de la aplicaci[oacute]n que vamos a desarrollar aqu[iacute], con la extensi[oacute]n {\f1 pgsql} y 
un cliente un cliente a ellos podr[aacute] poner arbitrariamente cualquier c[oacute]digo 
SQL dentro de p[aacute]ginas WWW que podr[iacute]an descubrir informaci[oacute]n reservada de 
la base de datos. No vamos a cubrir este aspecto en esta serie de art[iacute]culos, 
pero el usuario interesado podr[aacute] ver la forma de inhabilitar el acceso 
a esta directiva (salvo en las zonas del servidor que le interesen) en 
la documentaci[oacute]n del servidor Apache.
\par\pard\plain
\li500{}
\sb200\fi0
De esta forma tendr[iacute]amos la siguiente configuraci[oacute]n (mostrada en la 
{\uldb figura 4}{\v acceso}): 
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Cuando el servidor de WWW detecte un acceso a una p[aacute]gina 
terminada en {\f1 .pgsql} la enviar[aacute] al programa {\f1 www-pgsql} 
para que la procese.
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} El programa {\f1 www-pgsql} procesar[aacute] las directivas de 
conexi[oacute]n a la base de datos (m[aacute]s adelante se ver[aacute] c[oacute]mo) y las enviar[aacute] 
al gestor de base de datos  de PostgreSQL ({\i postmaster}).
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} El demonio gestor de la base de datos recibir[aacute] las directivas sql 
y las procesar[aacute] (gracias a que le hemos habilitado el acceso).
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} El programa recoge los resultados y los utiliza para modificar 
la presentaci[oacute]n de la p[aacute]gina.
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} La p[aacute]gina con sus modificaciones es devuelta al cliente de WWW 
que la mostrar[aacute] al usuario.
\par\pard\plain
\li500{}
\sb200\fi0
En realidad algunos de estos cambios (as[iacute] como la creaci[oacute]n de un usuario 
para acceder a la base de datos como se ver[aacute] m[aacute]s adelante) son necesarios 
porque  
{\f1 www-pgsql} establece necesariamente conexiones a trav[eacute]s de sockets 
TCP/IP. Lo hace aunque la conexi[oacute]n se realice con el propio ordenador local 
(con el que podr[iacute]a establecer 
conexiones a trav[eacute]s de sockets en el dominio UNIX). Es posible modificar 
las fuentes del programa para cambiar esto,  
pero supondremos que el usuario dispone del programa original sin ning[uacute]n 
tipo de modificaciones.
\par\pard\plain
\li500{}
\sb200\fi0

\page{\pard\plain\keepn\f0\fs36\b\tx576{4 Ejemplo de un proyecto}}
{}#{\footnote TOC_3}

${\footnote Ejemplo_de_un_proyecto}
+{\footnote browse}
\par\pard\plain\li500\sb200\fi0
{}K{\footnote Ejemplo de un proyecto}

Vistas ya todas las herramientas que vamos a utilizar, vamos a ver 
ahora el problema concreto sobre el que se van a aplicar para demostrar 
su uso.
\par\pard\plain
\li500{}
\sb200\fi0
El proyecto que se va a abordar es la creaci[oacute]n de una 
Asociaci[oacute]n de Antiguos Alumnos en Internet, el objetivo es que, a 
trav[eacute]s de un cliente universal (un navegador de la WWW) se pueda 
acceder a una base de datos de informaci[oacute]n de Antiguos Alumnos de una 
determinada organizaci[oacute]n (instituto, escuela o universidad). Desde el servidor 
debe ser posible que las personas den de alta su informaci[oacute]n personal 
y que puedan consultar la informaci[oacute]n de personas de la asociaci[oacute]n a 
trav[eacute]s de formularios creados al efecto. 
\par\pard\plain
\li500{}
\sb200\fi0
Para asentar m[aacute]s el problema, vamos a indicar que el objetivo de dicha 
asociaci[oacute]n va a ser el de poder mantener en contacto a personas 
independientemente de su situaci[oacute]n personal actual (trabajo), de forma 
que una persona que est[eacute] buscando a otra que pertenezca a la 
asociaci[oacute]n, pueda hacerlo de una forma r[aacute]pida. De esta manera se pueden 
perpetuar los lazos de comunicaci[oacute]n existentes entre las personas 
antes de abandonar la organizaci[oacute]n, pero traslad[aacute]ndolos a un nuevo 
medio (correo electr[oacute]nico e Internet). 
\par\pard\plain
\li500{}
\sb200\fi0
En primer lugar vamos a abordar la parte esencial de este proyecto, 
evidentemente, si se estuviera dise[ntilde]ando este proyecto se deber[iacute]an 
plantear objetivos posteriores a [eacute]ste, tales ser[iacute]an, por ejemplo, la 
creaci[oacute]n de un tabl[oacute]n de anuncios para fomentar la comunicaci[oacute]n entre 
asociados o la generaci[oacute]n de una lista de correo para la comunicaci[oacute]n 
hacia todos los asociados de una forma directa. Vamos a centrarnos, 
sin embargo en la primera parte del proyecto.
\par\pard\plain
\li500{}
\sb200\fi0

\page{\pard\plain\keepn\f0\fs36\b\tx576{5 Esquema entidad relaci[oacute]n}}
{}#{\footnote TOC_4}

${\footnote Esquema_entidad_relaci_oacute_n}
+{\footnote browse}
\par\pard\plain\li500\sb200\fi0
{}K{\footnote Esquema entidad relaci[oacute]n}

A la hora de concretar la base de datos que va a necesitar nuestro 
proyecto es necesario hacer uso de una serie de 
metodolog[iacute]as para poder convertir la idea que tenemos del mismo en 
tablas que vayan a ser almacenadas en la base de datos.
\par\pard\plain
\li500{}
\sb200\fi0
El paso del concepto abstracto que se tiene del proyecto a la 
concreci[oacute]n de los elementos f[iacute]sicos (tablas) que maneja una base de 
datos no es, ni mucho menos, un paso inmediato y ni siquiera lleva 
siempre a la misma soluci[oacute]n. Perspectivas distintas y distintos 
objetivos en la aplicaci[oacute]n llevar[aacute]n a desarrollar distintas tablas.
\par\pard\plain
\li500{}
\sb200\fi0
Sin embargo es necesario partir de un diagrama concreto, conocido como 
de {\i entidad-relaci[oacute]n} que nos permite concretar la "idea del 
mundo" de nuestra aplicaci[oacute]n. El dise[ntilde]o de estos diagramas hace 
necesario conocer cierta teor[iacute]a de las bases de datos y tener cierta 
experiencia en su manejo. No se va aqu[iacute] a explicar los pasos dados 
hasta llegar a [eacute]l sino que se va a explicar el elegido, y que se 
muestra en la  {\uldb figura 5}{\v entidadrel}:
\par\pard\plain
\li500{}
\sb200\fi0
********************** FIGURA 5 ****************************
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Entidades: 
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} Persona. Se trata del objeto principal de la base de datos y 
almacena la informaci[oacute]n personal caracter[iacute]stica de un individuo. Tiene 
como atributos la informaci[oacute]n de la direcci[oacute]n de esta persona (calle, 
ciudad, pa[iacute]s, c[oacute]digo postal) y la personal (nombre, 
apellido, dni/pasaporte, fecha de nacimiento). Se le a[ntilde]ade un atributo 
espec[iacute]fico para la base de datos que es la promoci[oacute]n (o a[ntilde]o de salida 
de la organizaci[oacute]n). Como atributo un[iacute]voco de dicha base de datos, y que 
servir[aacute] para identificar a los individuos se va a escoger el n[uacute]mero de 
identidad (o dni), siendo [eacute]ste la clave primaria.
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} Tel[eacute]fono. Se trata de un objeto secundario, con un [uacute]nico 
atributo, el n[uacute]mero de tel[eacute]fono (que en realidad podr[iacute]a partirse en 
prefijo internacional/prefijo nacional, pero que dejamos as[iacute] por 
simplicidad).
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} Correo electr[oacute]nico. Otro objeto secundario con un [uacute]nico 
atributo, la direcci[oacute]n de correo.
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} Empresa. Se trata de la caracterizaci[oacute]n de los lugares de 
trabajo de las personas, se compone de los siguientes atributos: 
nombre, direcci[oacute]n de la empresa (calle, ciudad, pa[iacute]s y c[oacute]digo postal), 
actividad o sector en el que se desarrolla la empresa, y n[uacute]mero de 
empleados. Como caracter[iacute]stica [uacute]nica escogeremos el nombre de la 
misma, de tal forma que no podr[aacute]  haber en la base de datos dos 
empresas con el mismo nombre.
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Relaciones: 
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} Trabaja en. Se trata de una relaci[oacute]n entre personas y empresas, 
que determina que una determinada persona tiene un determinado puesto 
en una empresa, por ello como caracter[iacute]stica de dicha relaci[oacute]n tenemos 
el atributo 'puesto'.
\par\pard\plain
\li500{}
\sb200\fi0
Este dise[ntilde]o lo materializamos en cinco tablas que ser[aacute]n las creadas 
dentro de la base de datos, como veremos m[aacute]s abajo.
\par\pard\plain
\li500{}
\sb200\fi0

\page{\pard\plain\keepn\f0\fs36\b\tx576{6 Creaci[oacute]n de la base de datos}}
{}#{\footnote TOC_5}

${\footnote Creaci_oacute_n_de_la_base_de_datos}
+{\footnote browse}
\par\pard\plain\li500\sb200\fi0
{}K{\footnote Creaci[oacute]n de la base de datos}

Una vez definido el esquema entidad relaci[oacute]n vamos a crear la base de 
datos en nuestro sistema de bases de datos. Primero, vamos a proceder a 
crear dos usuarios para poder gestionar la base de datos, en primer 
lugar el usuario {\i alumni} que ser[aacute] el "due[ntilde]o" de la base de datos de 
nuestro proyecto, y por otro lado un usuarioque ser[aacute] 
utilizado para acceder a los datos. Para acceder a los datos podr[iacute]amos 
utilizar el usuario {\i www-data}, que es el usado por defecto por  
el interfaz {\f1 www-pgsql}, pero es necesario tener en cuenta 
a la hora de crearlo y otorgar permismos que es necesario encerrarlo 
entre comillas (debido al uso del car[aacute]cter '-' en el nombre). 
Tambi[eacute]n podemos utilizar, si nos es m[aacute]s conveniente, el usuario {\i nobody}, 
los ejemplos aqu[iacute] ser[aacute]n con [eacute]ste [uacute]ltimo.
\par\pard\plain
\li500{}
\sb200\fi0
Es necesario crear el usuario 'alumni' dentro de 
nuestro sistema, ya que, adem[aacute]s de ser el que administre la 
base de datos ser[aacute] tambi[eacute]n en su directorio de usuario 
({\f1 /home/alumni/public[lowbar]html}) donde vamos a alojar sus p[aacute]ginas 
(para que sean accesibles como {\f1 http://miservidor/[tilde ]alumni}). Lo 
haremos de la forma habitual (esto es, con {\f1 adduser}) aunque 
convendr[iacute]a dejarlo, de momento con la contrase[ntilde]a bloqueada.
\par\pard\plain
\li500{}
\sb200\fi0
Para terminar con la asignaci[oacute]n de privilegios 
, tenemos que dar acceso a estos usuarios a la base de 
datos.  Para ello tenemos que "convertirnos" en usuario 
{\i postgres}, que es el responsable de dar de alta usuarios dentro 
del sistema de base de datos: haremos (como superusuario) 
{\f1 su - postgres} y crearemos tanto los usuarios como la base de 
datos que van a utilizar, que no ser[aacute] m[aacute]s que un directorio (dentro de 
{\f1 /var/postgres/data/base}). Un ejemplo de la sesi[oacute]n la tenemos 
en el {\uldb listado 1}{\v listado1}.
\par\pard\plain
\li500{}
\sb200\fi0
Conviene distinguir, llegados a este punto, que los usuarios de la 
base de datos no han de existir 
necesariamente como usuarios de nuestro sistema, ya que a la hora 
de conectar con [eacute]sta utilizaremos un nombre de usuario determinado. Sin  
embargo, por simplicidad, aqu[iacute] se van a usar los mismos usuarios en 
nuestro sistema operativo y en el gestor de bases de datos.
\par\pard\plain
\li500{}
\sb200\fi0
********************** LISTADO 1 ***************************
\par\pard\plain
\li500{}
\sb200\fi0
Una vez creados los usuarios 
podemos "convertirnos" en usuario {\i alumni} (con 
{\f1 su - alumni} como superusuario) y 
crear las tablas en la base de datos. Para ello nos conectaremos, bien 
v[iacute]a el interfaz de l[iacute]nea de comandos {\f1 psql} o mediante el 
interfaz gr[aacute]fico {\f1 pgaccess} (ver {\uldb Figura 6}{\v creagrafico}). Dado que el interfaz de texto es m[aacute]s ilustrativo 
para el administrador es el que vamos a tratar aqu[iacute]. Las [oacute]rdenes SQL 
para crear las tablas las tenemos en el {\uldb listado 3}{\v listado3}, para ejecutarlas, s[oacute]lo tendremos que conectarnos a 
la base de datos con {\f1 psql alumni} y ejecutarlas tal cual est[aacute]n 
escritas all[iacute] (teniendo en cuenta s[oacute]lo que tras mandar una orden SQL 
hay que terminarla con el car[aacute]cter ';'). 
\par\pard\plain
\li500{}
\sb200\fi0
********************** FIGURA 6 *******************************
\par\pard\plain
\li500{}
\sb200\fi0
********************* LISTADO 3 ****************************
\par\pard\plain
\li500{}
\sb200\fi0
Lo [uacute]nico que quedar[aacute] tras crear las tablas es dar los permisos al usuario 
{\i nobody} para que pueda acceder a [eacute]stas, lo hacemos con 
la siguiente orden SQL: {\f1 grant select on empresa, persona, 
trabaja[lowbar]en, usa[lowbar]mail, usa[lowbar]tfo to nobody}. Una vez hecho esto 
podr[iacute]amos ver los permisos actuales con {\f1 \z}.
\par\pard\plain
\li500{}
\sb200\fi0
******************** FIGURA 7 ********************
\par\pard\plain
\li500{}
\sb200\fi0
En general, se pueden ver todas las [oacute]rdenes que podemos enviar desde el 
interfaz con {\f1 \h} y todas las [oacute]rdenes administrativas 
importantes (listar tablas, permisos, usuarios...) las vemos con 
{\f1 \?}. Conviene acudir a la p[aacute]gina de manual ({\f1 man psql}) 
para conocer m[aacute]s sobre esta herramienta y a la documentaci[oacute]n de 
PostgreSQL (en Debian GNU/Linux se instala con el paquete 
{\f1 postgresql-doc}) en {\f1 /usr/doc/postgresql}.
\par\pard\plain
\li500{}
\sb200\fi0

\page{\pard\plain\keepn\f0\fs36\b\tx576{7 Resumen}}
{}#{\footnote TOC_6}

${\footnote Resumen}
+{\footnote browse}
\par\pard\plain\li500\sb200\fi0
{}K{\footnote Resumen}

En este art[iacute]culo se ha abordado el concepto de interfaz entre la base 
de datos y el servidor de WWW que es el que nos va a permitir, m[aacute]s 
adelante, enlazar, a trav[eacute]s de la programaci[oacute]n en p[aacute]ginas HTML,  
el interfaz del usuario con la base de datos.  
Ya hemos creado nuestra base de datos de ejemplo 
con el que trabajaremos en el siguiente art[iacute]culo, lo [uacute]nico que nos 
falta es crear el interfaz v[iacute]a WWW sobre el que se va a construir la 
aplicaci[oacute]n final.
\par\pard\plain
\li500{}
\sb200\fi0

\page{\pard\plain\keepn\f0\fs36\b\tx576{8 Sumarios}}
{}#{\footnote TOC_7}

${\footnote Sumarios}
+{\footnote browse}
\par\pard\plain\li500\sb200\fi0
{}K{\footnote Sumarios}

¿Qu[eacute] act[uacute]a de uni[oacute]n entre el servidor y la base de datos?.
\par\pard\plain
\li500{}
\sb200\fi0
Por su sencillez, escogemos www-sql como alternativa.
\par\pard\plain
\li500{}
\sb200\fi0
Es necesario modificar Apache y PostgreSQL para preparar el interfaz.
\par\pard\plain
\li500{}
\sb200\fi0
Se va a abordar un ejemplo concreto.
\par\pard\plain
\li500{}
\sb200\fi0
La definici[oacute]n del esquema entidad relaci[oacute]n es necesaria.
\par\pard\plain
\li500{}
\sb200\fi0
Se van a crear tablas en funci[oacute]n del esquema.
\par\pard\plain
\li500{}
\sb200\fi0
Necesitamos crear la base de datos y los usuarios.
\par\pard\plain
\li500{}
\sb200\fi0
Las conexiones a la base de datos la hacemos como el usuario creado.
\par\pard\plain
\li500{}
\sb200\fi0
Psql es la manera m[aacute]s ilustrativa de modificar la base de datos.
\par\pard\plain
\li500{}
\sb200\fi0
S[oacute]lo falta crear el interfaz WWW.
\par\pard\plain
\li500{}
\sb200\fi0

\page{\pard\plain\keepn\f0\fs36\b\tx576{9 Listados}}
{}#{\footnote TOC_8}

${\footnote Listados}
+{\footnote browse}
\par\pard\plain\li500\sb200\fi0
{}K{\footnote Listados}

\par\pard\plain
\li500{}
\sb200\fi0
{}#{\footnote listado1}
{}K{\footnote listado1}

LISTADO 1-
\par\pard\plain
\li500{}
\sb200\fi0

\par\pard\sb200\keep\li1000{}{\f1 \line
\line
\par\pard\sb200\keep\li1500{}{\f1 postgres@fuego:~$ createuser alumni \line
Enter user's postgres ID or RETURN to use unix user ID: 1013 ->  \line
Is user "alumni" allowed to create databases (y/n) y \line
Is user "alumni" a superuser? (y/n) n \line
createuser: alumno was successfully added \line
postgres@fuego:~$ createuser nobody \line
Enter user's postgres ID or RETURN to use unix user ID: 65534 ->  \line
Is user "nobody" allowed to create databases (y/n) n \line
Is user "nobody" a superuser? (y/n) n \line
createuser: nobody was successfully added \line
Shall I create a database for "nobody" (y/n) n \line
don't forget to create a database for nobody \line
postgres@fuego:~$ createdb alumni}\line
\par\pard\sb200\li1000{}}
\par\pard\sb200\li500{}\par\pard\plain
\li500{}
\sb200\fi0
PIE LISTADO 1: Creaci[oacute]n de los usuarios y de la base de datos
\par\pard\plain
\li500{}
\sb200\fi0
{}#{\footnote listado2}
{}K{\footnote listado2}

LISTADO 2
\par\pard\plain
\li500{}
\sb200\fi0
En general los lenguajes de interfaz a los sistemas de base de datos 
v[iacute]a web podremos encontrarlos incorporados a nuestra distribuci[oacute]n 
favorita, los paquetes relacionados en Debian GNU/Linux se indican a 
continuaci[oacute]n, pero si no dispone de ellos en su distribuci[oacute]n puede 
acudir a lista m[aacute]s abajo para recoger las fuentes e instalarlas en su 
sistema.
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Paquetes relacionados con www-sql: 
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} {\f1 www-mysql}: La interfaz a la base de datos MySQL.
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} {\f1 www-pgsql}: La interfaz a la base de datos PostrgreSQL.
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Paquetes relacionados con el m[oacute]dulo de perl de Apache: 
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} {\f1 libapache-mod-perl}: El m[oacute]dulo de Perl para Apache, 
puede ser utilizado para introducir c[oacute]digo en p[aacute]ginas HTML junto con 
{\f1 libhtml-embperl-perl} [oacute] {\f1 libhtml-ep-eperl}.
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} {\f1 libapache-dbi-perl}: M[oacute]dulo que se puede usar junto con 
un int[eacute]rprete de Perl embebido para acceder transparentemente a bases 
de datos utilizando Perl::DBI.
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} {\f1 libapache-asp-perl}: el sistema ASP ({\f1 Active Server 
Pages}) migrado a Apache y con soporte de Perl.
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} {\f1 libapache-dbilogger-perl}: m[oacute]dulo de Apache para poder 
seguir las transferencias a trav[eacute]s de los accesos DBI.
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Paquetes relacionados con PHP y conectividad a bases de datos: 
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} {\f1 php3-cgi}: ofrece un ejecutable independiente que se 
puede comportar como un CGI para procesar p[aacute]ginas, y usar 
conjuntamente con diversas ampliaciones para conectarse a distintas 
bases de datos:  {\f1 php3-cgi-msql}, {\f1 php3-cgi-mysql}, y 
{\f1 php3-cgi-pgsql}.
\par\pard\plain
\li1500{}
\sb200\fi0
\li1500{}\fi-200{\f3\'B7} {\f1 php3}: m[oacute]dulos para Apache de PHP, se puede utilizar 
conjuntamente con {\f1 php3-mysql}, {\f1 php3-pgsql} y 
{\f1 php3-msql}.
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} www-sql. Se puede leer m[aacute]s informaci[oacute]n en \url{urlnam}, y lo podemos descargar 
de \url{urlnam}, si no disponemos de 
un paquete disponible en nuestra distribuci[oacute]n favorita. 
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Para conocer m[aacute]s sobre la integraci[oacute]n de Perl y Apache, la mejor 
fuente de informaci[oacute]n es \url{urlnam} 
\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Para conocer m[aacute]s sobre PHP, debemos acudir a  
\url{urlnam}, si lo que se desea es descargarlo, ir 
directamente a \url{urlnam}.
\par\pard\plain
\li500{}
\sb200\fi0
PIE LISTADO 2: Informaci[oacute]n de los lenguajes de interfaz WWW-BD
\par\pard\plain
\li500{}
\sb200\fi0
{}#{\footnote listado3}
{}K{\footnote listado3}

LISTADO 3-
\par\pard\plain
\li500{}
\sb200\fi0

\par\pard\sb200\keep\li1000{}{\f1 \line
\line
\par\pard\sb200\keep\li1500{}{\f1 create table empresa  \line
( idempresa             int not null, \line
  nombre                text not null, \line
  ciudad                text, \line
  calle                 text, \line
  pais                  text, \line
  codigo_postal         int, \line
  actividad             text, \line
  num_empleados         int, \line
  pagina_www            text, \line
  primary key (idempresa) \line
) \line
\line
 \line
create table persona \line
( dni                   int not null, \line
  nombre                text, \line
  apellidos             text, \line
  calle                 text, \line
  ciudad                text, \line
  codigo_postal         int, \line
  pais                  text, \line
  graduacion            int, \line
  ingreso               int, \line
  fecha_nacimiento      date, \line
  pagina_personal       text, \line
  primary key (dni) \line
) \line
\line
create table trabaja_en  \line
( dni                   int not null, \line
  idempresa             int not null, \line
  puesto                text, \line
  departamento          text, \line
  primary key (dni, idempresa) \line
) \line
\line
create table usa_mail \line
( dni                   int not null, \line
  e_mail                text not null, \line
  primary key (dni, e_mail) \line
) \line
\line
create table usa_tfo \line
( dni                   int not null, \line
  telefono              text not null, \line
  primary key (dni, telefono) \line
)}\line
\par\pard\sb200\li1000{}}
\par\pard\sb200\li500{}\par\pard\plain
\li500{}
\sb200\fi0
PIE LISTADO 3: Tablas a crear en la base de datos
\par\pard\plain
\li500{}
\sb200\fi0

\page{\pard\plain\keepn\f0\fs36\b\tx576{10 Capturas}}
{}#{\footnote TOC_9}

${\footnote Capturas}
+{\footnote browse}
\par\pard\plain\li500\sb200\fi0
{}K{\footnote Capturas}

\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Figura 1 (enlacebd.png) Pie: Falta un componente entre la base 
de datos y el servidor de WWW. 
{}#{\footnote enlacebd}
{}K{\footnote enlacebd}

\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Figura 2 (enlacebd2.png) Pie: Aplicaci[oacute]n en el lado del servidor. 
{}#{\footnote enlacebd2}
{}K{\footnote enlacebd2}

\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Figura 3 (enlacebd3.png) Pie: Aplicaci[oacute]n en el lado del cliente. 
{}#{\footnote enlacebd3}
{}K{\footnote enlacebd3}

\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Figura 4 (acceso.png) Pie: Pasos del m[eacute]todo de acceso a la base 
de datos 
{}#{\footnote acceso}
{}K{\footnote acceso}

\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Figura 5 (entidadrel.png) Pie: Esquema entidad relaci[oacute]n del proyecto- 
{}#{\footnote entidadrel}
{}K{\footnote entidadrel}

\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Figura 6 (creagrafico.png) Pie: Creaci[oacute]n de las tablas de forma 
gr[aacute]fica. 
{}#{\footnote creagrafico}
{}K{\footnote creagrafico}

\par\pard\plain
\li1000{}
\sb200\fi0
\li1000{}\fi-200{\f3\'B7} Figura 7 (psql.png) Pie: El interfaz de texto de PostgreSQL 
{}#{\footnote psql}
{}K{\footnote psql}

\par\pard\plain
\li500{}
\sb200\fi0

\page{\pard\plain\keepn\f0\fs36\b\tx576{11 Notas de maquetaci[oacute]n}}
{}#{\footnote TOC_10}

${\footnote Notas_de_maquetaci_oacute_n}
+{\footnote browse}
\par\pard\plain\li500\sb200\fi0
{}K{\footnote Notas de maquetaci[oacute]n}

Dado que en este art[iacute]culo tiene muchos listados y capturas quiz[aacute]s el 
texto no llegue, por s[iacute] s[oacute]lo, a las cuatro p[aacute]ginas previstas, pero se 
considera {\i fundamental} incluir todas las gr[aacute]ficas ya que el 
texto tiene muchas referencias a ellos.
\par\pard\plain
\li500{}
\sb200\fi0
Caso de ser necesario el orden de preferencia es el que sigue: figura 
6, figura 3, figura 1, figura 7, figura 2. El resto (capturas y listados) 
conviene no quitarles porque se perder[iacute]a demasiada informaci[oacute]n.
\par\pard\plain
\li500{}
\sb200\fi0

\page{\pard\plain\keepn\f0\fs36\b\tx576{12 Notas de coordinaci[oacute]n}}
{}#{\footnote TOC_11}

${\footnote Notas_de_coordinaci_oacute_n}
+{\footnote browse}
\par\pard\plain\li500\sb200\fi0
{}K{\footnote Notas de coordinaci[oacute]n}

El siguiente art[iacute]culo quiz[aacute]s sea m[aacute]s largo de lo que he planteado 
pero a[uacute]n no lo tengo decidido as[iacute] que quiz[aacute]s me haga falta un art[iacute]culo 
m[aacute]s para cerrar la serie. Cuando haya escrito el siguiente ya lo dir[eacute].
\par\pard\plain
\li500{}
\sb200\fi0
}