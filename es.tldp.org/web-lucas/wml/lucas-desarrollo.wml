##
# Código fuente LuCAS V3
# Copyright (C) 1999 Hispalinux / Juan J. Amor / Ismael Olea
# Programa bajo la proteccion de GPL 2.0
##
# $Id: lucas-desarrollo.wml,v 1.10 2004/02/29 22:06:44 olea Exp $
##

#use wml::std::tags 
#use wml::fmt::isolatin
#use wml::fmt::url
<Symbol DIRECCION_COORDINADOR "olea@hispalinux.es">
<Symbol NOMBRE_COORDINADOR "Ismael Olea">
<Symbol RCSID "$Id: lucas-desarrollo.wml,v 1.10 2004/02/29 22:06:44 olea Exp $">
<isolatin>
#include 'Icabecera.wml' autor="Hispalinux" titulo="LuCAS Desarrollo" resumen="Esfuerzo de investigación y desarrollo de recursos lingüísticos libres."
#include 'Imenu.wml' htmldir="" icondir="../icons/"

<!-- Aqui va el codigo del cuerpo de la pagina -->
<CENTER><B><FONT COLOR="#EE0000"><FONT SIZE=+2>Proyecto LuCAS - LuCAS desarrollo</FONT></FONT></B></CENTER>
<P>

<b>LuCAS Desarrollo</b> es el esfuerzo de investigación y desarrollo de
recursos lingüísticos que nace del seno del <b>Proyecto LuCAS</b> con el fin
de crear y/o implementar las herramientas, técnicas y recursos necesarios
para simplificar y mejorar la producción y publicación de documentación en
general y en español en particular.
<p>
El proyecto se vertebra sobre los siguientes recursos:
<ul>
	<li>El <a href="plan.html">plan de trabajo</a> de LuCAS, con el detalle exacto de los objetivos inmediatos.
	<li>Presentación del <a href="http://www.olea.org/conferencias/doc-conf-editorial-libre/slide001.html">modelo de editorial libre</a> y su <a href="http://www.olea.org/conferencias/doc-conf-lucaseditoriallibre/slide001.html">aplicación a TLDP-ES</a>
	<li>El <A HREF="../Manuales-LuCAS/LBTD/libro-blanco-tecnologias-doc-0.1/book-libro-blanco-tecnologias-lucas.html">Libro blanco de las tecnologías de documentación de LuCAS</A>, en cuya segunda parte se proponen y documentan las tecnologías y herramientas a desarrollar.<br>
	También está disponible como 
	<A HREF="../Manuales-LuCAS/LBTD/libro-blanco-tecnologias-doc-0.1-html.tar.gz">html empaquetado</a>,
	<A HREF="../Manuales-LuCAS/LBTD/libro-blanco-tecnologias-doc-0.1.pdf">pdf</a> y
	<A HREF="../Manuales-LuCAS/LBTD/libro-blanco-tecnologias-doc-0.1.tar.gz">fuentes</a>.
	<p>El libro blanco refleja los trabajos de investigación y conclusiones sobre planes y desarrollos e intenta profundizar en cada tecnología en lo posible.
	<p>Este documento se encuentra en plena evolución y puede hacerse eco de nuevas sugerencias o propuestas.

	<li>Foro de discusión en <a href="http://listas.hispalinux.es/mailman/listinfo/lucas-desarrollo">lucas-desarrollo</a>, al cual puedes suscribirte con <a href="mailto:lucas-desarrollo-request@es.tldp.org?subject=subscribe">este enlace</A>.
	<li><a href="http://cvs.hispalinux.es/cgi-bin/cvsweb/?cvsroot=LuCAS">Servidor CVS</a>.
</ul>

A partir del Libro blanco se han desarrollado las Especificaciones de Donantonio, un sistema bibliográfico de publicación distribuida automática. Están disponibles en castellano e inglés.

<:
#
# Directorio de los documentos I+D
$DIR_PRESEN="../../I+D";
# Directorio a efectos de pagina generada
$DIR_P="../I+D";
#
#
# Funcion: trata_evento(nombre_directorio)
#
sub trata_evento()
{
my $DIR_EVENTO=shift;
my $linea;
my $cont = 0;

my $estado = 3; # estados de lectura: 0 (inicial), 1 (descripcion),
                # 2 (URLAutor), 3 (nombre del evento)

open (DESC,"$DIR_PRESEN/$DIR_EVENTO/.descripcion") || die("No existe $DIR_PRESEN/$DIR_EVENTO/.descripcion");

LECTURA: while ($linea=<DESC>) {

    # Saltamos las lineas vacias o comentadas
    if ( ($linea =~ /^#/ ) || ($linea eq "\n") ) {
	  next LECTURA;
    }

    # Quitamos el fin de linea que no nos interesa
    chop($linea);

    # En el estado nombre evento aparecerá el nombre del mismo
    if ( ($linea =~ /^NOM-EVNT/) && ($estado == 3) ) {
	$NOMEVT = substr($linea,9);

      # Ahora es el momento de imprimir la cabecera de la tabla
	  print <<FINCAB;

<P>
<CENTER><B><FONT COLOR="#EE0000"><FONT SIZE=+2>
$NOMEVT</FONT></FONT></B></CENTER>
<P>

<TABLE BORDER="1"  CELLPADDING=5 CELLSPACING=5 WIDTH="100%">
<TR>
<TD WIDTH="10%" ALIGN=CENTER><U>Ficheros</U></TD>
<TD WIDTH="*" ALIGN=CENTER><U>Descripción</U></TD>
<TD WIDTH="20%"  ALIGN=CENTER><U>Autor</U></TD>
</TR>

FINCAB

    $estado = 0; # pasamos al estado inicial
    next LECTURA;
    }

    # En el estado inicial empieza una conferencia
    if ( ($linea =~ /^INI-CONF/) && ($estado == 0) ) {
	$CONFE = substr($linea,9);
	$estado = 1; # Pasamos al estado de lectura de descripcion
	next LECTURA;
    }

    # Al detectar fin de descripcion ... 
    if ( ($linea =~ /^FIN-PARRAFO/) && ($estado == 1) )
    {
	$estado = 2; # Pasamos al estado de lectura de URL de Autor
	next LECTURA;
    }

    # Si el estado es URL, la linea siguiente es la URL del autor
    if ($estado == 2)
    {
	$URLAUTOR = $linea;

        # Ahora leemos los ficheros
	opendir (DIR2, "$DIR_PRESEN/$DIR_EVENTO/$CONFE") ||
                die("No existe $DIR_PRESEN/$DIR_EVENTO/$CONFE");

	while ($fich = readdir(DIR2))
	{
	    if ( $fich ne '..' && $fich ne '.' && $fich ne '.DAV')
	    {
		push @FICHEROS,$fich
	    }
	}

        # Procedemos a presentar la fila de la tabla de salida

        # Primero la cabecera de la linea de la tabla
	print "<TR>\n<TD VALIGN=\"TOP\">\n";

        # Columna 1: URLs a los distintos formatos de la conferencia
        foreach (@FICHEROS) {
	    print "<A HREF=\"$DIR_P/$DIR_EVENTO/$CONFE/$_\">$_</A><BR>\n";
        }

	print "</TD>\n";

        # Columna 2: La descripción
        print "<TD VALIGN=\"TOP\">\n";
        foreach (@DESCRIPCION) {
            print "$_\n";
        }
	print "</TD>\n";

        # Columna 3: El autor
        print "<TD VALIGN=\"TOP\">\n";
        print "$URLAUTOR\n";
	print "</TD>\n";

        # Terminamos la fila
        print "</TR>\n";

	splice(@FICHEROS);
	splice(@DESCRIPCION); # Vaciamos los arrays usados
	$estado = 0; # Y volvemos al estado inicial
	next LECTURA;
    }

    # Si el estado es de descripcion, acumulamos la linea del parrafo
    if ($estado == 1)
    {
	push @DESCRIPCION,$linea;
	next LECTURA;
    }

    # Llegar aqui es un error
    die ("Error formato: $DIR_PRESEN/$DIR_EVENTO/.descripcion");

}

close (DESC);

# Cerramos la tabla
print "</TABLE>\n\n";

}

# Bucle principal:
# Recorre todos los eventos (cada evento es un directorio)
#

opendir (DIR, $DIR_PRESEN);
@dirleido = readdir(DIR);
closedir (DIR);
@eventos = sort {$b cmp $a} @dirleido;

foreach(@eventos)
{
  if ( $_ ne '..' && $_ ne '.' && $_ ne '.DAV' )
  {
    &trata_evento($_);
  }
}

:>

<p>
Si eres programador y buscas un proyecto en el que colaborar, consulta el libro y en la lista de correo. Confiamos en que dentro de un tiempo dispongamos de una enumeración concreta de tareas pendientes, pero por ahora esta es la única forma.
<p>
Si estás especialmente interesado en los <b>recursos lingüísticos</b> o en la <b>lingüística computacional</b> y tienes ideas y proyectos que encajen en el marco de <b>LuCAS Desarrollo</b> estaremos encantados de oir tus propuestas.

<h2>Forja</h2>
<p>El <a href="http://www.hispalinux.es/modules.php?op=modload&name=phpWiki&file=index&pagename=HispalinuxForja">Proyecto Forja</a> pretende poner en marcha una plataforma tipo SourceForge y extender sus prestaciones.
<p>
Además, <b>TLDP</b> pretende ampliarla añadiendo servicios para servir de infraestructura para la editorial libre.


#include 'Ipie.wml'
</isolatin>
