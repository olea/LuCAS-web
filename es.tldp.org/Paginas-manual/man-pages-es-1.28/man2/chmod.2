.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (michael@moria.de)
.\" Modified Wed Jul 21 20:18:11 1993 by Rik Faith (faith@cs.unc.edu)
.\" Translated 18 Dec 1995 Miguel A. Sepulveda (miguel@typhoon.harvard.edu)
.\" Modified 30 June 1996 Miguel A. Sepulveda (angel@vivaldi.princeton.edu)
.\" Modified Sun Jan 12 14:31:17 MET 1997 by Michael Haardt
.\"   (michael@cantor.informatik.rwth-aachen.de): NFS details
.\" Translation revised 19 April 1998 by Juan Piernas <piernas@dif.um.es>
.\" Translation revised 17 August 1998 by Juan Piernas <piernas@ditec.um.es>
.\"
.TH CHMOD 2 "10 diciembre 1997" "Linux 2.0.32" "Manual del Programador de Linux"
.SH NOMBRE
chmod, fchmod \- cambia los permisos de un fichero
.SH SINOPSIS
.B #include <sys/types.h>
.br
.B #include <sys/stat.h>
.sp
.BI "int chmod(const char *" path ", mode_t " mode );
.br
.BI "int fchmod(int " fildes ", mode_t " mode );
.SH DESCRIPCIÓN
Cambia el modo del fichero dado mediante
.I path
o referido por  
.I fildes

Los modos se especifican mediante un O lógico de los siguientes valores:
.RS
.sp
.TP 1.0i
S_ISUID
04000 asignar ID de usuario al ejecutar
.TP
S_ISGID
02000 asignar ID de group al ejecutar
.TP
S_ISVTX
01000 bit pegajoso (sticky bit) 
.TP
S_IRUSR (S_IREAD)
00400 lectura para el propietario
.TP
S_IWUSR (S_IWRITE)
00200 escritura para el propietario
.TP
S_IXUSR (S_IEXEC)
00100 ejecución/busqueda para el propietario
.TP
S_IRGRP
00040 lectura para el grupo
.TP
S_IWGRP
00020 escritura para el grupo
.TP
S_IXGRP
00010 ejecución/busqueda para el grupo
.TP
S_IROTH
00004 lectura para otros
.TP
S_IWOTH
00002 escritura para otros
.TP
S_IXOTH
00001 ejecución/busqueda para otros
.sp
.RE

El UID efectivo del proceso debe ser cero o debe coincidir con el
propietario del fichero.

Si el UID efectivo del proceso no es cero y el grupo del fichero no coincide
con el ID de grupo efectivo del proceso o con uno de sus IDs de grupo
sumplementarios, el bit S_ISGID se desactivará, aunque esto no provocará que
se devuelva un error.

Dependiendo del sistema de ficheros, los bits \fBS_ISUID\fP y \fBS_ISGID\fP
podrían desactivarse si el fichero es escrito.
En algunos sistemas de ficheros, solo el superusuario puede asignar el
bit pegajoso, lo cual puede tener un significado especial
(por ejemplo, para directorios, un fichero solo puede ser borrado por el
propietario o el superusuario).

En sistemas de ficheros NFS, la restricción de permisos influirá
inmediatamente en los ficheros ya abiertos, ya que el control de acceso se
hacen en el servidor, pero los ficheros abiertos son mantenidos por el
cliente. La ampliación de permisos puede verse retrasada para otros clientes
si en ellos está habilitada la ocultación (caching) de atributos.

.SH "VALOR DEVUELTO"
En caso de éxito, devuelve 0. En caso de error, \-1 y se asigna a la
variable
.I errno
un valor adecuado.
.SH ERRORES
Dependiendo del sistema de ficheros, se pueden devolver otros errores. Los más
generales para
.B chmod
están listados a continuación:

.TP
.B EPERM
El UID efectivo no coincide con el propietario del fichero, o no es cero.
.TP
.B EROFS
El fichero nombrado reside en un sistema de ficheros de sólo lectura.
.TP
.B EFAULT
.I path
apunta fuera del espacio de direcciones accesible.
.TP
.B ENAMETOOLONG
.I path
es demasiado largo.
.TP
.B ENOENT
El fichero no existe.
.TP
.B ENOMEM
No hubo suficiente memoria en el núcleo.
.TP
.B ENOTDIR
Un componente del camino
.I path
no es un directorio.
.TP
.B EACCES
Se ha denegado el permiso de búsqueda para uno de los componentes del camino.
.TP
.B ELOOP
Se han encontrado demasiados enlaces simbólicos al resolver
.IR path .
.TP
.B EIO
Ha ocurrido un error de E/S.
.PP
Los errores comunes para
.B fchmod
son:             
.TP
.B EBADF
El descriptor de fichero
.I fildes
no es válido.
.TP
.B EROFS
Lea nota anterior.
.TP
.B EPERM
Lea nota anterior.
.TP
.B EIO
Lea nota anterior.
.SH "CONFORME A"
La llamada
.B chmod
conforma con SVr4, SVID, POSIX, X/OPEN, 4.4BSD.
SVr4 documenta además las condiciones de error EINTR, ENOLINK y EMULTIHOP,
pero no ENOMEM.  POSIX.1 no documenta las condiciones de error EFAULT,
ENOMEM, ELOOP y EIO, ni las macros \fBS_IREAD\fP, \fBS_IWRITE\fP y
\fBS_IEXEC\fP.
.PP
La llamada
.B fchmod
conforma con 4.4BSD y SVr4.
SVr4 documenta además las condiciones de error EINTR y ENOLINK.
Si se define al menos una de la variables
.B _POSIX_MAPPED_FILES
o
.BR _POSIX_SHARED_MEMORY_OBJECTS,
POSIX exige la función
.B fchmod
y documenta las condiciones de error adicionales ENOSYS y EINVAL, pero no
documenta EIO.
.SH "VÉASE TAMBIÉN"
.BR open (2),
.BR chown (2),
.BR execve (2),
.BR stat (2)
