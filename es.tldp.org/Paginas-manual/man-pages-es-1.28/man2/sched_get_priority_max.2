.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) Tom Bjorkholm & Markus Kuhn, 1996
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" 1996-04-01 Tom Bjorkholm <tomb@mydata.se>
.\"            First version written
.\" 1996-04-10 Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"            revision
.\" Translated into Spanish Mon Feb 2 1998 by Gerardo Aburruzaga
.\" García <gerardo.aburruzaga@uca.es>
.\"
.TH GET_PRIORITY_MAX 2 "2 febrero 1998" "Linux 1.3.81" "Manual del Programador de Linux"
.SH NOMBRE
sched_get_priority_max, sched_get_priority_min  \- obtienen el rango de
prioridades estáticas
.SH SINOPSIS
.B #include <sched.h>
.sp
\fBint sched_get_priority_max(int \fIpolitica\fB);
.sp
\fBint sched_get_priority_min(int \fIpolitica\fB);
.fi
.SH DESCRIPCIÓN
.B sched_get_priority_max 
devuelve el valor de máxima prioridad que puede emplearse con el
algoritmo de planificación identificado por \fIpolitica\fR.
.B sched_get_priority_min 
devuelve el valor de mínima prioridad que puede emplearse con el
algoritmo de planificación identificado por \fIpolitica\fR.
Los valores admitidos para \fIpolitica\fR son
.IR SCHED_FIFO , 
.IR SCHED_RR ,
y
.IR SCHED_OTHER .

Los procesos con valores de prioridad numéricamente más altos se
planifican para antes que los procesos con valores de prioridad
numéricamente más bajos. Así, el valor devuelto por
\fBsched_get_priority_max\fR será mayor que el devuelto por
\fBsched_get_priority_min\fR.

Linux permite un rango para el valor de prioridad estática entre 1 y
99 para
\fISCHED_FIFO\fR y \fISCHED_RR\fR, y la prioridad 0 para
\fISCHED_OTHER\fR. Los rangos de prioridad de planificación para los
distintos algoritmos no son alterables.

El rango de prioridades de planificación puede variar en otros
sistemas POSIX, así que es una buena idea para aplicaciones
transportables el emplear un rango virtual de prioridad y asociarlo
luego al intervalo dado por \fBsched_get_priority_max\fR y
\fBsched_get_priority_min\fR. 
POSIX.1b requiere un rango de al menos 32 entre los valores máximo y
mínimo para \fISCHED_FIFO\fR y \fISCHED_RR\fR.

Los sistemas POSIX en los cuales están disponibles
.B sched_get_priority_max
y
.B sched_get_priority_min
definen
.I _POSIX_PRIORITY_SCHEDULING
en <unistd.h>.

.SH VALOR DEVUELTO
En caso de éxito,
.B sched_get_priority_max
y
.B sched_get_priority_min
devuelven el valor de prioridad máximo/mínimo para la política de
planificación especificada.
En caso de error, se devuelve \-1 y se pone en
.I errno
un valor apropiado.
.SH ERRORES
.TP
.B EINVAL
El parámetro \fIpolitica\fR no identifica una política de planificación definida.
.SH "CONFORME A"
POSIX.1b (antiguamente POSIX.4)
.SH "VÉASE TAMBIÉN"
.BR sched_setscheduler (2), 
.BR sched_getscheduler (2), 
.BR sched_setparam (2), 
.BR sched_getparam (2). 
.PP
.BR sched_setscheduler (2) 
contiene una descripción del esquema de planificación de Linux.
.PP
.I Programming for the real world \- POSIX.4
por Bill O. Gallmeister, O'Reilly & Associates, Inc., ISBN 1-56592-074-0
.br
.I IEEE Std 1003.1b-1993
(estándar POSIX.1b)
.br
.I ISO/IEC 9945-1:1996
