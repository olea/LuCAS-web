.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:40:39 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Fri Jun 25 12:10:47 1999 by Andries Brouwer (aeb@cwi.nl)
.\"
.\" Traducido al castellano (con permiso) por:
.\" Sebastian Desimone (chipy@argenet.com.ar) (desimone@fasta.edu.ar)
.\" Translation fixed on Mon Apr 27 18:22:37 CEST 1998 by
.\"	Gerardo Aburruzaga García <gerardo.aburruzaga@uca.es>
.\" Translation revised Tue Apr 18 2000 by Juan Piernas <piernas@ditec.um.es>
.\"
.TH ECVT 3  "25 junio 1999" "" "Manual del Programador de Linux"
.SH NOMBRE
ecvt, fcvt \- convierte un número en coma flotante a una cadena de caracteres.
.SH SINOPSIS
.B #include <stdlib.h>
.sp
.BI "char *ecvt(double " number ", int " ndigits ", int *" decpt ,
.BI "int *" sign );
.sp
.BI "char *fcvt(double " number ", int " ndigits ", int *" decpt ,
.BI "int *" sign );
.SH DESCRIPCIÓN
La función \fBecvt()\fP convierte \fInumber\fP a una cadena terminada en
NULL de \fIndigits\fP dígitos (donde \fIndigits\fP se reduce a un límite
específico del sistema determinado por la precisión de un `double'),
y devuelve un puntero a la cadena. El dígito de mayor orden es no cero, a
menos que
.I number
sea cero. El dígito de menor orden se redondea.
La cadena en si no contiene un punto decimal. Sin embargo, la posición
del punto decimal relativa al comienzo de la cadena se guarda en
*\fIdecpt\fP.  Un valor negativo para *\fIdecpt\fP significa que el punto
decimal está a la izquierda del comienzo de la cadena. Si el signo de 
\fInumber\fP es negativo, se coloca en *\fIsign\fP un valor distinto de
cero. Si no, se coloca un 0. Si
.I number
es cero, queda sin especificar si *\fIdecpt\fP es 0 o 1.
.PP
La función \fBfcvt()\fP es idéntica a \fBecvt()\fP, excepto en que
\fIndigits\fP especifica el número de dígitos tras el punto decimal.
.SH "VALOR DEVUELTO"
Ambas funciones, \fBecvt()\fP y \fBfcvt()\fP, devuelven un puntero a 
una cadena estática conteniendo la representación ASCII de \fInumber\fP.
La cadena estática se sobreescribe en cada llamada a \fBecvt()\fP o a
\fBfcvt()\fP.
.SH NOTA
Estas funciones están obsoletas. En su lugar, se recomienda
.IR sprintf ().
Las librerías libc4 y libc5 de Linux especifican el tipo de
.I ndigits
como
.BR size_t .
No todas las especializaciones regionales usan un punto como carácter
radical (`punto decimal').
.SH "CONFORME A"
SysVR2, XPG2
.SH "VÉASE TAMBIÉN"
.BR gcvt (3),
.BR setlocale (3),
.BR sprintf (3)
