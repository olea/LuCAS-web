.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Mon Mar 29 22:47:58 1993, David Metcalfe
.\" Modified Sat Jul 24 18:41:27 1993, Rik Faith (faith@cs.unc.edu)
.\" Translated into Spanish Thu Mar  5 15:51:13 CET 1998 by Gerardo
.\" Aburruzaga García <gerardo.aburruzaga@uca.es>
.\"
.TH QSORT 3  "5 Marzo 1998" "GNU" "Manual del Programador de Linux"
.SH NOMBRE
qsort \- ordena un vector
.SH SINOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "void qsort(void *" base ", size_t " nmiemb ", size_t " tam ,
.RS
.BI "int (*" compar ")(const void *, const void *));"
.fi
.SH DESCRIPCIÓN
La función \fBqsort()\fP ordena un vector de \fInmiemb\fP elementos de
tamaño \fItam\fP.  El argumento \fIbase\fP apunta al comienzo del vector.
.PP
Los contenidos del vector se clasifican en orden ascendente de acuerdo
a una función de comparación a la que apunta \fIcompar\fP, que se
llama con dos argumentos que apuntan a los objetos a comparar.
.PP
La función de comparación debe devolver un entero menor que, igual a,
o mayor que cero si el primer argumento se considera respectivamente
menor, igual o mayor que el segundo. Si dos miembros se comparan como
iguales, su orden en el vector clasificado queda indefinido.
.SH "VALOR DEVUELTO"
La función \fBqsort()\fP no devuelve nada.
.SH "CONFORME A"
SVID 3, POSIX, BSD 4.3, ISO 9899
.SH "VÉASE TAMBIÉN"
.BR sort (1)
