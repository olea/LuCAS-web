.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright 1995 James R. Van Zandt <jrv@vanzandt.mv.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.TH STPCPY 3  "3 de Septiembre de 1995" "GNU" "Manual del Programador de Linux"
.SH NOMBRE
stpcpy \- copia una cadena devolviendo un apuntador a su final
.SH SINOPSIS
.nf
.B #include <string.h>
.sp
.BI "char *stpcpy(char *" dest ", const char *" src );
.fi
.SH DESCRIPCIÓN
La función \fBstpcpy()\fP copia la cadena apuntada por \fIsrc\fP
(la cual incluye el caracter `\\0' ) a la matriz apuntada por 
\fIdest\fP.  Las cadenas no deben solaparse, y la cadena destino 
\fIdest\fP tiene que ser lo suficientemente larga para recibir la copia.
.SH "VALOR DEVUELTO"
\fBstpcpy()\fP devuelve un apuntador al \fBfinal\fP de la cadena
\fIdest\fP (esto es, la dirección del caracter terminador nulo) 
y no al comienzo.
.SH EJEMPLO
Por ejemplo, este programa usa \fBstpcpy\fP para concatenar \fBfoo\fP y 
\fBbar\fP para prodcir \fBfoobar\fP, que entonces se imprime.
.nf

          #include <string.h>

          int
          main (void)
          {
            char *to = buffer;
            to = stpcpy (to, "foo");
            to = stpcpy (to, "bar");
            printf ("%s\\n", buffer);
          }
.fi
.SH "CONFORME A"
Esta función no es parte de las normas ANSI o POSIX, y no es
parte habitual de sistemas UNIX, aunque tampoco es una inveción de GNU.
Quizá venga del MS-DOS.
.SH "VÉASE TAMBIÉN"
.BR strcpy "(3), " bcopy "(3), " memccpy "(3), " memcpy "(3), " memmove (3)
