.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1995 James R. Van Zandt <jrv@vanzandt.mv.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" changed section from 2 to 3, aeb, 950919
.\"
.\" Translated into Spanish Wed Mar  4 10:55:46 CET 1998 by Gerardo
.\" Aburruzaga García <gerardo.aburruzagaca.es>
.\"
.TH MKFIFO 3 "4 marzo 1998" "Linux 1.2.13" "Manual del Programador de Linux"
.SH NOMBRE
mkfifo \- construye un fichero especial FIFO (una tubería con nombre)
.SH SINOPSIS
.nf
.B #include <sys/types.h>
.B #include <sys/stat.h>
.sp
.BI "int mkfifo ( const char *" camino ", modo_t " modo " );"
.fi
.SH DESCRIPCIÓN
\fBmkfifo\fP construye un fichero especial FIFO con el nombre \fIcamino\fP.
\fImodo\fP especifica los permisos del FIFO. Son modificados por la máscara
\fBumask\fP del proceso de la forma habitual: los permisos del fichero
recién creado son \fB(\fP\fImodo\fP\fB & ~umask)\fP.
.PP
Un fichero especial FIFO es similar a una interconexión o tubería,
excepto en que se crea de una forma distinta. En vez de ser un canal
de comunicaciones anónimo, un fichero especial FIFO se mete en el
sistema de ficheros mediante una llamada a \fBmkfifo\fP.
.PP
Una vez que Ud. ha creado un fichero especial FIFO de esta forma,
cualquier proceso puede abrirlo para lectura o escritura, de la misma
manera que con un fichero normal. Sin embargo, tiene que ser abierto
en los dos extremos simultáneamente antes de que se pueda proceder a
cualquier operación de entrada o salida. Abrir un FIFO para lectura
normalmente produce un bloqueo hasta que algún otro proceso abre el
mismo FIFO para escritura, y viceversa. Vea
.BR fifo (4)
para el manejo no bloqueante de los ficheros especiales FIFO.
.SH "VALOR DEVUELTO"
El valor de retorno normal, si todo va bien, de \fImkfifo\fP, es \fB0\fP. En
caso de error, se devuelve \fB\-1\fP  (en este caso, \fIerrno\fP
toma un valor apropiado).
.SH ERRORES
.TP
.B EACCES
Uno de los directorios en \fIcamino\fP no tiene permiso de paso (ejecución).
.TP
.B EEXIST
\fIcamino\fP ya existe.
.TP
.B ENAMETOOLONG
O la longitud total de \fIcamino\fP es mayor que
\fBPATH_MAX\fP, o un componente nombre de fichero individual tiene una
longitud superior a \fBNAME_MAX\fP.  En el sistema GNU, no hay un
límite impuesto a la longitud total del nombre de un fichero, pero
algunos sistemas de ficheros pueden poner límites en la longitud de un
componente.
.TP
.B ENOENT
Un componente directorio en \fIcamino\fP no existe o es un enlace
simbólico colgante.
.TP
.B ENOSPC
El directorio o sistema de ficheros no tiene sitio para el nuevo fichero.
.TP
.B ENOTDIR
Un componente usado como directorio en \fIcamino\fP no es, de hecho,
un directorio.
.TP
.B EROFS
\fIcamino\fP se refiere a un sistema de ficheros de lectura exclusiva.
.SH "CONFORME A"
POSIX.1
.SH "VÉASE TAMBIÉN"
.BR mkfifo (1),
.BR read (2),
.BR write (2),
.BR open (2),
.BR close (2),
.BR stat (2),
.BR umask (2),
.BR fifo (4)
