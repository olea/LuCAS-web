.\" From dholland@burgundy.eecs.harvard.edu Tue Mar 24 18:08:15 1998
.\"
.\" This man page was written in 1998 by David A. Holland
.\" and placed in the Public Domain. Polished a bit by aeb.
.\"
.\" Translated 05 Sep 1998 by Carlos Costa Portela (c.c.portela@ieee.org)
.\" Translation revised Sat Oct 3 1998 by Juan Piernas <piernas@ditec.um.es>
.\"
.Dd 24 Marzo 1998
.Dt STDIN 3
.Os "Linux 2.0"
.Sh NAME
.Nm stdin ,
.Nm stdout ,
.Nm stderr
.Nd flujos de la E/S estándar
.Sh SYNOPSIS
.Fd #include <stdio.h>
.Fd extern FILE *stdin;
.Fd extern FILE *stdout;
.Fd extern FILE *stderr;
.Sh DESCRIPCIÓN
Bajo condiciones normales cualquier programa Unix tiene tres flujos de E/S
abiertos cuando arranca: uno para la entrada, otro para la salida y otro para
imprimir los diagnósticos o mensajes de error. Estos flujos están típicamente
ligados al terminal de usuario (ver
.Xr tty 4 )
pero podrían referirse a ficheros o a otros dispositivos, según lo que
decida el proceso padre. (Ver también la sección "Redirección" de
.Xr sh 1 .)
.Pp
El flujo de entrada se conoce como "entrada estándar"; el flujo de salida como
"salida estándar"; y el flujo de error como "error estándar". Estos términos
se abrevian para formar los símbolos utilizados para referirse a esos ficheros,
esto es,
.Nm stdin ,
.Nm stdout
y
.Nm stderr .
.Pp
Cada uno de estos símbolos es una macro de
.Xr stdio 3
del tipo "puntero a FILE" y pueden ser utilizados por funciones como
.Xr fprintf 3
o
.Xr fread 3 .
.Pp
Ya que los FILEs son un envoltorio con búffer sobre los descriptores de fichero
de Unix, los mismos ficheros subyacentes pueden ser accedidos también
utilizando el interface crudo (raw) de ficheros de Unix, es decir, las funciones como
.Xr read 2
y
.Xr lseek 2 . 
Los descriptores de fichero asociados con los flujos
.Nm stdin ,
.Nm stdout
y
.Nm stderr
son 0, 1 y 2, respectivamente. Los símbolos del preprocesador STDIN_FILENO,
STDOUT_FILENO y STDERR_FILENO son definidos con esos valores en
<unistd.h>.
.Pp
Es necesario tener en cuenta que la mezcla de FILEs y descriptores de fichero
crudos puede producir resultados inesperados y se debería evitar.
(Para los masoquistas: POSIX.1, section 8.2.3, describe en detalle cómo se
supone que funciona esta interacción).
Una regla general es que los descriptores de fichero son gestionados por el
núcleo, mientras que stdio es una simple librería. Esto significa, por ejemplo,
que tras un exec, el hijo hereda todos los descriptores de ficheros
abiertos, pero los flujos antiguos se hacen inaccesibles.
.Pp
Ya que los símbolos
.Nm stdin ,
.Nm stdout
y
.Nm stderr
son especificados como macros, las asignaciones a ellos no son portables.
Se puede hacer que los flujos estándares referencien a otros ficheros con
ayuda de la función de librería
.Xr freopen 3 ,
introducida especialmente para hacer posible reasignar
.Nm stdin ,
.Nm stdout
y
.Nm stderr .
Los flujos estándares se cierran llamando a 
.Xr exit 3
y por la terminación normal del programa.
.Sh VÉASE TAMBIÉN
.Xr sh 1 ,
.Xr csh 1 ,
.Xr open 2 ,
.Xr fopen 3 ,
.Xr stdio 3
.Sh CONSIDERACIONES
El flujo
.Nm stderr
no utiliza búffers. El flujo
.Nm stdout
tiene un búffer de líneas cuando apunta a un terminar. Las líneas no aparecen
hasta que se llama a
.Xr fflush 3
o a 
.Xr exit 3
, o se imprime una nueva línea ("\\n"). Esto puede producir resultados
inesperados, especialmente en depuración.
El modo "buffer" de los flujos estándares (o de cualquier otro flujo) se puede
cambiar con llamadas a
.Xr setbuf 3
o
.Xr setvbuf 3
.
Es necesario tener en cuenta que en caso de que
.Nm stdin
esté asociado con un terminal, podría haber también entrada vía buffer en el
driver del terminal, sin relación alguna con el búffer de stdio.
(De hecho, las entradas normales de terminal utilizan un búffer de líneas en
el núcleo).
Esta gestión de entradas del núcleo puede ser modificada utilizando llamadas
como
.Xr tcsetattr 3 ;
ver también
.Xr stty 1 ,
y
.Xr termios 3 .
.Sh ESTÁNDARES
Las macros
.Nm stdin ,
.Nm stdout ,
y
.Nm stderr
cumplen el
.St -ansiC ,
y este estándar también estipula que esos tres flujos se deberían abrir al
comienzo del programa.
