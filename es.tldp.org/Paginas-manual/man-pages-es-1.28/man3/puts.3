.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Sat Jul 24 18:42:59 1993 by Rik Faith (faith@cs.unc.edu)
.\" Translated into Spanish Thu Mar  5 15:51:13 CET 1998 by Gerardo
.\" Aburruzaga García <gerardo.aburruzaga@uca.es>
.\" Translation revised 21 April 1998 by Juan Piernas <piernas@dif.um.es>
.\"
.TH PUTS 3  "4 Abril 1993" "GNU" "Manual del Programador de Linux"
.SH NOMBRE
fputc, fputs, putc, putchar, puts \- salida de caracteres y cadenas
.SH SINOPSIS
.nf
.B #include <stdio.h>
.sp
.BI "int fputc(int " c ", FILE *" flujo ");"
.nl
.BI "int fputs(const char *" "s" ", FILE *" "flujo" ");"
.nl
.BI "int putc(int " c ", FILE *" flujo ");"
.nl
.BI "int putchar(int " c ");"
.nl
.BI "int puts(const char *" "s" ");"
.nl
.BI "int ungetc(int " c ", FILE *" flujo ");"
.SH DESCRIPCIÓN
.B fputc()
escribe el carácter
.IR c ,
modelado a un
.BR "unsigned char" ,
en
.IR flujo .
.PP
.B fputs()
escribe la cadena de caracteres
.I s
en
.IR flujo ,
sin su terminador
.BR '\e0' .
.PP
.B putc()
es equivalente a
.B fputc()
salvo en que puede estar implementada como una macro que evalúe
.I flujo
más de una vez.
.PP
.BI "putchar(" c );
equivale a
.BI "putc(" c , stdout );.
.PP
.BR puts() 
escribe la cadena de caracteres
.I s
y un salto de línea final
en
.IR stdout .
.PP
.BR ungetc()
devuelve el carácter
.IR c ,
modelado a un
.BR "unsigned char" ,
al 
.I flujo
especificado, para que sea devuelto de nuevo en la próxima lectura. La
biblioteca de GNU/Linux permite devolver EOF, aunque esto no es
estándar ANSI C.
.PP
Las llamadas a las funciones descritas aquí pueden mezclarse unas con
otras y con otras funciones de salida de la biblioteca
.B stdio
para el mismo flujo de salida, sin problemas.
.SH "VALOR DEVUELTO"
.BR fputc() , " putc() " y " putchar()"
devuelven el carácter escrito como un
.B unsigned char
modelado a un
.B int
o
.B EOF
en caso de error.
.PP
.BR puts() ", " fputs() " y " ungetc()
devuelven un número no negativo
si acaban bien, o
.B EOF
en caso de error.
.PP
.SH "CONFORMES CON"
C ANSI, POSIX.1
.SH "FALLOS"
No es recomendable mezclar llamadas a funciones de salida de la
biblioteca estándar
.B stdio
con llamadas de bajo nivel a
.B write() 
para el descriptor de fichero asociado con el mismo flujo de salida;
los resultados quedarán indefinidos y muy probablemente no serán los
deseados. 
.SH "VÉASE TAMBIÉN"
.BR write "(2), " fopen "(3), " fwrite "(3), " scanf (3),
.BR gets "(3), " fseek "(3), " ferror (3)
