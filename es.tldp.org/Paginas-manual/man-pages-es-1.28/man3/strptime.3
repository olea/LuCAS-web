.\" Copyright 1993 Mitchum DSouza <m.dsouza@mrc-apu.cam.ac.uk>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified, jmv@lucifer.dorms.spbu.ru, 1999-11-08
.\"
.\" Translated into Spanish Wed Mar 11 14:10:24 CET 1998 by
.\"	Gerardo Aburruzaga García <gerardo.aburruzaga@uca.es>
.\" Translation revised Wed Apr 19 2000 by Juan Piernas <piernas@ditec.um.es>
.\"
.TH STRPTIME 3 "11 marzo 1998"  "GNU" "Manual del Programador de Linux"
.SH NOMBRE
strptime \- convierte una cadena de caracteres que representa un
tiempo a una estructura tm
.SH SINOPSIS
.B #include <time.h>
.sp
.BI "char *strptime(const char *" s ", const char *" format ,
.BI "struct tm *" tm );
.SH DESCRIPCIÓN
.LP
.IX  "strptime function"  ""  "\fLstrptime()\fP \(em date and time conversion"
.B strptime(\|)
es la función complementaria de
.B strftime(\|)
y convierte la cadena de caracteres a la que apunte
.I s
a un valor de tiempo, que se guarda en la estructura
.B tm
a la que apunte
.IR tm ,
utilizando el formato especificado por
.IR format .
.I format
es una cadena de caracteres que consiste en descriptores de campos y
caracteres de texto, una reminiscencia de
.BR scanf (3).
Cada descriptor de campo consiste en un carácter de porcentaje
.B %
seguido por otro carácter que especifica el reemplazo para el
descriptor de campo.
Todos los otros caracteres de la cadena
.I format
deben tener un carácter concordante en la cadena de entrada. Excepciones son
los espacios en blanco de la cadena de formato que pueden concordar con cero
o más espacios en blanco de la cadena de entrada.
.PP
La función \fBstrptime()\fP procesa la cadena de entrada de derecha a
izquierda. Cada uno de los tres posibles elementos de entrada (espacio en
blanco, literal o formato) se tratan uno detrás de otro. Si no se puede
hacer coincidir la entrada con la cadena de formato, la función se detiene.
El resto de las cadenas de formato y de entrada no se procesa.
.PP
Se admiten los siguientes descriptores de campo:
.RS
.TP
.B %%
lo mismo que
.B %
.TP
.B %a
.PD 0
.TP
.B %A
día de la semana, empleando los nombres de los días de la semana
correspondientes a la localización; puede especificarse el nombre
abreviado o el completo
.PD
.TP
.B %b
.PD 0
.TP
.B %B
.TP
.B %h
mes, empleando los nombres de meses correspondientes a la
localización; puede especificarse el nombre abreviado o el completo.
.PD
.TP
.B %c
fecha y hora como %x %X
.TP
.B %C
fecha y hora, en la representación local de la fecha y hora en formato largo
.TP
.B %d
.PD 0
.TP
.B %e
día del mes (1--31; se permiten pero no se requieren ceros iniciales)
.PD
.TP
.B %D
fecha como %m/%d/%y
.TP
.B %H
.PD 0
.TP
.B %k
hora (0--23;  se permiten pero no se requieren ceros iniciales)
.PD
.TP
.B %I
.PD 0
.TP
.B %l
hora (0--12;  se permiten pero no se requieren ceros iniciales)
.PD
.TP
.B %j
día juliano (número del día del año, de 001 a 366)
.TP
.B %m
número del mes (1--12; se permiten pero no se requieren ceros iniciales)
.TP
.B %M
minuto (0-59;  se permiten pero no se requieren ceros iniciales)
.TP
.B %p
el equivalente local de
.SM AM
o de
.SM PM
.TP
.B %r
hora como %I:%M:%S %p
.TP
.B %R
hora como %H:%M
.TP
.B %S
segundos (0--61; se permiten pero no se requieren ceros iniciales. El
segundo extra es para años bisiestos)
.TP
.B %T
hora como %H:%M:%S
.TP
.B %w
número de día de la semana (0--6) con el Domingo como primer día de la
semana
.TP
.B %x
fecha, empleando el formato local para la fecha
.TP
.B %X
hora, empleando el formato local
.TP
.B %y
año dentro de la centuria (0--99; se permiten pero no se requieren
ceros iniciales. Desafortunadamente esto presume que estamos atascados
en el siglo XX puesto que se suma 1900 automáticamente a este número
para el campo tm_year)
.TP
.B %Y
año, incluyendo la centuria (por ejemplo, 1998)
.RE
.LP
No se distinguen mayúsculas de minúsculas en la concordancia de
elementos como nombres de meses o días de la semana.
.LP
La estructura de tiempo descompuesto \fItm\fP se define en \fI<time.h>\fP
como sigue:
.sp
.RS
.nf
.ne 12
.ta 8n 16n 32n
struct tm
{
	int	tm_sec;			/* segundos */
	int	tm_min;			/* minutos */
	int	tm_hour;		/* horas */
	int	tm_mday;		/* día del mes */
	int	tm_mon;			/* mes */
	int	tm_year;		/* año */
	int	tm_wday;		/* día de la semana */
	int	tm_yday;		/* día del año */
	int	tm_isdst;		/* ¿cambio horario? */
};
.ta
.fi
.RE
.SH "VALOR DEVUELTO"
El valor devuelto por la función es un puntero al primer carácter no
procesado en esta llamada a la función. En el caso de que la cadena de
entrada contenga más caracteres de los que necesita la cadena de formato,
el valor devuelto apunta justo después del último carácter de entrada
consumido. En el caso de que se consuma toda la cadena de entrada, el valor
devuelto apunta al byte NUL al final de la cadena. Si \fBstrptime()\fP no
puede hacer coincidir toda la cadena de formato y, por tanto, se ha
producido un error, la función devuelve \fBNULL\fP.
.SH "VÉASE TAMBIÉN"
.BR strftime "(3), " time "(2), " setlocale "(3), " scanf (3)
.SH OBSERVACIONES
.LP
La especificación de la función en el estándar XPG es bastante vaga.
Omite algunos trozos importantes de información. Sobre todo, no
especifica qué ocurre con aquellos elementos de \fBtm\fP que no son
directamente inicializados por los diferentes formatos. Diversas
implementanciiones en sistemas Unix diferentes pueden variar en esto.
.PP
La implementación de la libc de GNU no toca aquellos campos que no son
directamente inicializados. Excepciones son los elementos
.IR tm_wday
y
.IR tm_yday
que se recalculan si cualquiera de los elementos de año, mes o fecha cambia.
.PP
Esta función sólo está disponible en bibliotecas posteriores a la versión
4.6.5. Los ficheros de cabecera de las librerías libc4 y libc5 de Linux
definen el prototipo de forma incondicional. Los ficheros cabecera de glibc2
proporcionan un prototipo sólo cuando se define _XOPEN_SOURCE o _GNU_SOURCE.
.PP
La función sólo admite aquellas localizaciones especificadas en
.BR locale "(7)"

