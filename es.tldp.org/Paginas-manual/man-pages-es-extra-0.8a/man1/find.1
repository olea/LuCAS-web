.\" -*- nroff -*-
.\" Translated into Spanish on Mon May 25 1998 by Gerardo Aburruzaga
.\" García <gerardo@cica.es>
.\"
.TH FIND 1L
.SH NOMBRE
find \- busca ficheros en un árbol de directorios
.SH SINOPSIS
.B find
[camino...] [expresión]
.SH DESCRIPCIÓN
Esta página del Manual documenta la versión de GNU de
.BR find .
.B find
recorre el árbol de directorio cuya raíz reside en cada nombre de
fichero dado, evaluando de izquierda a derecha la expresión
especificada, según las reglas de precedencia (vea la sección de
OPERADORES), hasta que se conoce el resultado (la parte izquierda es
falsa para operaciones \fIand\fR, verdadera para \fIor\fP), en cuyo punto
.B find
se mueve al siguiente nombre de fichero.
.PP
El primer argumento que comience con `\-', `(', `)', `,', o `!' se
toma como el principio de la expresión; cualesquier argumentos antes
de él son caminos a recorrer, y cualesquier argumentos tras él forman
el resto de la expresión. Si no se da ningún camino, se toma el
directorio de trabajo. Si no se da ninguna expresión, se sobreentiende
la expresión `\-print'.
.PP
.B find
acaba con código de estado 0 si todos los ficheros se procesan
satisfactoriamente, mayor que 0 si ocurre un error. 
.SH EXPRESIONES
.P
La expresión está hecha de opciones (que afectan a todas las
operaciones en vez de al procesamiento de un fichero específico, y
siempre devuelven verdad), comparaciones (que devuelven un valor verdadero o
falso), y acciones (que tienen efectos colaterales y devuelven un
valor verdadero o falso), todos separados por operadores. Donde se
omita el operador, se sobreentiende \-and. Si la expresión no contiene
ninguna acción, aparte de \-prune, se ejecuta \-print en todos los
ficheros para los que la expresión dé verdadera.
.SS OPCIONES
.P
Todas las opciones siempre devuelven verdadero. Siempre tienen efecto,
en lugar de ser procesadas solamente cuando se alcance su sitio en la
expresión. Por lo tanto, por claridad, lo mejor es ponerlas siempre al
principio de la expresión.
.IP \-daystart
Mide los tiempos (para \-amin, \-atime, \-cmin, \-ctime, \-mmin, y \-mtime)
desde el principio del día de hoy en lugar de desde hace 24 horas.
.IP \-depth
Procesa cada contenido del directorio antes del propio directorio.
.IP \-follow
Desreferencia enlaces simbólicos. Implica \-noleaf.
.IP "\-help, \-\-help"
Muestra un sumario del modo de empleo de
.B find
y acaba.
.IP "\-maxdepth \fIniveles\fR"
Desciende como mucho \fIniveles\fP (un entero no negativo) niveles de
directorios por debajo de los argumentos de la línea de
órdenes. `\-maxdepth 0' significa que sólo se aplicarán las comparaciones y
acciones a los argumentos de la línea de órdenes.
.IP "\-mindepth \fIniveles\fR"
No aplica comparaciones ni acciones a niveles menores de \fIniveles\fP (un
entero no negativo). `\-mindepth 1' significa procesar todos los
ficheros excepto los argumentos de la línea de órdenes.
.IP \-mount
No descender a directorios en otros sistemas de ficheros. Un nombre
alternativo para \-xdev, por compatibilidad con algunas otras
versiones de
.BR find .
.IP "\-noleaf"
No optimiza suponiendo que los directorios contienen dos
subdirectorios menos que lo que dice su número de enlaces duros. Esta
opción es necesaria cuando se recorren sistemas de ficheros que no
siguen el convenio de Unix sobre los enlaces de directorios, como
sistemas de ficheros ISO-9660 (de un CD-ROM) o FAT (de MS-DOS o
Windows), o puntos de montaje de volúmenes AFS (Andrew File
System). Cada directorio de un sistema de ficheros normal de Unix
(UFS, ext2fs, etc.) tiene por lo menos dos enlaces duros: su nombre y
su entrada `.' (punto). Además, sus subdirectorios (si los hay) tienen
cada uno una entrada `..' enlazada a este directorio. Cuando
.B find
está examinando un directorio, después de que ha hecho stat() en dos
subdirectorios menos de lo que dice el número de enlaces del
directorio, sabe que el resto de las entradas del directorio son
no-directorios (ficheros `hoja' [`leaf' en inglés] en el árbol del
directorio). Si sólo hay que examinar los nombres de ficheros, no hay
necesidad de llamar a stat() sobre ellos, lo cual proporciona un
incremento significativo en la velocidad del recorrido. 
.IP "\-version, \-\-version"
Muestra el número de versión de \fBfind\fP y acaba. 
.IP \-xdev
No desciende a directorios en otros sistemas de ficheros. Vea
\fI\-mount\fP más arriba.
.SS COMPARACIONES
.P
Los argumentos numéricos pueden especificarse como
.IP \fI+n\fP
para mayor que
.IR n ,
.IP \fI\-n\fP
para menor que
.IR n ,
.IP \fIn\fP
para exactamente
.IR n .
.IP "\-amin \fIn\fR"
Se ha accedido al fichero por última vez hace \fIn\fP minutos. 
.IP "\-anewer \fIfichero\fR"
Se ha accedido al fichero por última vez más recientemente que cuando
\fIfichero\fP fue modificado. 
\-anewer está afectado por \-follow solamente si \-follow va antes de
\-anewer en la línea de órdenes.
.IP "\-atime \fIn\fR"
Se ha accedido al fichero por última vez hace \fIn\fP×24 horas. 
.IP "\-cmin \fIn\fR"
El status del fichero se cambió por última vez hace \fIn\fP minutos.
.IP "\-cnewer \fIfichero\fR"
El status del fichero se cambió por última vez más recientemente que
cuando se modificó \fIfichero\fP.
\-cnewer está afectado por \-follow solamente si \-follow va antes de
\-cnewer en la línea de órdenes.
.IP "\-ctime \fIn\fR"
EL status del fichero se cambió por última vez hace \fIn\fP×24 horas.
.IP \-empty
El fichero está vacío y es o un fichero regular o un directorio.
.IP \-false
Siempre da falso.
.IP "\-fstype \fItipo\fR"
El fichero está en un sistema de ficheros de tipo \fItipo\fP. Los
tipos válidos de sistemas de ficheros varían según la versión de Unix;
una lista incompleta de tipos de sistemas de ficheros que se aceptan
en algunas versiones de Unix es: ufs, 4.2, 4.3, nfs, tmp, mfs, S51K,
S52K.  Se puede usar \-printf con la directiva %F para ver los tipos
de sus sistemas de ficheros. (En Linux, cat /proc/filesystems dará una
lista de los tipos de sistemas de ficheros reconocidos.)
.IP "\-gid \fIn\fR"
El GID numérico del fichero es \fIn\fP.
.IP "\-group \fIgrupo\fR"
El fichero pertenece al grupo \fIgrupo\fP (se permite un GID numérico).
.IP "\-ilname \fIpatrón\fR"
Como \-lname, pero la concordancia no hace caso de mayúsculas ni minúsculas.
.IP "\-iname \fIpatrón\fR"
Como \-name, pero la concordancia no hace caso de mayúsculas ni
minúsculas. Por ejemplo, los patrones `fo*' y `F??' concuerdan con los
nombres de ficheros `Foo', `FOO', `foo', `fOo', etc.
.IP "\-inum \fIn\fR"
El fichero tiene de número-i \fIn\fP.
.IP "\-ipath \fIpatrón\fR"
Como \-path, pero la concordancia no hace caso de mayúsculas ni minúsculas.
.IP "\-iregex \fIpatrón\fR"
Como \-regex, pero la concordancia no hace caso de mayúsculas ni minúsculas.
.IP "\-links \fIn\fR"
El fichero tiene \fIn\fR enlaces.
.IP "\-lname \fIpatrón\fR"
El fichero es un enlace simbólico cuyos contenidos concuerdan con el
patrón del shell \fIpatrón\fP. Los metacaracteres no tratan
especialmente a `/' ni a `.'.
.IP "\-mmin \fIn\fR"
Los datos del fichero fueron modificados por última vez hace \fIn\fP minutos.
.IP "\-mtime \fIn\fR"
Los datos del fichero fueron modificados por última vez hace
\fIn\fP×24 horas.
.IP "\-name \fIpatrón\fR"
La base del nombre del fichero (el camino sin los directorios)
concuerda con el patrón del shell \fIpatrón\fP. Los metacaracteres
(`*', `?' y `[]') no concuerdan con un `.' al principio del nombre
base. Para omitir un directorio y los ficheros bajo él, emplee
\-prune; vea un ejemplo en la descripción de \-path.
.IP "\-newer \fIfichero\fR"
El fichero fue modificado más recientemente que \fIfichero\fP.
\-newer es afectado por \-follow solamente si \-follow va antes de
\-newer en la línea de órdenes.
.IP \-nouser
Ningún usuario se corresponde con el UID numérico del fichero.
.IP \-nogroup
Ningún grupo se corresponde con el GID numérico del fichero.
.IP "\-path \fIpatrón\fR"
El nombre del fichero concuerda con el patrón del shell
\fIpatrón\fP. Los metacaracteres no tratan de forma especial a `/' o a
`.'; así, por ejemplo,
.br
.in +1i
find . \-path './sr*sc'
.br
.in -1i
mostrará una entrada para un directorio llamado './src/misc' (si es
que existe). Para omitir un árbol entero de directorio, emplee \-prune
en vez de comprobar cada fichero en el árbol. Por ejemplo, para pasar
el directorio `src/emacs' y todos los ficheros y directorios bajo él,
y mostrar los nombres de los otros ficheros encontrados, haga algo
como esto:
.br
.in +1i
find . \-path './src/emacs' -prune -o -print
.br
.in -1i
.IP "\-perm \fImodo\fR"
Los bits de permiso del fichero son exactamente \fImodo\fP (octal o
simbólico). Los modos simbólicos utilizarán 0 como punto de partida.
.IP "\-perm \-\fImodo\fR"
Todos los bits de permiso \fImodo\fP están activos para el fichero.
.IP "\-perm +\fImodo\fR"
Cualquiera de los bits de permiso de \fImodo\fP está activo para el
fichero. 
.IP "\-regex \fIpatrón\fR"
El nombre del fichero concuerda con la expresión regular
\fIpatrón\fP. Esta concordancia es en el camino entero, no es una
búsqueda. Por ejemplo, para un fichero llamado
`./fubar3', Ud. puede emplear la expresión regular `.*bar.' or `.*b.*3',
mas no `b.*r3'.
.IP "\-size \fIn\fR[bckw]"
El fichero emplea \fIn\fP unidades de espacio.  Las unidades son
bloques de 512 bytes si no se dice otra cosa o si la letra `b' sigue a
\fIn\fP, bloques de bytes si se pone la letra `c', kilobytes con la
`k', o palabras de 2 bytes con la `w'. El tamaño no cuenta bloques
indirectos, pero sí cuenta bloques en ficheros esparcidos que no están
realmente asignados. 
.IP \-true
Siempre da verdadero.
.IP "\-type \fIc\fR"
El fichero es de tipo \fIc\fR:
.RS
.IP b
especial de bloques (tamponado)
.IP c
especial de caracteres (sin tamponar)
.IP d
directorio
.IP p
tubería con nombre (FIFO)
.IP f
fichero regular
.IP l
enlace simbólico
.IP s
zócalo (socket)
.RE
.IP "\-uid \fIn\fR"
El UID numérico del propietario del fichero es \fIn\fP.
.IP "\-used \fIn\fR"
Se accedió por última vez al fichero \fIn\fP días después de que se
cambió por última vez su estado.
.IP "\-user \fIusuario\fR"
El propietario del fichero es el usuario \fIusuario\fP (se permite un
UID numérico).
.IP "\-xtype \fIc\fR"
Lo mismo que \-type a menos que el fichero sea un enlace
simbólico. Para enlaces simbólicos: si no se ha dado \-follow, verdad
si el fichero es un enlace a un fichero de tipo \fIc\fP; si no, verdad
si \fIc\fP es `l'. En otras palabras, para enlaces simbólicos, \-xtype
comprueba el tipo del fichero que \-type no comprueba.
.SS ACCIONES
.IP "\-exec \fIorden\fR ;"
Ejecuta \fIorden\fR; verdad si se devuelve el status 0. Todos los
argumentos que siguen a
.B find
se toman como de la orden hasta que se encuentre uno consistente en
`;'. La cadena `{}' se reemplaza por el nombre del fichero que se está
procesando; en cualquier sitio de los argumentos de la orden, no sólo
en argumentos donde esté sola, como en algunas otras versiones de 
.BR find .
Ambas construcciones pueden necesitar `escaparse' (con una `\e') o
entrecomillarse, para protegerlas de la expansión que efectuaría el
shell. La orden se ejecuta en el directorio de comienzo.
.IP "\-fls \fIfichero\fR"
Verdad; como \-ls pero escribe en \fIfichero\fP como \-fprint.
.IP "\-fprint \fIfichero\fR"
Verdad; escribe el nombre completo del fichero en \fIfichero\fP. Si
\fIfichero\fP no existe cuando se ejecuta \fBfind\fP, se crea; si
existe, se trunca. Los nombres de ficheros ``/dev/stdout'' y
``/dev/stderr'' se manejan de manera especial; se refieren a la salida
estándar y la salida estándar de errores, respectivamente.
.IP "\-fprint0 \fIfichero\fR"
Verdad; como \-print0 pero escribe en \fIfichero\fR como \-fprint.
.IP "\-fprintf \fIfichero\fR \fIformato\fR"
Verdad; como \-printf pero escribe en \fIfichero\fR como \-fprint.
.IP "\-ok \fIorden\fR ;"
Como \-exec pero pregunta primero al usuario (en la entrada estándar);
si la respuesta no comienza con `y' o `Y' (o quizás el equivalente
local, en español `s' o `S'), no se ejecuta la orden, y devuelve falso.
.IP \-print
Verdad; imprime el nombre completo del fichero en la salida estándar,
seguido por un salto de línea.
.IP \-print0
Verdad; imprime el nombre completo del fichero en la salida estándar,
seguido por un carácter nulo. Esto permite que nombres de ficheros que
contengan saltos de línea sean correctamente interpretados por
programas que procesen la salida de \fBfind\fP.
.IP "\-printf \fIformato\fR"
Verdad; imprime \fIformato\fR en la salida estándar, interpretando
secuencias de escape `\e' y directivas `%'. Las anchuras de campo y
precisiones pueden especificarse como en la función de C `printf'. De
forma contraria a lo que hace \-print, \-printf no añade un salto de
línea al final de la cadena. Las secuencias de escape y directivas
son: 
.RS
.IP \ea
La campana de alarma.
.IP \eb
Espacio atrás.
.IP \ec
Para la impresión de este formato inmediatamente y vuelca el búfer de
salida. 
.IP \ef
Salto de página.
.IP \en
Salto de línea.
.IP \er
Retorno de carro.
.IP \et
Tabulador horizontal.
.IP \ev
Tabulador vertical.
.IP \e\e
Una barra inclinada inversa literal (`\e').
.PP
Un carácter `\e' seguido por otro cualquiera distinto de los
anteriores se trata como un carácter ordinario, por lo que se
imprimirán ambos.
.IP %%
Un signo de porcentaje literal `%'.
.IP %a
El tiempo de último acceso al fichero en el formato devuelto por la
función de C `ctime()'.
.IP %A\fIk\fP
El tiempo de último acceso al fichero en el formato especificado por
\fIk\fP, que es o bien `@' o bien una directiva válida para la función
de C `strftime()'. Los valores posibles para \fIk\fP se listan abajo;
algunos de ellos pueden no estar disponibles en todos los sistemas,
debido a diferencias en la función `strftime()' entre sistemas.
.RS
.IP @
segundos desde el 1 de Enero de 1970 a las 00:00 h GMT.
.PP
Campos de tiempo:
.IP H
hora (00..23)
.IP I
hora (01..12)
.IP k
hora ( 0..23)
.IP l
hora ( 1..12)
.IP M
minuto (00..59)
.IP p
AM o PM, en su representación local
.IP r
hora, formato de 12 horas (hh:mm:ss [AP]M)
.IP S
segundo (00..61)
.IP T
tiempo, formato de 24 horas (hh:mm:ss)
.IP X
representación local de la hora (H:M:S)
.IP Z
zona horaria (e.g., CET), o nada si el huso horario no es determinable
.PP
Campos de fecha:
.IP a
nombre local abreviado del día de la semana (Dom..Sáb)
.IP A
nombre local completo del día de la semana, longitud variable (Domingo..Sábado)
.IP b
nombre local abreviado del mes (Ene..Dic)
.IP B
nombre local completo del mes, longitud variable (Enero..Diciembre)
.IP c
fecha y hora en representación local (Sáb 4 Nov 12:02:33 CET 1989)
.IP d
día del mes (01..31)
.IP D
fecha (mm/dd/aa)
.IP h
lo mismo que b
.IP j
día del año (juliano) (001..366)
.IP m
mes numérico (01..12)
.IP U
número de la semana del año con el Domingo como primer día de la
semana (00..53)
.IP w
día de la semana, numérico (0..6)
.IP W
número de la semana del año como el Lunes como el primer día de la
semana (00..53)
.IP x
representación local de la fecha (dd/mm/aa)
.IP y
los últimos dos dígitos del año (00..99)
.IP Y
año (1970...)
.RE
.IP %b
El tamaño del fichero en bloques de 512 bytes (redondeado)
.IP %c
El tiempo del último cambio del estado del fichero en el formato
devuelto por la función de C `ctime()'.
.IP %C\fIk\fP
El tiempo del último cambio del estado del fichero en el formato
especificado por \fIk\fP, que es el mismo que para %A.
.IP %d
La profundidad en el árbol del directorio; 0 significa que el fichero
es un argumento de la línea de órdenes.
.IP %f
El nombre del fichero sin los directorios (sólo el último elemento del
camino).
.IP %F
Tipo del sistema de ficheros donde está el fichero; este valor puede
emplearse para
\-fstype.
.IP %g
El nombre de grupo al que pertenece el fichero, o el GID numérico si
el grupo no tiene nombre.
.IP %G
El GID numérico del grupo al que pertenece el fichero.
.IP %h
Los directorios del camino del fichero (todos los componentes del
camino menos el último elemento).
.IP %H
Argumento de la línea de órdenes bajo el que se ha encontrado el fichero.
.IP %i
El número-i del fichero (en base 10).
.IP %k
El tamaño del fichero en bloques de un kB (redondeado).
.IP %l
El objeto de un enlace simbólico (la cadena vacía si el fichero no es
un enlace simbólico).
.IP %m
Los bits de permiso del fichero (en octal).
.IP %n
El número de enlaces duros del fichero.
.IP %p
El nombre del fichero.
.IP %P
El nombre del fichero con el nombre del argumento de la línea de
órdenes bajo el que se ha encontrado, quitado.
.IP %s
El tamaño del fichero en bytes.
.IP %t
El tiempo de última modificación del fichero en el formato devuelto
por la función de C `ctime()'.
.IP %T\fIk\fP
El tiempo de última modificación del fichero en el formato
especificado por \fIk\fP, que es el mismo que para %A.
.IP %u
El nombre del usuario propietario del fichero, o el UID si el usuario
no tiene nombre.
.IP %U
El UID numérico del propietario del fichero.
.PP
Un carácter `%' seguido por cualquier otro distinto de los recién
mencionados no es tenido en cuenta (pero el otro carácter se imprime).
.RE
.IP \-prune
Si \-depth no se da, devuelve verdad; no desciende por el directorio
en curso.
.br
Si \-depth se da, devuelve falso; no tiene otro efecto.
.IP \-ls
Verdad; lista el fichero actual en el formato de `ls \-dils' en la
salida estándar. Los números de bloques son en bloques de 1 kB, a menos
que la variable de ambiente
POSIXLY_CORRECT esté definida, en cuyo caso los bloques son de 512 B.
.SS OPERADORES
.P
Listados en orden de precedencia decreciente:
.IP "( \fIexpr\fR )"
Fuerza la precedencia.
.IP "! \fIexpr\fR"
Verdad si \fIexpr\fR es falsa.
.IP "\-not \fIexpr\fR"
Lo mismo que ! \fIexpr\fR.
.IP "\fIexpr1 expr2\fR"
Y (implícito); \fIexpr2\fR no se evalúa si \fIexpr1\fR es falsa.
.IP "\fIexpr1\fR \-a \fIexpr2\fR"
Lo mismo que \fIexpr1 expr2\fR.
.IP "\fIexpr1\fR \-and \fIexpr2\fR"
Lo mismo que \fIexpr1 expr2\fR.
.IP "\fIexpr1\fR \-o \fIexpr2\fR"
O; \fIexpr2\fR no se evalúa si \fIexpr1\fR es verdad.
.IP "\fIexpr1\fR \-or \fIexpr2\fR"
Lo mismo que \fIexpr1\fR \-o \fIexpr2\fR.
.IP "\fIexpr1\fR , \fIexpr2\fR"
Lista; \fIexpr1\fR y \fIexpr2\fR son, ambos, evaluados siempre.
El valor de \fIexpr1\fR se descarta; el valor de la lista es el de \fIexpr2\fR.
.SH "VÉASE TAMBIÉN"
\fBlocate\fP(1L), \fBlocatedb\fP(5L), \fBupdatedb\fP(1L), \fBxargs\fP(1L)
\fBFinding Files\fP (``Buscando Ficheros''; en interactivo con Info, o
impreso en papel).
