.\" Translated into Spanish on Mon Jul 27 through Sat Aug 8 1998 by
.\" Gerardo Aburruzaga García <gerardo@cica.es>
.\"
'\" t
.TH MTOOLS 1 "14 Marzo 1997" MTOOLS MTOOLS
'\" t
.de TQ
.br
.ns
.TP \\$1
..

.tr \(is'
.tr \(if`
.tr \(pd"

.ds St Mtools
.oh '\\*(St''%'
.eh '%''\\*(St'
.\" " para font-lock 
.PP
.SH NOMBRE
mtools - utilidades para acceder a discos DOS en UNIX
.PP
.SH INTRODUCCIÓN
Mtools es una colección de herramientas de dominio público que permite
a sistemas Unix manipular ficheros de MS-DOS: leer, escribir y mover
ficheros en un sistema de ficheros MS-DOS (típicamente un disco
flexible). Hasta donde es razonable, cada programa intenta emular la
orden equivalente de MS-DOS. Sin embargo, las restricciones
innecesarias y otras rarezas de DOS no se emulan. Por ejemplo, es
posible mover subdirectorios de un subdirectorio a otro.
.PP
Mtools es suficiente para dar acceso a sistemas de ficheros
MS-DOS. Por ejemplo, órdenes como \fR\&\f(CWmdir a:\fR funcionan en el
disquete \fR\&\f(CWa:\fR sin ningún montaje preliminar ni otro
procedimiento de inicio (suponiendo que el
\&\fR\&\f(CW\(if/etc/mtools.conf\(is\fR funciona en su máquina). Con
MTOOLS, uno puede cambiar disquetes también sin tener que desmontar y
montarlos. 
.PP
.SH "DÓNDE OBTENER MTOOLS"
.iX "c fallos"
.iX "c parches ALFA"
.iX "c parches"
.iX "c diffs"
.iX "c lista de correo"
.PP
MTOOLS puede encontrarse por lo menos en los sitios siguientes (y sus
espejos): 
 
.nf
.ft 3
.in +0.3i
ftp://prep.ai.mit.edu/pub/gnu/mtools-3.8.tar.gz
ftp://linux.wauug.org/pub/knaff/mtools/mtools-3.8.tar.gz
ftp://sunsite.unc.edu/pub/Linux/utils/disk-management/mtools-3.8.tar.gz
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Antes de informar de un fallo, asegúrese de que no ha sido ya
corregido en los parches Alfa que pueden encontrarse en:
 
.nf
.ft 3
.in +0.3i
http://www.poboxes.com/Alain.Knaff/mtools
ftp://linux.wauug.org/pub/knaff/mtools
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Nota: Es altamente probable que la 1ª dirección de Internet haya dejado de
existir tras Noviembre de 1997. La dirección wauug es permanente.
.PP
Estos parches se denominan
\&\fR\&\f(CWmtools-\fR\fIversion\fR\fR\&\f(CW-\fR\fIddmm\fR\fR\&\f(CW.taz\fR,
donde version significa la versión base, \fIdd\fR es el día y \fImm\fR
es el mes. Debido a falta de espacio, yo usualmente sólo dejo el
parche más reciente.
.PP
Hay una lista de correo de MTOOLS en  mtools@linux.wauug.org.  Por
favor, envíe todos los informes de fallos a esta lista. Puede
suscribirse mandando un mensaje con la sola frase 
`subscribe mtools@linux.wauug.org' en el cuerpo del mensaje a 
majordomo@linux.wauug.org. 
.\" No he observado que las @'s den problemas, así que ya las he
.\" puesto juntas y no traduzco esta nota (N. del T.)
.\"(N.B. Please remove the spaces
.\"around the "@" both times. I left them there in order to fool
.\"spambots.)  
Los anuncios de nuevas versiones de mtools también se mandarán a la
lista, además de a los grupos de noticias de anuncios sobre Linux. 
La lista de correo se archiva en
http://linux.wauug.org/hypermail/mtools/latest .
.PP
.SH "CARACTERÍSTICAS COMUNES DE TODAS LAS ÓRDENES DE MTOOLS"
.PP
.SS "Opciones y nombres de ficheros"
.iX "c Nombres de ficheros"
.iX "c Opciones"
Los caminos de fichero en MS-DOS se componen de una letra de
dispositivo seguida por dos puntos, un subdirectorio y un nombre de fichero.
Sólo la última parte es obligatoria, las primeras son opcionales. Los
nombres de fichero sin la letra de dispositivo, para MTOOLS se
refieren a ficheros de Unix. Los nombres de directorio pueden emplear
como separador \&'\fR\&\f(CW/\fR' o '\fR\&\f(CW\e\fR'.  El uso del
separador '\fR\&\f(CW\e\fR' o comodines requiere que los nombres se
entrecomillen para protegerlos del shell. Sin embargo, los comodines
en nombres de fichero de Unix no deben encerrarse entre comillas
porque \fBqueremos\fP que el shell los expanda.
.PP
Las rutinas de "concordancia de patrones" de expresiones regulares
siguen las reglas al estilo Unix. Por ejemplo, `\fR\&\f(CW*\fR'
concuerda con todos los ficheros  de MS-DOS en lugar de
`\fR\&\f(CW*.*\fR'.  Los bits de atributo de archivo, oculto, lectura
exclusiva y sistema, no se tienen en cuenta durante la concordancia de
patrones.
.PP
Todas las opciones emplean el signo \fR\&\f(CW-\fR (menos) como su
primer carácter, no
\&\fR\&\f(CW/\fR como en MS-DOS.
.PP
La mayoría de las órdenes de MTOOLS permiten como parámetros varios
nombres de fichero, lo que no sigue los convenios de MS-DOS, pero es
más amigable.
.PP
La mayoría de órdenes de MTOOLS permiten opciones que les instruyen
sobre cómo manejar las coincidencias de nombres de ficheros. Vea la
sección sobre coincidencias de nombres de ficheros para más
detalles. Todas las órdenes aceptan la opción \fR\&\f(CW-V\fR que
muestra el número de versión, y la mayoría acepta la opción
\fR\&\f(CW-v\fR, que cambia al modo prolijo. En modo prolijo, estas
órdenes muestran el nombre del fichero de MS-DOS sobre el que actúan,
a menos que se diga otra cosa. Vea la sección Órdenes, para una
descripción de las opciones específicas de cada orden.
.PP
.SS "Letras de dispositivo"
.PP
El significado de las letras de dispositivo depende de las
arquitecturas objetivo, o destino. Sin embargo, en la mayoría de
ellas, la unidad A es la primera unidad de disquete, la unidad B es la
segunda unidad de disquete (si la hay), la unidad J es una unidad Jaz,
si la hay, y la unidad Z es una unidad Zip (si la hay). En aquellos
sistemas donde el nombre del dispositivo derive del ID. SCSI, se
supone que la unidad Jaz está en el objetivo SCSI 4, y la Zip en el 5
(éstos son los valores predeterminados de fábrica). En Linux, ambas
unidades se suponen en la segunda unidad del bus SCSI (/dev/sdb). Todo
esto puede cambiarse mediante un fichero de configuración (vea la
sección Configuración).
.PP
.SS "Directorio de trabajo actual"
.iX "p mcd (introducción)"
.iX "c Directorio"
.iX "c Directorio de trabajo"
.iX "c Directorio de trabajo en curso"
.iX "c Directorio predeterminado"
.PP
La orden \fR\&\f(CWmcd\fR (\(ifmcd\(is) se emplea para establecer el
dispositivo y el directorio de trabajo actuales (relativos al sistema
de ficheros MS-DOS), de otro modo se supone que el valor
predeterminado es \fR\&\f(CWA:/\fR. Sin embargo, al contrario de en
MS-DOS, sólo hay un directorio de trabajo para todas las unidades, y
no una por cada unidad.
.PP
.SS "Nombres de fichero largos al estilo VFAT"
.iX "c Nombre de fichero largo"
.iX "c Nombres de fichero al estilo de Windows 95"
.iX "c Nombres de ficheros al estilo VFAT"
.iX "c Nombre de fichero primario (nombres largos)"
.iX "c Nombre de fichero secundario (nombres largos)"
.PP
Esta versión de MTOOLS admite nombres de ficheros largos al estilo de
VFAT. Si un nombre de fichero Unix es demasiado largo como para caber
en un nombre corto de DOS, se guarda como un nombre largo de VFAT, y
se genera un nombre corto acompañante. Este nombre corto es lo que se
ve cuando se examina el disco con una versión de DOS anterior a la 7.0
(esto es, anterior a Windows95).
La tabla siguiente muestra algunos ejemplos de nombres cortos:
.PP
 
.nf
.ft 3
.in +0.3i
Nombre largo    nombre MS-DOS   Razón del cambio
------------    -------------   ----------------------
estoesuntest    ESTOES~1        nombre demasiado largo
alain.knaff     ALAIN~1.KNA     extensión muy larga
prn.txt         PRN~1.TXT       PRN es un dispositivo
\&\&.abc            ABC~1           no hay ningún nombre
frio+calor      FRIO_CA~1       carácter ilegal
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Como se ve, las siguientes transformaciones ocurren al hacer derivar
un nombre corto:
.TP
* \ \ 
Los caracteres ilegales se reemplazan por subrayados. Los caracteres
ilegales son \fR\&\f(CW;+=[]',\e"*\e\e<>/?:|\fR.
.\" " 
.TP
* \ \ 
Los puntos extra, que no pueden interpretarse como un separador de
nombre principal  y extensión, se quitan.
.TP
* \ \ 
Se genera un número \fR\&\f(CW~\fR\fIn\fR.
.TP
* \ \ 
El nombre se acorta de modo que quepa en la limitación 8+3.
.PP
El nombre de fichero inicial al estilo de Unix (corto o largo) se
llama también el \fInombre primario\fP, y el nombre corto derivado de
él se llama también el nombre \&\fIsecundario\fP.
.PP
Ejemplo:
 
.nf
.ft 3
.in +0.3i
 mcopy /etc/motd a:Nombremuylargo
.fi
.in -0.3i
.ft R
.lp
 
\&\fRMtools crea una entrada VFAT para Nombremuylargo y usa NOMBREMU
como un nombre corto. Nombremuylargo es el nombre primario, y NOMBREMU
es el secundario.
 
.nf
.ft 3
.in +0.3i
 mcopy /etc/motd a:motd
.fi
.in -0.3i
.ft R
.lp
 
\&\fRMotd encaja en los límites de nombres de fichero DOS. Mtools no
necesita hacer derivar otro nombre. Motd es el nombre primario, y no
hay nombre secundario.
.PP
En resumen: el nombre primario es el nombre largo, si existe, o el
nombre corto si no hay nombre largo.
.PP
Aunque VFAT es mucho más flexible que FAT, aún hay nombres que no son
aceptables, incluso en VFAT. Aún quedan algunos caracteres ilegales
(\fR\&\f(CW\e"*\e\e<>/?:|\fR), y los nombres de dispositivo todavía
están reservados.
.\" "
.PP
 
.nf
.ft 3
.in +0.3i
Nombre Unix     Nombre largo    Razón del cambio
-----------     ------------    -------------------------------
prn             prn-1           PRN es un nombre de dispositivo
ab:c            ab_c-1          carácter ilegal
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Como puede ver, si un nombre largo es ilegal ocurren las siguientes
transformaciones: 
.TP
* \ \ 
Los caracteres ilegales se reemplazan por subrayados,
.TP
* \ \ 
Se genera un número \fR\&\f(CW-\fR\fIn\fR.
.PP
.SS "Coincidencias de nombres"
.iX "c Coincidencias de nombres"
.iX "c Nombres de fichero duplicados"
.iX "c Sobreescribiendo ficheros"
.iX "c Nombre de fichero primario (coincidencias de nombres"
.iX "c Nombre de fichero secundario (coincidencias de nombres"
.PP
Cuando se escribe un fichero en disco, su nombre largo (nombre
primario) o corto puede colisionar con el de un fichero o directorio
ya existente. Esto puede suceder para todas las órdenes que creen
nuevas entradas de directorio, como
\&\fR\&\f(CWmcopy\fR, \fR\&\f(CWmmd\fR, \fR\&\f(CWmren\fR, \fR\&\f(CWmmove\fR,
\&\fR\&\f(CWmwrite\fR y \fR\&\f(CWmread\fR. Cuando ocurre una
coincidencia de nombres, MTOOLS le pregunta qué debe hacer. Ofrece
algunas elecciones:
.TP
\&\fR\&\f(CWoverwrite\fR\ 
Sobreescribe el fichero existente. No es posible sobreescribir un
directorio con un fichero.
.TP
\&\fR\&\f(CWrename\fR\ 
Renombra el fichero creado recientemente. MTOOLS pregunta el nuevo
nombre de fichero.
.TP
\&\fR\&\f(CWautorename\fR\ 
Renombra el fichero recién creado. MTOOLS escoge él mismo un nombre,
sin preguntar.
.TP
\&\fR\&\f(CWskip\fR\ 
Pasa este fichero de largo y se mueve al siguiente, si lo hay.
.PP
Para escoger una de estas acciones, teclee su primera letra cuando se
le pregunte. Si emplea una letra minúscula, la acción sólo se aplica a
este fichero solo; si usa una letra mayúscula, la acción se aplica a
todos los ficheros, y no se le preguntará más.
.PP
También puede escoger las acciones (para todos los ficheros) en la
línea de órdenes, cuando llame a MTOOLS:
.TP
\&\fR\&\f(CW-o\fR\ 
Sobreescribe los nombres primarios de forma predeterminada.
.TP
\&\fR\&\f(CW-O\fR\ 
Sobreescribe los nombres secundarios de forma predeterminada.
.TP
\&\fR\&\f(CW-r\fR\ 
Renombra los nombres primarios de forma predeterminada.
.TP
\&\fR\&\f(CW-R\fR\ 
Renombra los nombres secundarios de forma predeterminada.
.TP
\&\fR\&\f(CW-a\fR\ 
Auto-renombra los nombres primarios de forma predeterminada.
.TP
\&\fR\&\f(CW-A\fR\ 
Auto-renombra los nombres secundarios de forma predeterminada.
.TP
\&\fR\&\f(CW-s\fR\ 
Se salta los nombres primarios de forma predeterminada.
.TP
\&\fR\&\f(CW-S\fR\ 
Se salta los nombres secundarios de forma predeterminada.
.TP
\&\fR\&\f(CW-m\fR\ 
Pregunta al usuario qué hacer con los nombres primarios.
.TP
\&\fR\&\f(CW-M\fR\ 
Pregunta al usuario qué hacer con los nombres secundarios.
.PP
De forma predeterminada, se le pregunta al usuario en el caso de
coincidencias en el nombre primario, y se auto-renombra el nombre
secundario. 
.PP
Si ocurre una coincidencia de nombre en un directorio Unix, MTOOLS
sólo pregunta si sobreescribir el fichero o saltárselo.
.PP
.SS "Sensibilidad a la caja tipográfica del sistema de ficheros VFAT"
.iX "c Sensibilidad a la caja tipográfica"
.PP
El sistema de ficheros VFAT es capaz de recordar la caja tipográfica
(i.e., si las letras son minúsculas o mayúsculas) de los nombres de
ficheros. Sin embargo, no se permite que los nombres de ficheros que
se diferencian sólo en la caja tipográfica coexistan en el mismo
directorio. Por ejemplo, si Ud. almacena un fichero llamado
NombreFicheroLargo en un sistema de ficheros VFAT, mdir muestra este
fichero como NombreFicheroLargo y no como Nombreficherolargo. Sin
embargo, si Ud. luego intenta añadir NombreFicherolargo al mismo
directorio, no puede, porque no se mira la caja tipográfica para las
comprobaciones de coincidencia de nombres.
.PP
El sistema de ficheros VFAT permite almacenar la caja tipográfica de
un nombre de fichero en el byte de atributo, si todas las letras del
nombre de fichero tienen la misma caja, y si todas las letras de la
extensión tienen la misma caja también. MTOOLS usa esta información
cuando muestra los ficheros, y también para generar el nombre de
fichero Unix cuando copia con mcopy a un directorio Unix. Esto puede
llevar a resultados inesperados cuando se aplica a ficheros escritos
con una versión anterior a 7.0 de DOS: de hecho, los nombres de
ficheros al viejo estilo DOS transforman todas las letras a
mayúsculas. Esto es diferente del comportamiento de la versión antigua
de MTOOLS que lo que hacía era generar nombres de ficheros Unix con
todas las letras en minúsculas.
.PP
.SS "Formatos de alta capacidad"
.iX "c Formatos especiales"
.iX "c Formatos de alta capacidad"
.iX "c Formatos raros"
.iX "c Formatos extraños"
.iX "c Formatos, alta capacidad"
.iX "c Mejoras de Linux (Formatos de Alta Capacidad)"
.PP
MTOOLS admite una variedad de formatos que permiten almacenar más
datos en discos que lo usual. Debido a las diferentes capacidades de
los sistemas operativos, estos formatos no se aceptan en todos los
ss.oo. MTOOLS reconoce estos formatos de forma transparente donde
se acepten.
.PP
Para formatear estos discos, se necesita usar una herramienta
específica del sistema operativo. Para Linux, se pueden encontrar
herramientas adecuadas para disquetes en el paquete
\&\fR\&\f(CWfdutils\fR en los sitios siguientes, aparte quizás de en
su distribución favorita, como Debian o similar:
 
.nf
.ft 3
.in +0.3i
\&\fR\&\f(CWftp://linux.wauug.org/pub/knaff/fdutils/.
\&\fR\&\f(CWftp://sunsite.unc.edu/pub/Linux/utils/disk-management/fdutils-*
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Vea las páginas del Manual incluidas en ese paquete para más detalles.
Use \&\fR\&\f(CWsuperformat\fR para todos los formatos salvo XDF; y
para éste, emplee \&\fR\&\f(CWxdfcopy\fR.
.PP
.SS "  Más sectores"
.iX "c fdformat"
.iX "c vgacopy"
.iX "c discos DMF"
.iX "c Windows 95 (discos DMF)"
.PP
El método más antiguo de meter más datos en un disco es emplear más
sectores y más pistas. Aunque el formato estándar usa 80 pistas y 18
sectores (en un disco de alta densidad de 3½''), es posible usar hasta
83 pistas (en la mayoría de las unidades de disquete) y hasta 21
sectores. Este método permite almacenar hasta 1743 kB en un disco de
alta densidad de 3½''. Sin embargo, los discos de 21 sectores son
el doble de lentos que los estándares de 18 sectores, porque éstos
están empaquetados tan juntos que se necesita intercalarlos. Este
problema no ocurre en los formatos de 20 sectores.
.PP
Estos formatos se aceptan en numerosas utilidades shareware de DOS como
\&\fR\&\f(CWfdformat\fR y \fR\&\f(CWvgacopy\fR. En su infinita
soberbia, Bill Gate$ creyó que él inventó esto, y lo llamó
\fR\&\f(CW\(ifdiscos DMF\(is\fR, o \&\fR\&\f(CW\(ifdiscos formateados
de Windows\(is\fR. Pero en realidad, ¡ya existía desde hacía años! 
MTOOLS admitía estos formatos en Linux, en SunOS y en el DELL Unix PC.
.PP
.SS "  Sectores más grandes"
.iX "c 2m"
Al usar sectores más grandes es posible ir más allá de la capacidad
que se puede obtener con los sectores estándar de 512 bytes. Esto es
así a causa de la cabecera del sector. La cabecera del sector tiene el
mismo tamaño, sin importar cuántos bytes de datos haya en el
sector. Así, nos ahorramos algo de espacio usando 
\&\fImenos\fR, pero más grandes, sectores. Por ejemplo, 1 sector de 4
kB sólo toma espacio para la cabecera una vez, mientras que 8 sectores
de 512 bytes tienen también 8 cabeceras, para la misma cantidad de
datos útiles.
.PP
Este método permite almacenar hasta 1992 kB en un disco de alta
densidad de 3½''.
.PP
MTOOLS admite estos formatos sólo en Linux.
.PP
.SS "  2m"
.iX "c 2m"
.PP
El formato 2m fue inventado originalmente por Ciriaco García de
Celis. También emplea sectores más grandes de lo usual para hacer
caber más datos en el disco. Sin embargo, usa el formato estándar (18
sectores de 512 bytes cada uno) en el primer cilindro, para hacer
estos discos más fáciles de manejar en DOS. De hecho este método
permite tener un sector de arranque de tamaño estándar, que contiene
una descripción de cómo debería leerse el resto del disco.
.PP
Sin embargo, lo malo de esto es que el primer cilindro puede contener
menos datos que los otros. Desafortunadamente, DOS sólo puede manejar
discos donde cada pista contenga la misma cantidad de datos. Así que
2m oculta el hecho de que la primera pista contenga menos datos
mediante el empleo de una \fIFAT sombreada\fP. (Usualmente, DOS
almacena la FAT en dos copias idénticas, por seguridad adicional. XDF
almacena sólo una copia, y le dice a DOS que almacena dos. Así se
ahorra los mismo que tomaría de espacio la segunda copia.) Esto
también significa que Ud. \fBnunca use un disco 2m para almacenar nada
más que un sistema de ficheros DOS\fR.
.PP
MTOOLS admite estos formatos sólo en Linux.
.PP
.SS "  XDF"
.iX "c discos XDF"
.iX "c OS/2 (discos XDF)"
.PP
XDF es un formato de alta capacidad usada por OS/2. Puede contener
1840 kB por disco. Esto es menor que los mejores formatos 2m, pero su
ventaja principal es que es rápido: 600 ms por pista. Esto es más
rápido que el formato de 21 sectores, y casi tan rápido como el
formato estándar de 18 sectores. Para acceder a estos discos,
asegúrese de que MTOOLS ha sido compilado con soporte de XDF, y de que
se defina la variable \fR\&\f(CWuse_xdf\fR para la unidad en el
fichero de configuración. Vea la sección Compilación de MTOOLS y 
\(ifvariables misceláneas\(is, para los detalles sobre cómo hacer esto. El
acceso rápido XDF sólo está disponible para núcleos Linux más
recientes que el 1.1.34.
.PP
MTOOLS admite este formato sólo en Linux.
.PP
\&\fBCuidado / Atención distribuidores\fR: Si MTOOLS se compila en un
núcleo Linux más reciente que 1.3.34, no funcionará en un núcleo más
antiguo. Sin embargo, si ha sido compilado en un núcleo más antiguo, 
aún se ejecutará en un núcleo más nuevo, aunque el acceso XDF será más
lento. Se recomienda que los autores de una distribución sólo incluyan
los binarios de MTOOLS compilados en núcleos más viejos de 1.3.34
hasta que salga el 2.0, que ya ha salido. Cuando haya salido, como es
el caso ya, se pueden (y deben) distribuir los binarios de MTOOLS
compilados en núcleos más nuevos. Los binarios de MTOOLS compilados en
núcleos anteriores al 1.3.34 no se ejecutarán en un núcleo 2.1 ó
posterior. 
.PP
.SS "Códigos de salida"
Todas las órdenes de MTOOLS devuelven 0 en caso de éxito, 1 en caso de
fallo total, ó 2 en caso de fallo parcial. Todas las órdenes de MTOOLS
realizan unas pocas comprobaciones saludables antes de seguir, para
asegurarse de que el disco es desde luego un disco de MS-DOS (no por
ejemplo un disco ext2 o minix). Estas comprobaciones pueden rechazar
discos parcialmente corruptos, que de todas formas podrían aún ser
legibles. Para evitar estas comprobaciones, defina la variable de
entorno MTOOLS_SKIP_CHECK o la variable correspondiente del fichero de
configuración (vea la sección variables globales).
.SS "Fallos"
Un efecto colateral desafortunado al no adivinar el dispositivo
correcto (cuando se admiten múltiples capacidades de discos) es un
mensaje de error ocasional del controlador de dispositivo. Éstos
pueden ser pasados por alto con seguridad. 
.PP
El código de comprobación de la FAT se atraganta en discos de 1,72 MB
mformat-eados con MTOOLS anterior a la versión 2.0.7. Defina la
variable de entorno MTOOLS_FAT_COMPATIBILITY (o la variable
correspondiente del fichero de configuración, \(ifvariables
globales\(is) para que no se realice la comprobación de la FAT.
.PP
.SH "CÓMO COMFIGURAR MTOOLS PARA SU ENTORNO"
.SS "Descripción"
.iX "c Ficheros de configuración"
.iX "v MTOOLSRC"
.PP
Esta sección explica la sintaxis de los ficheros de configuración
para MTOOLS. Los ficheros de configuración se llaman
\&\fR\&\f(CW\(if/etc/mtools.conf\(is\fR y
\fR\&\f(CW\(if~/.mtoolsrc\(is\fR. 
Si la variable de entorno \fR\&\f(CWMTOOLSRC\fR está definida, su
contenido se usa como el nombre de fichero para un tercer fichero de
configuración. Estos ficheros de configuración describen los
siguientes elementos:
.TP
* \ Opciones\ y\ variables\ de\ configuración\ globales
.TP
* \ Opciones\ y\ variables\ por\ dispositivo
.TP
* \ Tablas\ de\ traducción\ de\ caracteres
.PP
.SS "Localización de los ficheros de configuración"
.PP
.iX "c Nombre del fichero de configuración"
.iX "c Nombre de los ficheros de configuración"
.iX "c Localización de los ficheros de configuración"
.PP
\&\fR\&\f(CW\(if/etc/mtools.conf\(is\fR es el fichero de configuración
global para todo el sistema,
y \fR\&\f(CW\(if~/.mtoolsrc\(is\fR es el fichero de configuración
privado del usuario.
.PP
En algunos sistemas, el fichero de configuración se llama
\&\fR\&\f(CW\(if/etc/defaults/mtools.conf\(is\fR o
\fI/usr/local/etc/mtools.conf\fP en su lugar.
.PP
.SS "  Sintaxis del fichero de configuración general"
.iX "c Sintaxis del fichero de configuración"
.iX "c Sintaxis del archivo de configuración"
.PP
Los ficheros de configuración están construidos a base de
secciones. Cada sección empieza con una palabra reservada que la
identifica, seguida por dos puntos. Luego vienen asignaciones de
variables y opciones. Las asignaciones de variables toman la siguiente
forma:
.I nombre=valor

Opciones son palabras reservadas solitarias sin que las siga un signo
igual ni un valor. Una sección acaba o al final del fichero o donde
empiece la siguiente. 
.PP
Las líneas que comiencen con un signo sostenido (\fR\&\f(CW#\fR) son
comentarios. Los caracteres nueva-línea son equivalentes a espacio en
blanco (excepto donde acaben un comentario). El fichero de
configuración es insensible a la caja tipográfica, excepto para
elementos encerrados entre comillas (como nombres de ficheros).
.PP
.SS "Valores predeterminados"
.iX "c Valores predeterminados"
.iX "c Configuración predeterminada"
.iX "c Fichero de configuración"
Para la mayoría de las plataformas, MTOOLS contiene valores
predeterminados razonables para unidades físicas de disquete
codificados en el programa compilado. De forma que uno usualmente no
necesita molestarse tocando el fichero de configuración, si todo lo
que uno quiere hacer con MTOOLS es acceder a las disqueteras. Por otra
parte, se necesita el fichero de configuración si uno también quiere
usar MTOOLS para acceder a las particiones del disco duro y a los
ficheros imagen de DOSEmu.
.PP
.SS "Variables globales"
.iX "c Variables globales de configuración"
.iX "c Variables de configuración independientes de la unidad"
.iX "c Variables de entorno"
.iX "v MTOOLS_SKIP_CHECK"
.iX "v MTOOLS_FAT_COMPATIBILITY"
.iX "v MTOOLS_LOWER_CASE"
.iX "v MTOOLS_NO_VFAT"
.iX "c FreeDos"
.PP
Las opciones globales se pueden poner a 1 ó a 0.
.PP
Se reconocen las siguientes opciones globales:
.TP
\&\fR\&\f(CWMTOOLS_SKIP_CHECK\fR\ 
Si se pone a 1, MTOOLS no realiza la mayoría de sus comprobaciones
salubres. Esto se necesita para leer algunos discos de Atari que se han
construido con las ROMs antiguas, y que no serían reconocidos de otra
forma.
.TP
\&\fR\&\f(CWMTOOLS_FAT_COMPATIBILITY\fR\ 
Si se pone a 1, MTOOLS no realiza las comprobaciones del tamaño de la
FAT. Algunos discos tienen una FAT mayor de la que realmente
necesitan. Éstos se rechazan si esta opción está a 0 ó no está presente.
.TP
\&\fR\&\f(CWMTOOLS_LOWER_CASE\fR\ 
Si se pone a 1, MTOOLS muestra todos los nombres cortos de ficheros
con todas sus letras mayúsculas, en minúsculas. Esto se ha hecho para
permitir un comportamiento que fuera consistente con versiones más
antiguas de MTOOLS que no sabían nada de los bits de caja tipográfica.
.TP
\&\fR\&\f(CWMTOOLS_NO_VFAT\fR\ 
Si se pone a 1, MTOOLS no generará entradas VFAT para nombres de
ficheros con letras en minúsculas y mayúsculas mezcladas, pero por otra
parte nombres legales de ficheros DOS. Esto es útil cuando se trabaja
con versiones de DOS que no pueden tragar los nombres largos VFAT,
como con FreeDOS. 
.TP
\&\fR\&\f(CWMTOOLS_DOTTED_DIR\fR\ 
En un directorio ancho, muestra el nombre corto con un punto en vez de
espacios separando el nombre base y la extensión.
.TP
\&\fR\&\f(CWMTOOLS_NAME_NUMERIC_TAIL\fR\ 
Si se pone a 1 (y éste es el valor predeterminado), genera finales
numéricos para todos los nombres largos (~1). Si se pone a 0, sólo
genera finales numéricos cuando si no lo hiciera ocurriera una
coincidencia de nombres.
.TP
\&\fR\&\f(CWMTOOLS_TWENTY_FOUR_HOUR_CLOCK\fR\ 
Si vale 1, usa la notación europea para los tiempos (formato de 24
horas); si no, emplea la anglosajona de UK/US (am/pm).
.PP
Ejemplo:
Insertar la siguiente línea en su fichero de configuración hace que
MTOOLS se pase las comprobaciones salubres:
 
.nf
.ft 3
.in +0.3i
  MTOOLS_SKIP_CHECK=1
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Las variables globales también se pueden definir en el entorno:
 
.nf
.ft 3
.in +0.3i
  export MTOOLS_SKIP_CHECK=1
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Las variables globales de cadena se pueden poner a cualquier valor:
.TP
\&\fR\&\f(CWMTOOLS_DATE_STRING\fR\ 
El formato empleado para mostrar las fechas de ficheros. El valor
predeterminado es "dd-mm-yyyy".
.PP
.SS "Opciones y variables por unidad"
.iX "c Descripción de unidad"
.iX "c Configuración de unidad"
.PP
.SS "  Información general"
.iX "c Descripción de unidad, ejemplo"
.iX "c Configuración de unidad, ejemplo"
.iX "v unidad"
.PP
Las opciones y valores específicas de cada unidad pueden describirse
en una sección de la unidad correspondiente. Una sección de unidad
empieza con
\&\fR\&\f(CWdrive\fR "\fIletra-unidad\fR" :
.PP
Luego vienen pares variable=valor y opciones.
.PP
Ésta es una muestra de una descripción de unidad:
 
.nf
.ft 3
.in +0.3i
  drive a:
    file="/dev/fd0" use_xdf=1
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
.SS "  Configuración de la geometría del disco"
.iX "c Geometría de disco"
.iX "c Configuración de la geometría del disco"
.iX "c Descripción de la geometría del disco"
.iX "c Formato del disco"
.iX "c Disco de alta densidad"
.iX "c Disco de baja densidad"
.iX "p mformat (geometría usada por)"
.PP
La información de geometría describe las características físicas del
disco. Tiene tres propósitos:
.TP
formatear\ 
La información de geometría se escribe en el sector de arranque del
disco recién construido. Sin embargo, uno puede también describir la
información de geometría en la línea de órdenes. Vea la sección de
mformat para más detalles.
.TP
filtrar\ 
En algunos sistemas Unix hay ficheros especiales de dispositivo que
sólo admiten una geometría física. Por ejemplo, Ud. puede necesitar un
fichero especial diferente para acceder a un disco como de alta
densidad o como de baja densidad. La geometría se compara con la
geometría real almacenada en el sector de arranque para asegurarse de
que este fichero especial de dispositivo es capaz de leer
correctamente el disco. Si la geometría no concuerda, esta entrada de
unidad falla, y se intenta la siguiente entrada de unidad que tenga la
misma letra de unidad. Vea la sección de múltiples descripciones para
más detalles sobre cómo suministrar varias descripciones para una
letra de unidad.
.IP
Si no se suministra ninguna información de geometría en el fichero de
configuración, se aceptan todos los discos. En Linux (y en Sparc)
existen ficheros especiales de dispositivo con geometría configurable 
(\fR\&\f(CW\(if/dev/fd0\(is\fR, \fR\&\f(CW\(if/dev/fd1\(is\fR, etc.),
y por lo tanto no se necesita (ni se tiene en cuenta) el filtrado para
unidades de disco. (Mtools aún hace el filtrado en ficheros planos
(imágenes de disco) en Linux: el propósito principal de esto es por
motivos de comprobación, puesto que yo no tengo acceso a un Unix que
necesite realmente el filtrado). 
.TP
geometría\ inicial\ 
La información de geometría (si está disponible) también se emplea
para establecer la geometría inicial en ficheros especiales de
dispositivo configurables. Esta geometría inicial se emplea para leer
el sector de arranque, que contiene la geometría real. Si no se
suministra ninguna información de geometría en el fichero de
configuración, no se hace la configuración inicial. En Linux, esto no
se necesita realmente de ninguna forma, puesto que los dispositivos
configurables son capaces de auto-detectar el tipo de disco lo
bastante precisamente (para la mayoría de formatos comunes) como para
leer el sector de arranque.
.PP
Una información de geometría errónea puede conducir a errores muy
extraños. Por eso yo recomiendo vivamente que Ud. no use la
configuración de geometría a menos que realmente la necesite.
.PP
Se dispone de las siguientes variables relacionadas con la geometría:
.TP
\&\fR\&\f(CWcylinders\fR\ 
.TQ
\&\fR\&\f(CWtracks\fR
.iX "v cilindros"
.iX "v pistas"
El número de cilindros. (\fR\&\f(CWcylinders\fR es la forma preferida,
\&\fR\&\f(CWtracks\fR está considerada anticuada.)
.TP
\&\fR\&\f(CWheads\fR\ 
.iX "v cabezas"
El número de cabezas (lados).
.TP
\&\fR\&\f(CWsectors\fR\ 
.iX "v sectores"
El número de sectores por pista.
.PP
Ejemplo: la siguiente sección de unidad describe una unidad de 1,44 MB:
.PP
 
.nf
.ft 3
.in +0.3i
  drive a:
      file="/dev/fd0H1440"
      fat_bits=12
      cylinders=80 heads=2 sectors=18
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Se dispone de las siguientes descripciones abreviadas de geometría:
.TP
\&\fR\&\f(CW1.44m\fR\ 
disco de alta densidad de 3½''. Equivalente a:
\&\fR\&\f(CWfat_bits=12 cylinders=80 heads=2 sectors=18\fR
.TP
\&\fR\&\f(CW1.2m\fR\ 
disco de alta densidad de 5¼''. Equivalente a:
\&\fR\&\f(CWfat_bits=12 cylinders=80 heads=2 sectors=15\fR
.TP
\&\fR\&\f(CW720k\fR\ 
disco de doble densidad de 3½''. Equivalente a:
\&\fR\&\f(CWfat_bits=12 cylinders=80 heads=2 sectors=9\fR
.TP
\&\fR\&\f(CW360k\fR\ 
disco de doble densidad de 5¼''. Equivalente a:
\&\fR\&\f(CWfat_bits=12 cylinders=40 heads=2 sectors=9\fR
.PP
Las descripciones de formato abreviado pueden enmendarse. Por ejemplo,
\&\fR\&\f(CW360k sectors=8\fR
describe un disco de 320 kB y es equivalente a:
\&\fR\&\f(CWfat_bits=12 cylinders=40 heads=2 sectors=8\fR
.PP
.SS "  Opciones de apertura"
.iX "v sync"
.iX "v nodelay"
.iX "v exclusive"
.iX "c opciones de apertura"
.iX "c escritura síncrona"
.iX "c acceso exclusivo a una unidad"
.PP
Por otra parte, se dispone de las siguientes opciones:
.TP
\&\fR\&\f(CWsync\fR\ 
Todas las operaciones de E/S se harán síncronamente
.TP
\&\fR\&\f(CWnodelay\fR\ 
El fichero o dispositivo se abre con la opción O_NDELAY. Esto se
necesita en algunas arquitecturas no Linux.
.TP
\&\fR\&\f(CWexclusive\fR\ 
El fichero o dispositivo se abre con la opción O_EXCL. En Linux, esto
asegura acceso exclusivo a la unidad de disquete. En la mayoría de
otras arquitecturas, y para ficheros planos, no tiene ningún efecto en
absoluto.
.PP
.SS "Variables de unidad de propósito general"
.PP
.iX "c Hdimage"
.PP
Se dispone de las siguientes variables de unidad de propósito general:
.TP
\&\fR\&\f(CWfile\fR\ 
.iX "c Fichero imagen"
.iX "c Nombre del fichero especial de dispositivo"
.iX "c Nombre de fichero del nodo de dispositivo"
.iX "v fichero"
El nombre del fichero o dispositivo que contiene la imagen de
disco. Esto es obligatorio. El nombre del fichero debe estar entre
comillas. 
.TP
\&\fR\&\f(CWuse_xdf\fR\ 
.iX "c discos XDF (cómo configurar)"
.iX "v use_xdf"
Si está puesto a un valor distinto de cero, mtools también intenta
acceder a este disco como a un disco XDF. XDF es un formato de alta
capacidad empleado por OS/2. Esto está desactivado por omisión. Vea la
sección XDF para más detalles.
.TP
\&\fR\&\f(CWpartition\fR\ 
.iX "c Imagen del disco duro de Dosemu"
.iX "c Discos Zip (particiones)"
.iX "c Discos Jaz (particiones)"
.iX "c Discos Syquest"
.iX "c Discos magneto-ópticos"
.iX "c OS/2 (distribución de unidades desmontables)"
.iX "c Windows NT (distribución de unidades desmontables)"
.iX "c Unidades desmontables"
.iX "c Fichero imagen particionado"
Le dice a mtools que trate a la unidad como a un dispositivo
particionado, y que emplee la partición dada. Sólo las particiones
primarias están accesibles empleando este método, y están numeradas de
la 1 a la 4. Para las particiones lógicas, use la variable más general
\fR\&\f(CWoffset\fR. La variable \fR\&\f(CWpartition\fR está pensada
para unidades desmontables como las Syquests, unidades ZIP, y discos
magneto-ópticos. Aunque el DOS tradicional ve a las Syquests y discos
magneto-ópticos como a \fR\&\f(CW\(ifdisquetes gigantescos\(is\fR que
no están particionados, OS/2 y Windows NT los tratan como discos
duros, esto es, dispositivos con particiones. La opción
\fR\&\f(CWpartition\fR también es útil con imágenes de disco de
DOSEMU. No está recomendada para discos duros para los que se dispone
de acceso directo a las particiones mediante el montaje.
.TP
\&\fR\&\f(CWscsi\fR\ 
.iX "c instalación setuid (necesaria para E/S SCSI cruda)"
.iX "c Solaris (Acceso crudo a dispositivos SCSI como Zip & Jaz)"
.iX "c SunOS (Acceso crudo a dispositivos SCSI como Zip & Jaz)"
.iX "c Discos Zip (acceso SCSI crudo)"
.iX "c Discos Jaz (acceso SCSI crudo)"
.iX "c Syquests (acceso SCSI crudo)"
.iX "c dispositivos SCSI"
Cuando se pone a 1, esta opción le dice a mtools que emplee E/S SCSI
cruda en vez de las llamadas estándares read/write para acceder al
dispositivo. Actualmente, esto se acepta en HP/UX, Solaris y
SunOS. Esto se necesita porque en algunas arquitecturas, como en SunOS
o Solaris, a los medios de almacenamiento masivo de PC no se puede
acceder usando las llamadas al sistema \fR\&\f(CWread\fR y
\fR\&\f(CWwrite\fR, porque el S.O. espera que contengan una "etiqueta
de disco" específica de Sun.
.IP
Como el acceso crudo SCSI siempre emplea el dispositivo entero,
Ud. necesita especificar además la opción "partition".
.IP
En algunas arquitecturas, como en Solaris, mtools necesita privilegios
de root para ser capaz de usar la opción \fR\&\f(CWscsi=1\fR.  De modo
que mtools debe instalarse set uid root en Solaris si quiere acceder a
unidades Zip o Jaz. Mtools emplea sus privilegios de superusuario para
abrir el dispositivo, y para hacer las llamadas de E/S SCSI. Además,
los privilegios de root sólo se usan para unidades descritas en un
fichero de configuración general como pueda ser
\&\fR\&\f(CW\(if/usr/local/etc/mtools.conf\(is\fR, y no para aquéllas
descritas en \&\fR\&\f(CW\(if~/.mtoolsrc\(is\fR o
\fR\&\f(CW\(if$MTOOLSRC\(is\fR. 
.TP
\&\fR\&\f(CWprivileged\fR\ 
.iX "c instalación setuid"
.iX "c instalación setgid"
Cuando se pone a 1, esto le dice a mtools que use sus privilegios
set-uid y set-gid para abrir la unidad dada. Esta opción sólo es
válida para unidades descritas en ficheros de configuración general
(como \&\fR\&\f(CW\(if/usr/local/etc/mtools.conf\(is\fR, no
\fR\&\f(CW\(if~/.mtoolsrc\(is\fR ni
\&\fR\&\f(CW\(if$MTOOLSRC\(is\fR).  Obviamente, esta opción tampoco
vale para nada si mtools no se instala setuid o setgid. Esta opción
viene implícita si `scsi=1', pero de nuevo sólo para unidades
descritas en ficheros de configuración generales.
Esta opción 
privileged también puede ponerse explícitamente a 0, para decirle a
mtools que no emplee sus privilegios para una unidad dada incluso si
se ha definido \fR\&\f(CWscsi=1\fR.
.IP
Mtools sólo necesita instalarse setuid si Ud. emplea las variables de unidad
\&\fR\&\f(CWprivileged\fR o \fR\&\f(CWscsi\fR.  Si Ud. no usa estas
opciones, mtools funciona perfectamente bien incluso cuando no se
instale setuid root.
.TP
\&\fR\&\f(CWvold\fR\ 
.iX "c Solaris (vold)"
.iX "c Vold (mediamgr)"
.IP
Instruye a mtools para que interprete el nombre de dispositivo como un
identificador vold en vez de como un nombre de fichero. El
identificador vold se traduce a un nombre de fichero real usando las
funciones \fR\&\f(CWmedia_findname()\fR y
\&\fR\&\f(CWmedia_oldaliases()\fR de la biblioteca
\fR\&\f(CWvolmgt\fR.  Esta opción sólo está disponible si mtools fue
configurado con la opción
\&\fR\&\f(CW--enable-new-vold\fR antes de la compilación.
.TP
\&\fR\&\f(CWnolock\fR\ 
.iX "c deshabilitar candados"
.iX "c candados (deshabilitándolos)"
.iX "c disquete plano: dispositivo xxx ocupado"
Instruye a mtools para que no use candados en esta unidad. Esto se
necesita en sistemas con semánticas de candados que fallan a
menudo. Sin embargo, habilitar esto hace a la operación menos segura
en casos donde varios usuarios pueden acceder a la misma unidad a la vez.
.TP
\&\fR\&\f(CWoffset\fR\ 
.iX "c disco RAM"
.iX "c disco RAM de Atari"
Describe dónde en el fichero empieza el sistema de ficheros
MS-DOS. Esto es útil para particiones lógicas en imágenes del disco de
DOSEMU y para discos RAM de Atari. Por omisión, es cero, significando
que el sistema de ficheros empieza justo en el principio del
dispositivo o fichero.
.TP
\&\fR\&\f(CWfat_bits\fR\ 
.iX "v fat_bits"
El número de bits de la FAT. Este número puede ser 12 ó 16. Esto se
necesita muy raras veces, puesto que casi siempre puede deducirse de
información en el sector de arranque. Por el contrario, describir el
número de bits de la FAT puede en realidad ser perjudicial si lo da
mal. Sólo debería emplear esta variable si mtools obtiene el número
auto-detectado de bits de la FAT de manera errónea, o si quiere
formatear con mformat un disco con un número extraño de bits de FAT. 
.TP
\&\fR\&\f(CWprecmd\fR\ 
.iX "c Solaris (volcheck)"
.iX "c Ejecutar órdenes antes de abrir el dispositivo"
.IP
En algunas variantes de Solaris, es necesario llamar a `volcheck -v'
antes de abrir un dispositivo de disquete, para que el sistema se dé
cuenta de que desde luego hay un disco en la
unidad. \fR\&\f(CWprecmd="volcheck -v"\fR en la cláusula de la unidad
establece el comportamiento deseado.
.PP
Sólo la variable \fR\&\f(CWfile\fR es obligatoria. Los otros
parámetros pueden dejarse sin poner. En ese caso se emplea un valor
predeterminado o auto-detectado.
.PP
.SS "  Suministrar varias descripciones de una unidad"
.PP
Es posible suministrar múltiples descripciones para una unidad. En ese
caso, las descripciones se prueban en orden hasta que se encuentre una
que encaje. Las descripciones pueden fallar por varias razones:
.TP
1.\ 
porque la geometría no es apropiada,
.TP
2.\ 
porque no hay ningún disco en la unidad,
.TP
3.\ 
o por otros problemas.
.PP
Las definiciones múltiples son útiles cuando se usen dispositivos
físicos que son sólo capaces de admitir una sola geometría de disco.
Ejemplo:
 
.nf
.ft 3
.in +0.3i
  drive a: file="/dev/fd0H1440" 1.44m
  drive a: file="/dev/fd0H720" 720k
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Esto le dice a mtools que use /dev/fd0H1440 para discos 1.44m (de alta
densidad) y /dev/fd0H720 para discos 720k (de doble densidad). En
Linux, esta característica no se necesita realmente, puesto que el
dispositivo /dev/fd0 es capaz de manejar cualquier geometría.
.PP
Uno puede también emplear descripciones múltiples de unidad para
acceder a ambas unidades físicas a través de una letra de unidad:
.PP
 
.nf
.ft 3
.in +0.3i
  drive z: file="/dev/fd0"
  drive z: file="/dev/fd1"
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Con esta descripción, \fR\&\f(CWmdir z:\fR accede a la primera unidad
física si contiene un disco. Si la primera unidad no contiene un
disco, mtools comprueba la segunda unidad.
.PP
Cuando se empleen ficheros de configuración múltiples, las
descripciones de unidad en los ficheros que se analicen en último
lugar tienen preferencia sobre las de la misma unidad en ficheros
analizados anteriormente. Para evitar esto, emplee las palabras
reservadas \fR\&\f(CWdrive+\fR o \fR\&\f(CW+drive\fR
en vez de \fR\&\f(CWdrive\fR. La primera añade una descripción al
final de la lista (esto es, se probará en último lugar), y la primera
la añade al principio de la lista.
.PP
.SS "Tablas de traducción de conjuntos de caracteres"
.iX "c Internacionalización"
.iX "c Caracteres acentuados"
.iX "c Conjunto de caracteres nacional"
.PP
Si Ud. vive en los EE.UU., en Europa Occidental o en Australia, puede
omitir esta sección.
.PP
.SS "  Por qué se necesitan las tablas de traducción de conjuntos de caracteres"
.PP
DOS emplea un mapa de códigos de caracteres distinto de Unix. Los
caracteres de 7 bits aún tienen el mismo significado, sólo los
caracteres con el octavo bit a uno se ven afectados. Para empeorar las
cosas, hay disponibles varias tablas de conversión dependiendo del
país donde Ud. esté. La apariencia de los caracteres se define
mediante páginas de código. Estas páginas de código no son las mismas
para todos los países. Por ejemplo, algunas páginas de código no
contienen letras mayúsculas acentuadas. Por otra parte, algunas
páginas de código contienen caracteres que no existen en Unix, como
ciertos caracteres para dibujar líneas o consonantes acentuadas
empleadas en algunos países de Europa Oriental. Esto afecta a dos
cosas, relativas a nombres de ficheros:
.TP
letras\ mayúsculas\ 
En nombres cortos, sólo se permiten letras mayúsculas, aparte de
dígitos. Esto también cuenta para caracteres acentuados. Por ejemplo,
en una página de código que no contenga letras mayúsculas acentuadas,
las letras minúsculas acentuadas se transforman en sus
correspondientes sin acentuar. 
.TP
nombres\ de\ fichero\ largos\ 
Micro$oft al fin ha hecho algo con la cabeza y emplea un mapa más
estándar para los nombres de fichero largos. Usan Unicode, que es
básicamente una versión de 32 bits de ASCII. Sus primeros 256
caracteres son idénticos a ISO-Latin1, que se emplea en Unix. Así, la
página de código también afecta a la correspondencia entre los códigos
empleados en nombres largos y los usados en nombres cortos.
.PP
Mtools considera los nombres de fichero introducidos en la línea de
órdenes como que tienen el mapa de Unix, y traduce los caracteres para
obtener los nombres cortos. Por omisión, se emplea el código de página
850 con el mapa suizo mayúsculas/minúsculas. Yo escogí esta página de
código porque su conjunto de caracteres existentes es el que más se
parece al de Unix. Ítem más, esta página de código cubre la mayoría de
caracteres en uso en los EE.UU., Australia y Europa Occidental. Sin
embargo, es aún posible escoger un mapa diferente. Hay dos métodos:
la variable \fR\&\f(CWcountry\fR y tablas explícitas.
.PP
.SS "  Configuración usando Country"
.PP
La variable \fR\&\f(CWCOUNTRY\fR se recomienda para gente que también
tiene acceso a los ficheros del sistema MS-DOS y documentación. Si
Ud. no tiene acceso a éstos, yo le sugeriría que mejor usara las
tablas explícitas en vez de esto.
.PP
Sintaxis:
.PP
\&\fR\&\f(CWCOUNTRY="\fR\fIpaís\fR\fR\&\f(CW[,[\fR\fIpág-cod\fR\fR\&\f(CW],\fR
\&\fIfichero-país\fR\fR\&\f(CW]"\fR
.PP
Esto le dice a mtools que emplee una tabla de traducción de Unix a DOS
que concuerde con \&\fIpaís\fR y una tabla de minúsculas a mayúsculas
para \fIpaís\fP y que emplee el fichero \fIfichero-país\fP para
obtener la tabla de minúsculas a mayúsculas. El código del país es muy
a menudo el prefijo telefónico del país. Refiérase a la página de
ayuda de DOS en "country" para más detalles. Los parámetros 
\&\fIpág-cod\fR y el \fIfichero-país\fR son opcionales.
Por favor no teclee los corchetes, están ahí sólo para decirle qué
parámetros son opcionales. El fichero \fIfichero-país\fP se suministra
con MS-DOS, y normalmente se llama \fR\&\f(CW\(ifCOUNTRY.SYS\(is\fR, y
se guarda en el directorio \fR\&\f(CW\(ifC:\eDOS\(is\fR. En la mayoría
de los casos, no lo necesita, puesto que las tablas de traducción más
comunes están compiladas en mtools. Así que no se preocupe si Ud. está
en una caja (computador) con sólo Unix, que no trae este fichero.
.PP
Si no se da \fIpág-cod\fR, se emplea una página de código
predeterminada por país. Si no se da el parámetro \fIfichero-país\fP,
se emplean valores predeterminados codificados en el programa
compilado para la tabla minúsculas a mayúsculas. Esto es útil para
sistemas Unix distintos de Linux, que pueden no tener disponible el
fichero \fR\&\f(CW\(ifCOUNTRY.SYS\(is\fR a mano.
.PP
Las tablas de Unix a DOS no están contenidas en el fichero
\fR\&\f(CW\(ifCOUNTRY.SYS\(is\fR, y entonces mtools siempre emplea
valores predeterminados codificados en el programa compilado para
éstas. De forma que sólo se admite una cantidad limitada de páginas de
código. Si su página de código preferida falta, o si Ud. conoce el
nombre del fichero de Windows95 que contiene este mapa, por favor,
mándeme unas líneas a \&\fR\&\f(CWAlain.Knaff@poboxes.com\fR.
.PP
La variable \fR\&\f(CWCOUNTRY\fR también puede definirse empleando el entorno.
.PP
.SS "  Configuración usando tablas de traducción explícitas"
.PP
Las tablas de traducción pueden describirse en el mismo fichero de
configuración. Se necesitan dos tablas: primero la tabla de DOS a
Unix, y luego la de minúsculas a mayúsculas. Una tabla de DOS a Unix
empieza con la palabra reservada
\&\fR\&\f(CWtounix\fR, seguida por dos puntos y 128 números
hexadecimales. 
Una tabla de minúsculas a mayúsculas comienza con la palabra reservada
\&\fR\&\f(CWfucase\fR, seguida por dos puntos y 128 números exadecimales.
.PP
Las tablas sólo muestran las traducciones para caracteres cuyos
códigos son mayores que 128, porque la traducción de los códigos
menores es trivial.
.PP
Ejemplo:
.iX "v tounix"
.iX "v fucase"
.PP
 
.nf
.ft 3
.in +0.3i
 tounix:
   0xc7 0xfc 0xe9 0xe2 0xe4 0xe0 0xe5 0xe7 
   0xea 0xeb 0xe8 0xef 0xee 0xec 0xc4 0xc5 
   0xc9 0xe6 0xc6 0xf4 0xf6 0xf2 0xfb 0xf9 
   0xff 0xd6 0xdc 0xf8 0xa3 0xd8 0xd7 0x5f 
   0xe1 0xed 0xf3 0xfa 0xf1 0xd1 0xaa 0xba 
   0xbf 0xae 0xac 0xbd 0xbc 0xa1 0xab 0xbb 
   0x5f 0x5f 0x5f 0x5f 0x5f 0xc1 0xc2 0xc0 
   0xa9 0x5f 0x5f 0x5f 0x5f 0xa2 0xa5 0xac 
   0x5f 0x5f 0x5f 0x5f 0x5f 0x5f 0xe3 0xc3 
   0x5f 0x5f 0x5f 0x5f 0x5f 0x5f 0x5f 0xa4 
   0xf0 0xd0 0xc9 0xcb 0xc8 0x69 0xcd 0xce 
   0xcf 0x5f 0x5f 0x5f 0x5f 0x7c 0x49 0x5f 
   0xd3 0xdf 0xd4 0xd2 0xf5 0xd5 0xb5 0xfe 
   0xde 0xda 0xd9 0xfd 0xdd 0xde 0xaf 0xb4 
   0xad 0xb1 0x5f 0xbe 0xb6 0xa7 0xf7 0xb8 
   0xb0 0xa8 0xb7 0xb9 0xb3 0xb2 0x5f 0x5f 
\&\&
 fucase:
   0x80 0x9a 0x90 0xb6 0x8e 0xb7 0x8f 0x80 
   0xd2 0xd3 0xd4 0xd8 0xd7 0xde 0x8e 0x8f 
   0x90 0x92 0x92 0xe2 0x99 0xe3 0xea 0xeb 
   0x59 0x99 0x9a 0x9d 0x9c 0x9d 0x9e 0x9f 
   0xb5 0xd6 0xe0 0xe9 0xa5 0xa5 0xa6 0xa7 
   0xa8 0xa9 0xaa 0xab 0xac 0xad 0xae 0xaf 
   0xb0 0xb1 0xb2 0xb3 0xb4 0xb5 0xb6 0xb7 
   0xb8 0xb9 0xba 0xbb 0xbc 0xbd 0xbe 0xbf 
   0xc0 0xc1 0xc2 0xc3 0xc4 0xc5 0xc7 0xc7 
   0xc8 0xc9 0xca 0xcb 0xcc 0xcd 0xce 0xcf 
   0xd1 0xd1 0xd2 0xd3 0xd4 0x49 0xd6 0xd7 
   0xd8 0xd9 0xda 0xdb 0xdc 0xdd 0xde 0xdf 
   0xe0 0xe1 0xe2 0xe3 0xe5 0xe5 0xe6 0xe8 
   0xe8 0xe9 0xea 0xeb 0xed 0xed 0xee 0xef 
   0xf0 0xf1 0xf2 0xf3 0xf4 0xf5 0xf6 0xf7 
   0xf8 0xf9 0xfa 0xfb 0xfc 0xfd 0xfe 0xff 
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
La primera tabla hace corresponder códigos de caracteres DOS a códigos
de caracteres Unix. Por ejemplo, el carácter DOS de número 129. Éste
es una u con diéresis: 'ü'. Para traducirla a Unix, miramos al
carácter número 1 en la primera tabla (1 = 129 - 128). Éste es
0xfc. (Ojo, la numeración comienza en 0.)
La segunda tabla hace corresponder letras minúsculas DOS con letras
mayúsculas DOS. La misma letra u con diéresis, 'ü' se corresponde con el
carácter 0x9a que es una u con diéresis mayúscula, esto es 'Ü', en DOS.
.PP
.SS "  Caracteres Unicode mayores que 256"
Si un nombre existente MS-DOS contiene caracteres Unicode mayores que
256, éstos se traducen a subrayados o a caracteres que se parezcan
visualmente. Por ejemplo, las consonantes acentuadas se traducen a sus
correspondientes sin acento. Esta traducción se utiliza para mdir
y para los nombres de ficheros Unix generados por mcopy. Linux admite
Unicode también, pero desafortunadamente muy pocas aplicaciones lo
admiten como para andar preocupándome con esto en mtools. Lo más
importante, xterm aún no puede mostrar Unicode. Si hay suficiente
demanda, podría incluir soporte para Unicode en los nombres de
ficheros Unix también.
.PP
\&\fBCuidadín:\fR
Cuando se borran ficheros con mtools, el subrayado concuerda con todos
los caracteres que no puedan representarse en Unix. ¡Tenga cuidadín
con mdel!
.PP
.SS "Localización de los ficheros de configuración y orden en que se analizan"
.iX "c Orden de análisis"
.iX "c Orden de análisis de fichero de configuración"
.iX "c Nombre de fichero de configuración (orden de análisis)"
.iX "c Nombre de ficheros de configuración (orden de análisis)"
.iX "c Localización de los ficheros de configuración (orden de análisis)"
.PP
Los ficheros de configuración se analizan en el orden siguiente:
.TP
1.\ 
valores predeterminados codificados en el programa compilado
.TP
2.\ 
\&\fR\&\f(CW\(if/etc/mtools.conf\(is\fR o
\&\fR\&\f(CW\(if/usr/local/etc/mtools.conf\(is\fR, según versiones de Unix,
distribuciones de Linux, o como se escoja al instalar.
.TP
3.\ 
\&\fR\&\f(CW\(if/etc/mtools\(is\fR
Esto sólo es por compatibilidad hacia atrás, y sólo se analiza si
\&\fR\&\f(CW\(ifmtools.conf\(is\fR
no existe.
.TP
4.\ 
\&\fR\&\f(CW\(if~/.mtoolsrc\(is\fR.
.TP
5.\ 
\&\fR\&\f(CW\(if$MTOOLSRC\(is\fR (el fichero apuntado por la variable
de entorno \fR\&\f(CWMTOOLSRC\fR)
.PP
Las opciones descritas en el último fichero tienen preferencia sobre
las descritas en los ficheros anteriores. Las unidades definidas en
ficheros anteriores persisten si no se sustituyen o redefinen en los
últimos. Por ejemplo, las unidades A y B pueden definirse en
\fR\&\f(CW\(if/etc/mtools.conf\(is\fR y las unidades C y D pueden
definirse en \fR\&\f(CW\(if~/.mtoolsrc\(is\fR . Sin embargo, si
\fR\&\f(CW\(if~/.mtoolsrc\(is\fR  también describe la unidad A, esta
nueva descripción sustituiría a la de la unidad A de
\fR\&\f(CW\(if/etc/mtools.conf\(is\fR en vez de añadirla a él. Si
Ud. quiere añadir una nueva descripción de una unidad ya descrita en
un fichero anterior, necesita emplear la palabra reservada
\fR\&\f(CW+drive\fR o \fR\&\f(CWdrive+\fR.
.PP
.SS "Compatibilidad hacia atrás con la sintaxis antigua del fichero de configuración"
.iX "c Compatibilidad hacia atrás"
.iX "c Sintaxis antigua del fichero de configuración"
.iX "c Fichero de configuración, sintaxis antigua"
.PP
La sintaxis descrita aquí es nueva para la versión
\fR\&\f(CWmtools-3.0\fR. La sintaxis antigua orientada a la línea aún
se admite. Cada línea que comience con una sola letra se considera
como una descripción de unidad al estilo antiguo. Las secciones de
unidad al viejo y al nuevo estilo pueden mezclarse en el mismo fichero
de configuración, para que la actualización sea más fácil. De todas
formas el soporte para la vieja sintaxis se eliminará alguna vez, y
para desaconsejar su uso, a propósito omito aquí su descripción.
.PP
.SH "LISTA DE ÓRDENES"
.iX "c Lista de órdenes"
.iX "c Lista de órdenes disponibles"
.PP
Esta sección describe las órdenes disponibles de mtools, y los
parámetros que acepta cada una. Las opciones que son comunes a todas
las órdenes de mtools no se describen aquí, vea \(ifargumentos\(is
para su descripción.
.PP
.SS Mattrib
.iX "p mattrib"
.iX "c Cambio de atributos de fichero"
.iX "c Ficheros ocultos"
.iX "c Ficheros de lectura exclusiva (cambio de atributo)"
.iX "c Ficheros de sistema"
.iX "c Bit de archivo"
.PP
\&\fR\&\f(CWMattrib\fR se emplea para cambiar los atributos de
ficheros MS-DOS. Tiene la siguiente sintaxis:
.PP
\&\fR\&\f(CWmattrib\fR [\fR\&\f(CW-a|+a\fR] [\fR\&\f(CW-h|+h\fR] [\fR\&\f(CW-r|+r\fR]
[\fR\&\f(CW-s|+s\fR] \fIficheromsdos\fR [ \fIficheromsdos\fR \&... ]
.PP
\&\fR\&\f(CWMattrib\fR añade atributos a un ficheros MS-DOS (con el operador
`\fR\&\f(CW+\fR') o los quita (con el operador `\fR\&\f(CW-\fR').
.PP
\&\fR\&\f(CWMattrib\fR admite los siguientes atributos:
.TP
\&\fR\&\f(CWa\fR\ 
Bit de archivo. Empleado por algunos programas de copias de respaldo
para indicar un nuevo fichero.
.TP
\&\fR\&\f(CWr\fR\ 
Bit de lectura exclusiva. Empleado para indicar un fichero de solo
lectura. Los ficheros con este bit activo no pueden borrarse con
\fR\&\f(CWDEL\fR ni modificarse.
.TP
\&\fR\&\f(CWs\fR\ 
Bit de sistema. Empleado por MS-DOS para indicar un fichero del
sistema operativo.
.TP
\&\fR\&\f(CWh\fR\ 
Bit de ocultación. Empleado para ocultar ficheros de \fR\&\f(CWDIR\fR.
.PP
.SS Mbadblocks
.PP
La orden \fR\&\f(CWmbadblocks\fR se emplea para escudriñar un disquete
MS-DOS y marcar sus bloques malos sin usar como malos. Emplea la
sintaxis siguiente:
.PP
\&\fR\&\f(CWmbadblocks\fR \fIunidad\fR\fR\&\f(CW:\fR
.iX "p mbadblocks"
.iX "c Marcar bloques como malos"
.iX "c Bloques malos"
.iX "c Errores de lectura"
.PP
\&\fR\&\f(CWMbadblocks\fR escudriña un disquete MS-DOS buscando
bloques malos. Todos los bloques malos sin usar se marcan como tales
en la FAT. Esto está pensado para emplearse justo tras
\fR\&\f(CWmformat\fR.  No está pensado para salvar discos malos.
.SS "  Fallos"
\&\fR\&\f(CWMbadblocks\fR debería (pero aún no lo hace :-( ) también
intentar salvar los bloques malos que estén en uso leyéndolos
repetidamente, y luego marcarlos como malos.
.PP
.SS Mcd
.iX "p mcd"
.iX "c Directorio (cambio)"
.iX "c Directorio de trabajo"
.iX "c Directorio de trabajo actual (cambiar el)"
.iX "c Directorio predeterminado (cambiar el)"
.iX "c Fichero Mcwd"
.PP
La orden \fR\&\f(CWmcd\fR se emplea para cambiar el directorio de
trabajo de mtools en el disco de MS-DOS. Emplea la sintaxis siguiente:
.PP
 
.nf
.ft 3
.in +0.3i
\&\fR\&\f(CWmcd [\fIdirmsdos\fR\&\f(CW]
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Sin argumentos, \fR\&\f(CWmcd\fR informa de la unidad y directorio de
trabajo en curso. De otra forma, \fR\&\f(CWmcd\fR cambia la unidad en
curso y el directorio de trabajo en curso relativos a un sistema de
ficheros MS-DOS.
.PP
La variable de entorno \fR\&\f(CWMCWD\fR puede emplearse para
localizar el fichero donde se almacena la información sobre la unidad
y directorio de trabajo en curso.
El valor predeterminado es \fR\&\f(CW\(if$HOME/.mcwd\(is\fR.  La
información en este fichero se pasa por alto si el fichero es más
antiguo de 6 horas.
.PP
\&\fR\&\f(CWMcd\fR devuelve 0 en caso de éxito ó 1 en caso de fallo.
.PP
Al contrario de las versiones de MS-DOS de \fR\&\f(CWCD\fR,
\fR\&\f(CWmcd\fR puede emplearse para cambiar a otro
dispositivo. Puede ser interesante borrar los ficheros viejos
\fR\&\f(CW\(if.mcwd\(is\fR al salir de la cuenta.
.PP
.SS Mcopy
.iX "p mcopy"
.iX "c Leer ficheros MS-DOS"
.iX "c Escribir ficheros MS-DOS"
.iX "c Copiar ficheros MS-DOS"
.iX "c Concatenar ficheros MS-DOS"
.iX "c Ficheros de texto"
.iX "c Conversiones CR/LF"
.PP
La orden \fR\&\f(CWmcopy\fR se emplea para copiar ficheros MS-DOS a o
desde Unix. Emplea la sintaxis siguiente:
.PP
 
.nf
.ft 3
.in +0.3i
\&\fR\&\f(CWmcopy [\fR\&\f(CW-tnvmoOsSrRA] \fIficherofuente\fR\&\f(CW \fIficherodestino\fR\&\f(CW
\&\fR\&\f(CWmcopy [\fR\&\f(CW-tnvmoOsSrRA] \fIficherofuente\fR\&\f(CW [ \fIficherofuente\fR\&\f(CW\&... ] \fIdirectoriodestino\fR\&\f(CW
\&\fR\&\f(CWmcopy [\fR\&\f(CW-tnvm] \fIficherofuenteMSDOS\fR\&\f(CW
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
\&\fR\&\f(CWMcopy\fR copia el fichero especificado al fichero
nombrado, o copia múltiples ficheros al directorio nombrado.
Fuente y destino pueden ser ficheros de MS-DOS o de Unix. 
.PP
El empleo de una letra designando una unidad en los ficheros MS-DOS,
`a:' por ejemplo, determina la dirección de la transferencia. Una
falta de designación de unidad implica un fichero Unix cuyo camino
empiece en el directorio en curso. Si se especifica una letra de
unidad fuente sin nombre de fichero adjunto (p.ej., 
\fR\&\f(CWmcopy a: .\fR), se copian todos los ficheros de esa unidad.
.PP
Si sólo se suministra un solo parámetro fuente de MS-DOS (p.ej., 
"mcopy a:fuu.exe"), se supone un destino que es el directorio en curso
(`\fR\&\f(CW.\fR').
.PP
Un nombre de fichero `\fR\&\f(CW-\fR' significa la entrada estándar o
la salida estándar, dependiendo de su posición en la línea de órdenes.
.PP
\&\fR\&\f(CWMcopy\fR acepta las opciones siguientes en la línea de órdenes:
.TP
\&\fR\&\f(CWQ\fR\ 
Cuando se copian con mcopy múltiples ficheros, abandona tan pronto
como falle una copia (por ejemplo debido a falta de espacio de
almacenamiento en el disco destino).
.TP
\&\fR\&\f(CWt\fR\ 
Transferencia de ficheros de texto.  \fR\&\f(CWMcopy\fR traduce los
pares retorno de carro/salto de línea a saltos de línea.
.TP
\&\fR\&\f(CWn\fR\ 
Sin confirmación cuando se sobreescriban ficheros Unix.
\fR\&\f(CWMcopy\fR no avisa al usuario cuando se sobreescribe un
fichero Unix existente. Para desactivar la confirmación para ficheros
DOS, emplee \fR\&\f(CW-o\fR.
.TP
\&\fR\&\f(CWm\fR\ 
Preserva el tiempo de modificación del fichero. Si el fichero destino
ya existe, y la opción \fR\&\f(CW-n\fR no está en efecto,
\fR\&\f(CWmcopy\fR pregunta si sobreescribir el fichero o renombrar el
nuevo fichero (vea \(ifcoincidencia de nombres\(is) para más detalles).
.PP
.SS "  Fallos"
Al contrario que en MS-DOS, el operador '+' (añadir) de MS-DOS no se
admite.
Sin embargo, Ud. puede emplear \fR\&\f(CWmtype\fR para producir el
mismo efecto:
 
.nf
.ft 3
.in +0.3i
mtype a:fichero1 a:fichero2 a:fichero3 > ficheroUnix
mtype a:fichero1 a:fichero2 a:fichero3 | mcopy - a:ficheroMsdos
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
.SS Mdel
.iX "p mdel"
.iX "c borrar ficheros MS-DOS"
.iX "c eliminar ficheros MS-DOS"
.iX "c cargarse ficheros MS-DOS"
.PP
La orden \fR\&\f(CWmdel\fR se emplea para borrar un fichero MS-DOS. Su
sintaxis es:
.PP
.(l I
\&\fR\&\f(CWmdel\fR [\fR\&\f(CW-v\fR] \fIficheromsdos\fR [ \fIficheromsdos\fR \&...  ]
.)l
 
.PP
\&\fR\&\f(CWMdel\fR borra ficheros en un sistema de ficheros MS-DOS.
.PP
\&\fR\&\f(CWMdel\fR pide verificación antes de borrar un fichero de
lectura exclusiva.
.PP
.SS Mdeltree
.iX "p mdeltree"
.iX "c borrar un directorio MS-DOS recursivamente"
.iX "c eliminar un directorio MS-DOS recursivamente"
.iX "c cargarse un directorio MS-DOS recursivamente"
.iX "c recursivamente borrar un directorio MS-DOS"
.PP
La orden \fR\&\f(CWmdeltree\fR se emplea para borrar un directorio
MS-DOS. Su sintaxis es:
.PP
.(l I
\&\fR\&\f(CWmdeltree\fR [\fR\&\f(CW-v\fR] \fIdirectoriomsdos\fR [\fIdirectoriomsdos\fR\&...]
.)l
 
.PP
\&\fR\&\f(CWMdeltree\fR borra un directorio, y todos los ficheros y
subdirectorios que contenga, de un sistema de ficheros MS-DOS. Es un
error que el directorio a borrar no exista.
.PP
.SS Mdir
.iX "p mdir"
.iX "c Ficheros de lectura exclusiva (listarlos)"
.iX "c Listar un directorio"
.iX "c Listado de directorio"
.PP
La orden \fR\&\f(CWmdir\fR se emplea para mostrar un directorio
MS-DOS. Su sintaxis es:
.PP
\&\fR\&\f(CWmdir\fR [\fR\&\f(CW-w\fR] \fIdirectoriomsdos\fR
.PP
\&\fR\&\f(CWmdir\fR [\fR\&\f(CW-f\fR] [\fR\&\f(CW-w\fR] [\fR\&\f(CW-a\fR] \fIficheromsdos\fR [ \fIficheromsdos\fR\&...] 
.PP
\&\fR\&\f(CWMdir\fR
muestra los contenidos de un directorio MS-DOS.
.PP
\&\fR\&\f(CWMdir\fR admite las siguientes opciones en la línea de órdenes:
.TP
\&\fR\&\f(CWw\fR\ 
Salida ancha. Con esta opción, \fR\&\f(CWmdir\fR imprime los nombres
de ficheros a lo largo de la página sin mostrar el tamaño de los
ficheros ni sus fechas de creación.
.TP
\&\fR\&\f(CWa\fR\ 
También lista los ficheros ocultos.
.TP
\&\fR\&\f(CWf\fR\ 
Rápido. No intenta averiguar el espacio libre. En discos grandes,
encontrar la cantidad de espacio libre toma una cantidad apreciable de
tiempo, puesto que debe leerse y analizarse la FAT entera. La opción
\fR\&\f(CW-f\fR pasa de largo este paso. Esta opción no se necesita en
sistemas de ficheros FAT32, que almacenan el tamaño explícitamente.
.PP
Ocurre un error si un componente del camino no es un directorio.
.PP
.SS Mformat
.iX "p mformat"
.iX "c Inicio de discos"
.iX "c Formateo de discos"
.iX "c Creación del sistema de ficheros"
.PP
La orden \fR\&\f(CWmformat\fR se emplea para añadir un sistema de
ficheros MS-DOS a un disquete formateado a bajo nivel. Su sintaxis es:
.PP
.(l I
\&\fR\&\f(CWmformat\fR [\fR\&\f(CW-t\fR \fIcilindros\fR] [\fR\&\f(CW-h\fR \fIcabezas\fR]
[\fR\&\f(CW-s\fR \fIsectores\fR] [\fR\&\f(CW-l\fR \fIetiqueta_volumen\fR] [\fR\&\f(CW-F\fR]
[\fR\&\f(CW-I\fR \fIfsVersión\fR] [\fR\&\f(CW-S\fR \fItamañocódigo\fR] [\fR\&\f(CW-2\fR
\&\fIsectores_en_pista_0\fR] [\fR\&\f(CW-M\fR \fItamaño_sector_software\fR]
[\fR\&\f(CW-a\fR] [\fR\&\f(CW-X\fR] [\fR\&\f(CW-C\fR] [\fR\&\f(CW-H\fR \fIsectores_ocultos\fR]
[\fR\&\f(CW-r\fR \fIsectores_raíz\fR] [\fR\&\f(CW-B\fR \fIsector_arranque\fR]
[\fR\&\f(CW-k\fR] \fIunidad:\fR
.)l
 
.PP
\&\fR\&\f(CWMformat\fR añade un sistema de ficheros MS-DOS mínimo
(sector de arranque, FAT, y directorio raíz) a un disquete que ya ha
sido formateado por un formateo Unix de bajo nivel.
.PP
Se admiten las siguientes opciones: (Las opciones S, 2, 1 y M pueden
no existir si esta copia de mtools se ha compilado sin la opción USE_2M.)
.TP
\&\fR\&\f(CWt\fR\ 
El número de cilindros.
.TP
\&\fR\&\f(CWh\fR\ 
El número de cabezas (lados).
.TP
\&\fR\&\f(CWs\fR\ 
El número de sectores por pista. Si se ha dado la opción 2m, el número
de sectores de 512 B equivalentes en pistas genéricas (esto es, no la
cabeza 0, pista 0). Si la opción 2m no se ha dado, el número de
sectores físicos por pista (que puede ser mayor de 512 bytes).
.TP
\&\fR\&\f(CWl\fR\ 
Una etiqueta de volumen opcional.
.TP
\&\fR\&\f(CWS\fR\ 
El tamaño de código. El tamaño del sector es 2 elevado a
(tamaño-de-código + 7).
.TP
\&\fR\&\f(CW2\fR\ 
Formato 2m. El parámetro de esta opción describe el número de sectores
en la pista 0, cabeza 0. Esta opción se recomienda para sectores
mayores de lo normal.
.TP
\&\fR\&\f(CW1\fR\ 
No emplear un formato 2m, incluso si la geometría actual del disco es
una geometría 2m.
.TP
\&\fR\&\f(CWM\fR\ 
Tamaño de sector de software. Este parámetro describe el tamaño de
sector en bytes empleado por el sistema de ficheros MS-DOS. Por
omisión es el tamaño de sector físico.
.TP
\&\fR\&\f(CWa\fR\ 
Si se da esta opción, se genera un número de serie al estilo de Atari.
Atari almacena su número de serie en la etiqueta OEM.
.TP
\&\fR\&\f(CWX\fR\ 
Formatea el disco como un disco XDF. Vea la sección XDF para más
detalles. El disco tiene primero que formatearse a bajo nivel
empleándose la utilidad xdfcopy incluida en el paquete fdutils.
.TP
\&\fR\&\f(CWC\fR\ 
Crea el fichero de imagen de disco para instalar el sistema de
ficheros MS-DOS en él. Obviamente, esto no vale para nada en
dispositivos físicos como disquetes y particiones de discos duros.
.TP
\&\fR\&\f(CWH\fR\ 
Número de sectores ocultos. Este parámetro es útil para formatear
particiones de discos duros, que no están alineadas en bordes de pista
(i.e., la primera cabeza del primer sector no pertenece a la
partición, pero contiene una tabla de particiones). En ese caso el
número de sectores ocultos es en general el número de sectores por
cilindro. Esto está sin probar.
.TP
\&\fR\&\f(CWn\fR\ 
Número de serie.
.TP
\&\fR\&\f(CWF\fR\ 
Formatea la partición como FAT32 (experimental).
.TP
\&\fR\&\f(CWI\fR\ 
Establece el id. de fsVersión (versión del sistema de ficheros) cuando
formatea una unidad con FAT32. Para averiguar esto, ejecute minfo en
una unidad FAT32 existente, y escríbame por correo contándome esto, de
forma que yo pueda incluir el valor correcto en futuras versiones de mtools.
.TP
\&\fR\&\f(CWc\fR\ 
Establece el tamaño de un racimo (cluster) (en sectores). Si este
tamaño generara una FAT demasiado grande para su número de bits,
mtools automáticamente incrementaría el tamaño de racimo, hasta que la
FAT fuera lo bastante pequeña.
.TP
\&\fR\&\f(CWr\fR\ 
Establece el tamaño del directorio raíz (en sectores). Sólo aplicable
a FATs de 12 y 16 bits.
.TP
\&\fR\&\f(CWB\fR\ 
Emplea el sector de arranque almacenado en el fichero o dispositivo
dado, en vez de usar el suyo propio. Sólo los campos de geometría se
actualizan para concordar con los parámetros de los discos destino.
.TP
\&\fR\&\f(CWk\fR\ 
Deja el sector de arranque existente tanto como puede. Sólo los campos
de geometría se actualizan para concordar con los parámetros de los
discos destino.
.PP
Para formatear un disquete a una densidad distinta de la
predeterminada, Ud. debe suministrar (por lo menos) aquellos
parámetros en la línea de órdenes que sean diferentes de los
predeterminados. 
.PP
\&\fR\&\f(CWMformat\fR devuelve 0 en caso de éxito ó 1 si falla.
.PP
No graba información sobre bloques malos en la FAT, emplee
\&\fR\&\f(CWmkmanifest\fR para eso.
.PP
.SS Mkmanifest
.iX "p mkmanifest"
.iX "c lista de empaquetar"
.PP
La orden \fR\&\f(CWmkmanifest\fR se emplea para crear un guión del
shell (lista de empaquetar) para restaurar nombres de ficheros
Unix. Su sintaxis es:
.PP
\&\fR\&\f(CWmkmanifest\fR [ \fIficheros\fR ]
.PP
\&\fR\&\f(CWMkmanifest\fR crea un guión del shell que ayuda en
la restauración de nombres de ficheros Unix que resultaron alterados
por las restricciones de los nombres de ficheros MS-DOS.
Los nombres de ficheros MS-DOS están restringidos a un nombre de 8
caracteres, extensiones de 3 caracteres, letras sólo en mayúsculas, no
nombres de dispositivos y no caracteres ilegales.
.PP
El programa mkmanifest es compatible con los métodos empleados en
\&\fR\&\f(CWpcomm, arc,\fR y \fR\&\f(CWmtools\fR para cambiar nombres
de ficheros Unix perfectamente buenos de forma que encajen en las
restricciones de MS-DOS. Esta orden sólo es útil si el sistema destino
que leerá el disquete no puede manejar nombres largos de vfat.
.PP
.SS "  Ejemplo"
Ud. quiere copiar los siguientes ficheros Unix a un disquete MS-DOS
(empleando la orden \&\fR\&\f(CWmcopy\fR).
.PP
 
.nf
.ft 3
.in +0.3i
  nombre_muy_largo
  masia.2.puntos
  ilegal:
  bien.c
  prn.dev
  Capital
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
\&\fR\&\f(CWMcopy\fR
convierte los nombres a:
.PP
 
.nf
.ft 3
.in +0.3i
  nombre_m
  masiax2.pun
  ilegalx
  bien.c
  xrn.dev
  capital
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
La orden:
 
.nf
.ft 3
.in +0.3i
mkmanifest nombre_muy_largo masia.2.puntos ilegal: bien.c prn.dev Capital >manifiesto
.fi
.in -0.3i
.ft R
.lp
 
\&\fRproduciría lo siguiente:
 
.nf
.ft 3
.in +0.3i
  mv nombre_m nombre_muy_largo
  mv masiax2.pun masia.2.puntos
  mv ilegalx ilegal:
  mv xrn.dev prn.dev
  mv capital Capital
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Observe que "bien.c" no requirió ninguna conversión, por lo tanto no
apareció en la salida.
.PP
Suponga que he copiado estos ficheros desde el disquete a otro sistema
Unix, y que ahora quiero los ficheros de vuelta con sus nombres
originales. Si el fichero "manifiesto" (la salida capturada antes) se
envió junto con esos ficheros, se podría emplear para convertir los
nombres de ficheros.
.PP
.SS "  Fallos"
.PP
Los nombres cortos generados por \fR\&\f(CWmkmanifest\fR siguen el
viejo convenio (de mtools-2.0.7) y no el de Windows 95 y mtools-3.0.
.PP
.SS Minfo
.iX "p mlabel"
.iX "c parámetros de mformat"
.iX "c obtención de parámetros de un sistema de ficheros DOS"
.PP
La orden \fR\&\f(CWminfo\fR muestra los parámetros de un sistema de
ficheros DOS, como el número de sectores, cabezas y cilindros. También
muestra una línea de orden mformat que puede emplearse para crear un
sistema de ficheros DOS similar en otro medio de almacenamiento
masivo. Sin embargo, esto no funciona con medios de almacenamiento 2m
o Xdf, ni con sistemas de ficheros DOS 1.0. La sintaxis es:
.(l I
\&\fR\&\f(CWminfo\fR \fIunidad\fR:
.)l
 
.PP
Minfo admite la siguiente opción:
.TP
\&\fR\&\f(CWv\fR\ 
Muestra un volcado en exadecimal del sector de arranque, además de la
otra información.
.PP
.SS Mlabel
.iX "p mlabel"
.iX "c Etiquetar un disco"
.iX "c Etiqueta de disco"
.PP
La orden \fR\&\f(CWmlabel\fR añade una etiqueta de volumen a un
disco. Su sintaxis es:
.(l I
\&\fR\&\f(CWmlabel\fR [\fR\&\f(CW-vcs\fR] \fIunidad\fR:[\fInueva_etiqueta\fR]
.)l
 
.PP
\&\fR\&\f(CWMlabel\fR muestra la etiqueta de volumen actual, si
existe. Si no se da
\&\fInueva_etiqueta\fR, y si tampoco se han dado las opciones
\fR\&\f(CWc\fR ni \&\fR\&\f(CWs\fR, se le pide al usuario una nueva
etiqueta de volumen. Para borrar una etiqueta de volumen existente,
pulse simplemente Intro cuando se le pregunte.
.PP
Se toma un cuidado razonable para crear una etiqueta de volumen
válida en MS-DOS. Si se especifica una etiqueta inválida,
\fR\&\f(CWmlabel\fR cambia la etiqueta (y muestra la nueva etiqueta si
está activo el modo prolijo). \fR\&\f(CWMlabel\fR
devuelve 0 en caso de éxito ó 1 en caso de fallo.
.PP
Mlabel admite las siguientes opciones:
.TP
\&\fR\&\f(CWc\fR\ 
Borra una etiqueta existente, sin preguntar al usuario.
.TP
\&\fR\&\f(CWs\fR\ 
Muestra la etiqueta existente, sin preguntar al usuario.
.PP
.SS Mmd
.iX "p mmd"
.iX "c Hacer un directorio"
.iX "c Crear un directorio"
.iX "c Creación de directorio"
.iX "c Creación de subdirectorio"
.PP
La orden \fR\&\f(CWmmd\fR se emplea para construir un subdirectorio de
MS-DOS. Su sintaxis es:
.PP
\&\fR\&\f(CWmmd\fR [\fR\&\f(CW-voOsSrRA\fR] \fIdirectoriomsdos\fR [
\&\fIdirectoriomsdos\fR\&... ]
.PP
\&\fR\&\f(CWMmd\fR construye un nuevo directorio en un sistema de
ficheros MS-DOS. Ocurre un error si el directorio ya existe.
.PP
.SS Mmount
.iX "p mmount"
.iX "c mejoras en Linux (mmount)"
.iX "c Montar un disco"
.iX "c Formatos de alta capacidad, montar"
.PP
La orden \fR\&\f(CWmmount\fR se emplea para montar un disco de
MS-DOS. Sólo está disponible en Linux, puesto que sólo es útil si el
núcleo del S.O. permite configurar la geometría del disco. Su sintaxis
es:
.PP
\&\fR\&\f(CWmmount\fR \fIunidadmsdos\fR [\fIargs-de-mount\fR]
.PP
\&\fR\&\f(CWMmount\fR
lee el sector de arranque de un disco MS-DOS, configura la geometría
de la unidad, y finalmente lo monta pasándole
\&\fR\&\f(CWargs-de-mount\fR a \fR\&\f(CWmount. \fR
Si no se dan argumentos para mount, se emplea el nombre del
dispositivo. Si el disco está protegido contra escritura,
automáticamente se monta como de lectura exclusiva.
.PP
.SS Mmove
.iX "p mmove"
.iX "c Mover ficheros (mmove)"
.iX "c Renombrar ficheros (mmove)"
.PP
La orden \fR\&\f(CWmmove\fR se emplea para mover o renombrar un
fichero o subdirectorio existente de MS-DOS. Su sintaxis es:
.PP
.(l I
\&\fR\&\f(CWmmove\fR [\fR\&\f(CW-voOsSrRA\fR] \fIficherofuente\fR
\fIficherodestino\fR

\&\fR\&\f(CWmmove\fR [\fR\&\f(CW-voOsSrRA\fR] \fIficherofuente\fR [ \fIficherofuente\fR\&... ] \fIdirectoriodestino\fR
.)l
.PP
\&\fR\&\f(CWMmove\fR mueve o renombra un fichero o subdirectorio
existente de MS-DOS. Al contrario de la versión de MS-DOS de
\fR\&\f(CWMOVE\fR, \fR\&\f(CWmmove\fR  es capaz de mover subdirectorios.
.PP
.SS Mpartition
.iX "p mpartition"
.iX "c particiones (crear)"
.iX "c discos Zip (particionarlos)"
.iX "c discos Jaz (particionarlos)"
.PP
La orden \fR\&\f(CWmpartition\fR se emplea para crear sistemas de
ficheros MS-DOS como particiones. Está pensado para emplearse en
sistemas no Linux, esto es, sistemas donde no están disponibles ni
fdisk ni acceso fácil a los dispositivos SCSI. Esta orden sólo
funciona en unidades donde se ha definido la variable de partición,
partition. 
.PP
.(l I
\&\fR\&\f(CWmpartition\fR \fR\&\f(CW-p\fR \fIunidad\fR

\&\fR\&\f(CWmpartition\fR \fR\&\f(CW-r\fR \fIunidad\fR

\&\fR\&\f(CWmpartition\fR \fR\&\f(CW-I\fR \fIunidad\fR

\&\fR\&\f(CWmpartition\fR \fR\&\f(CW-a\fR \fIunidad\fR

\&\fR\&\f(CWmpartition\fR \fR\&\f(CW-d\fR \fIunidad\fR

\&\fR\&\f(CWmpartition\fR \fR\&\f(CW-c\fR [\fR\&\f(CW-s\fR \fIsectores\fR] [\fR\&\f(CW-h\fR \fIcabezas\fR]
[\fR\&\f(CW-t\fR \fIcilindros\fR] [\fR\&\f(CW-v\fR [\fR\&\f(CW-T\fR \fItipo\fR] [\fR\&\f(CW-b\fR
\&\fIcomienzo\fR] [\fR\&\f(CW-l\fR longitud] [\fR\&\f(CW-f\fR]
\&\&
.)l
 
.PP
Mpartition admite las siguientes operaciones:
.TP
\&\fR\&\f(CWp\fR\ 
Imprime una línea de órdenes para recrear la partición para la
unidad. No se imprime nada si la partición para la unidad no se ha
definido, o si se ha detectado una inconsistencia. Si se pone también
la opción prolija (\fR\&\f(CW-v\fR), imprime la tabla de partición actual.
.TP
\&\fR\&\f(CWr\fR\ 
Borra la partición descrita por \fIunidad\fR.
.TP
\&\fR\&\f(CWI\fR\ 
Inicia la tabla de particiones, y borra todas las particiones.
.TP
\&\fR\&\f(CWc\fR\ 
Crea la partición descrita por \fIunidad\fR.
.TP
\&\fR\&\f(CWa\fR\ 
"Activa" la partición; esto es, la hace de arranque. Sólo una
partición puede ser de arranque cada vez.
.TP
\&\fR\&\f(CWd\fR\ 
"Desactiva" la partición; esto es, la hace de no arranque.
.PP
Si no se da ninguna operación, se muestran las definiciones actuales.
.PP
Para las creaciones de particiones, se dispone de las siguientes opciones:
.TP
\&\fR\&\f(CWs\ \fIsectores\fR\&\f(CW\fR\ 
El número de sectores por pista de la partición (que también es el
número de sectores por pista para la unidad entera).
.TP
\&\fR\&\f(CWh\ \fIcabezas\fR\&\f(CW\fR\ 
El número de cabezas de la partición (que también es el de la unidad
completa). De forma predeterminada, la información de geometría
(número de sectores y cabezas) se adivina a partir de entradas de una
tabla de partición vecina, o a partir del tamaño.
.TP
\&\fR\&\f(CWt\ \fIcilindros\fR\&\f(CW\fR\ 
El número de cilindros de la partición (no el número de cilindros de
la unidad entera).
.TP
\&\fR\&\f(CWb\ \fIcomienzo\fR\&\f(CW\fR\ 
El sitio de comienzo de la partición, expresado en sectores. Si no se
da, mpartition deja que la partición comience al principio del disco
(partición número 1), o inmediatamente tras el final de la partición
anterior. 
.TP
\&\fR\&\f(CWl\ \fIlongitud\fR\&\f(CW\fR\ 
El tamaño (longitud) de la partición, expresado en sectores. Si el
final no se da, mpartition se figura el tamaño a partir del número de
sectores, cabezas y cilindros. Si éstos tampoco se dan, da a la
partición el tamaño máximo posible, considerando el tamaño del disco y
el comienzo de la próxima partición.
.PP
La siguiente opción está disponible para todas las operaciones que
modifiquen la tabla de particiones:
.TP
\&\fR\&\f(CWf\fR\ 
Usualmente, antes de escribir cualquier cambio en la partición,
mpartition realiza ciertas comprobaciones de consistencia, como
solapamientos y alineamiento correcto de la partición. Si cualquiera de
estas comprobaciones falla, la tabla de partición no se cambia. La
opción \fR\&\f(CW-f\fR le permite no efectuar estas operaciones de
salvaguarda. 
.PP
La siguiente opción está disponible para todas las operaciones:
.TP
\&\fR\&\f(CWv\fR\ 
Junto con \fR\&\f(CW-p\fR imprime la tabla de particiones como es
ahora (si no hay una operación de cambio), o como es después de ser
modificada. 
.TP
\&\fR\&\f(CWvv\fR\ 
Si la opción de prolijidad se da dos veces, mpartition mostrará
un volcado hexadecimal de la tabla de particiones cuando se lea y
cuando se escriba en el dispositivo.
.PP
.SS Mrd
.iX "p mrd"
.iX "c Borrar un directorio"
.iX "c Eliminar un directorio"
.iX "c Cargarse un directorio"
.iX "c Borrado de directorio"
.iX "c Borrado de subdirectorio"
.PP
La orden \fR\&\f(CWmrd\fR se emplea para borrar un subdirectorio de
MS-DOS. Su sintaxis es:
.PP
.(l I
\&\fR\&\f(CWmrd\fR [\fR\&\f(CW-v\fR] \fIdirectoriomsdos\fR [ \fIdirectoriomsdos\fR\&... ]
.)l
 
.PP
\&\fR\&\f(CWMrd\fR borra un directorio de un sistema de ficheros
MS-DOS. Ocurre un error si el directorio no existe o no está vacío.
.PP
.SS Mren
.iX "p mren"
.iX "c Renombrar ficheros (mren)"
.iX "c Mover ficheros (mren)"
.PP
La orden \fR\&\f(CWmren\fR se emplea para renombrar o mover un fichero
o subdirectorio existente de MS-DOS. Su sintaxis es:
.PP
.(l I
\&\fR\&\f(CWmren\fR [\fR\&\f(CW-voOsSrRA\fR] \fIficherofuente\fR \fIficherodestino\fR
.)l
 
.PP
\&\fR\&\f(CWMren\fR
renombra un fichero existente en un sistema de ficheros MS-DOS.
.PP
En modo prolijo, \fR\&\f(CWMren\fR muestra el nuevo nombre de fichero
si el nombre suministrado es inválido.
.PP
Si se emplea la primera sintaxis (sólo un ficherofuente), y si el
nombre destino no contiene barras inclinadas ni dos puntos, el fichero
(o subdirectorio) se renombra en el mismo directorio, en vez de
moverse al directorio actual de 
\&\fR\&\f(CWmcd\fR como sería el caso con \fR\&\f(CWmmove\fR. Al
contrario de la versión MS-DOS de \fR\&\f(CWREN\fR, \fR\&\f(CWmren\fR
puede emplearse para renombrar directorios.
.PP
.SS Mtoolstest
.iX "p mtoolstest"
.iX "c Comprobar la corrección del fichero de configuración"
.iX "c Comprobar el fichero de configuración"
.iX "c Verificar el fichero de configuración"
.PP
La orden \fR\&\f(CWmtoolstest\fR se emplea para comprobar los ficheros
de configuración de mtools. Para llamarla, simplemente teclee
\fR\&\f(CWmtoolstest\fR sin ningún argumento.
\&\fR\&\f(CWMtoolstest\fR lee los ficheros de configuración de mtools,
e imprime la configuración acumulada de los ficheros de configuración
de mtools en \fR\&\f(CWstdout\fR (la salida estándar). La salida se
puede emplear como un mismo fichero de configuración (aunque puede que
Ud. quiera quitar cláusulas redundantes). Ud. puede emplear este
programa para convertir ficheros de configuración en el estilo antiguo
al nuevo.
.PP
.SS Mtype
.PP
La orden \fR\&\f(CWmtype\fR se emplea para mostrar los contenidos de
un fichero MS-DOS. Su sintaxis es:
.PP
.(l I
\&\fR\&\f(CWmtype\fR [\fR\&\f(CW-ts\fR] \fIficheromsdos\fR [ \fIficheromsdos\fR\&... ]
.)l
 
.PP
\&\fR\&\f(CWMtype\fR muestra el fichero MS-DOS especificado en la
pantalla, o en la salida estándar.
.PP
Además de las opciones normales, \fR\&\f(CWMtype\fR permite las siguientes:
.TP
\&\fR\&\f(CWt\fR\ 
Visión de fichero de texto.  \fR\&\f(CWMtype\fR traduce los pares
retorno de carro/salto de línea de entrada a saltos de línea.
.TP
\&\fR\&\f(CWs\fR\ 
\&\fR\&\f(CWMtype\fR pone a cero el bit más alto de los datos.
.PP
La orden \fR\&\f(CWmcd\fR puede emplearse para establecer el
dispositivo y el directorio de trabajo actuales (relativos a MS-DOS),
si no el valor predeterminado es \&\fR\&\f(CWA:/\fR.
.PP
\&\fR\&\f(CWMtype\fR devuelve 0 en caso de éxito, 1 en caso de fallo
total, ó 2 en caso de fallo parcial.
.PP
Al contrario de la versión MS-DOS de \fR\&\f(CWTYPE\fR,
\fR\&\f(CWmtype\fR permite varios argumentos.
.PP
.SS Mzip
.iX "c Disco Zip (utilidades)"
.iX "c Disco Jaz (utilidades)"
.iX "c Sacar un disco Zip/Jaz"
.iX "c Proteger de escritura un disco Zip/Jaz"
.iX "p mzip"
.iX "c Disco ZipTools"
.iX "c Disco de herramientas (unidades Zip y Jaz)"
.iX "c APlaceForYourStuff"
.iX "c discos Zip protegido por contraseña"
.PP
La orden \fR\&\f(CWmzip\fR se emplea para dar órdenes específicas de
discos ZIP en Solaris o HP/UX. Su sintaxis es:
.PP
.(l I
\&\fR\&\f(CWmzip\fR [\fR\&\f(CW-epqrwx\fR]
.)l
 
.PP
\&\fR\&\f(CWMzip\fR permite las siguientes opciones en la línea de órdenes:
.TP
\&\fR\&\f(CWe\fR\ 
Saca el disco.
.TP
\&\fR\&\f(CWf\fR\ 
Fuerza la eyección aun si el disco está montado (debe darse en adición
a \&\fR\&\f(CW-e\fR).
.TP
\&\fR\&\f(CWr\fR\ 
Protege el disco contra escritura.
.TP
\&\fR\&\f(CWw\fR\ 
Quita la protección de escritura.
.TP
\&\fR\&\f(CWp\fR\ 
Protege contra escritura con contraseña.
.TP
\&\fR\&\f(CWx\fR\ 
Protege con contraseña.
.TP
\&\fR\&\f(CWq\fR\ 
Interroga el estado.
.PP
Para eliminar la contraseña, establézcalo a uno de los modos sin contraseña
\&\fR\&\f(CW-r\fR o \fR\&\f(CW-w\fR: mzip entonces le pedirá la
contraseña, y desbloqueará el disco. Si Ud. ha olvidado la contraseña,
puede eliminarla formateando el disco a bajo nivel (mediante el
programa de configuración de la BIOS de su adaptador SCSI).
.PP
El disco ZipTools suministrado con la unidad también está protegido
con contraseña. En DOS o en un Mac, esta contraseña se quita
automáticamente una vez que el ZipTools se ha instalado. De varios
artículos publicados en la USENET, aprendí que la contraseña para el
disco de herramientas es \&\fR\&\f(CWAPlaceForYourStuff\fR\fR (``Un
sitio para sus cosas'').  Mzip conoce esta contraseña, y la prueba en
primer lugar, antes de pedirle una contraseña. Así que
\&\fR\&\f(CWmzip -w z:\fR desbloquea el disco de herramientas. El
disco de herramientas está formateado de una forma especial de forma
que sea utilizable en un PC y en un McIntosh. En un PC, el sistema de
ficheros de Mac aparece como un fichero oculto llamado
\&\fR\&\f(CW\(ifpartishn.mac\(is\fR.  Ud. puede borrarlo para
recuperar los 50 megabytes de espacio que toma el sistema de ficheros Mac.
.PP
.SS Xcopy
.iX "c copia recursiva"
.iX "c xcopy"
.iX "p xcopy"
.PP
El guión del shell \fR\&\f(CWxcopy\fR se emplea para copiar
recursivamente un directorio a otro. Su sintaxis es:
.PP
.(l I
\&\fR\&\f(CWxcopy\fR \fIdirectoriofuente\fR \fIdirectoriodestino\fR
.)l
 
.PP
Si el directoriodestino no existe, se crea. Si  existe, los ficheros
de directoriofuente se copian en él, y no se crea ningún subdirectorio
llamado \fIdirectoriofuente\fP, al revés de con
\&\fR\&\f(CWcp -rf\fR.
.PP
.SS "  Fallos"
.PP
Esta orden es un poco una colección de cosas que funcionan no se sabe
cómo. Una implementación correcta tendría que llevar a reescribir
varias partes significativas de mtools, pero desafortunadamente yo no
tengo ahora mismo tiempo para eso. Lo peor de esta implementación es
que es ineficiente en algunas arquitecturas (varias llamadas sucesivas
a mtools, lo que deja inútil el sistema de `caché' de mtools).
.PP
.SH "OPCIONES DE COMPILACIÓN ESPECÍFICAS DE LA ARQUITECTURA"
.iX "c discos XDF (configuración a la hora de la compilación)"
.iX "c Solaris (configuración a la hora de la compilación de vold)"
.iX "c Vold (configuración a la hora de la compilación)"
.iX "c Configuración a la hora de la compilación"
.PP
Para compilar mtools, primero llame a \fR\&\f(CW./configure\fR antes de
\&\fR\&\f(CWmake\fR. Además de las opciones normales de
\fR\&\f(CWautoconfigure\fR, se dispone de dos opciones específicas de
la arquitectura.
.TP
\&\fR\&\f(CW./configure\ --enable-xdf\fR\ 
.TQ
\&\fR\&\f(CW./configure\ --disable-xdf\fR
Activa el soporte para discos XDF. Esto está activo de forma
predeterminada. Vea la sección XDF para más detalles.
.TP
\&\fR\&\f(CW./configure\ --enable-vold\fR\ 
.TQ
\&\fR\&\f(CW./configure\ --disable-vold\fR
Activa el soporte para vold en Solaris. Cuando se emplea en conjunción
con vold, mtools utilizará diferentes ficheros especiales de
dispositivo para el acceso directo.
.TP
\&\fR\&\f(CW./configure\ --enable-new-vold\fR\ 
.TQ
\&\fR\&\f(CW./configure\ --disable-new-vold\fR
Activa el soporte nuevo para vold en Solaris. Se supone que esto
funciona mejor que el soporte antiguo.
.PP
.SH "TRANSPORTE DE MTOOS A ARQUITECTURAS QUE AÚN NO ESTÁN SOPORTADAS"
.iX "c Transporte"
.iX "c Valores predeterminados codificados en el programa compilado"
.PP
Este capítulo sólo es interesante para aquéllos que quieran
transportar mtools a una arquitectura que aún no esté soportada. Para
la mayoría de los sistemas comunes, las unidades predeterminadas ya
están definidas. Si quiere añadir unidades predeterminadas para un
sistema todavía no soportado, ejecute config.guess, para ver qué
identificación emplea autoconf para ese sistema. Esta identificación
es de la forma cpu-vendedor-so (por ejemplo, sparc-sun-sunos).  
Las partes cpu y so se pasan al compilador como opciones del
preprocesador. La parte del SO se pasa al compilador de tres formas. 
.TP
1.\ 
El nombre completo del so, con puntos reemplazados por subrayados.
sco3.2v2 daría sco3_2v2.
.TP
2.\ 
El nombre base del so. Sco3.2v2 daría Sco.
.TP
3.\ 
El nombre base del so más su versión mayor. Sco3.2v2 daría Sco3.
.PP
Las tres versiones se pasan, si son diferentes.
.PP
Para definir los dispositivos, emplee las entradas para los sistemas
que ya están presentes, como plantillas. En general, tienen la forma
siguiente: 
.PP
 
.nf
.ft 3
.in +0.3i
#if (defined (mi_cpu) && defined(mi_so))
#define predefined_devices   /* dispositivos predefinidos */
struct device devices[] = {
        { "/dev/primera_unidad", 'letra_unidad', descripción_unidad},
        \&... 
        { "/dev/última_unidad", 'letra_unidad', descripción_unidad}
}
#define INIT_NOOP
#endif
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
"/dev/primera_unidad" es el nombre del dispositivo o fichero imagen
que representa a la unidad. Letra_unidad es una letra de la 'a' a la 'z'
que da acceso a la unidad. Descripción_unidad describe el tipo de
unidad:
.TP
\&\fR\&\f(CWED312\fR\ 
disco de 3½'' de densidad extra (2,88 MB).
.TP
\&\fR\&\f(CWHD312\fR\ 
disco de 3½'' de alta densidad
.TP
\&\fR\&\f(CWDD312\fR\ 
disco de 3½'' de doble densidad
.TP
\&\fR\&\f(CWHD514\fR\ 
disco de 5¼'' de alta densidad
.TP
\&\fR\&\f(CWDD514\fR\ 
disco de 5¼'' de doble densidad
.TP
\&\fR\&\f(CWDDsmall\fR\ 
disco de 5¼'' de 8 sectores de doble densidad
.TP
\&\fR\&\f(CWSS514\fR\ 
disco de 5¼'' de una cara de doble densidad
.TP
\&\fR\&\f(CWSSsmall\fR\ 
disco de 5¼'' de una cara de 8 sectores de doble densidad
.TP
\&\fR\&\f(CWGENFD\fR\ 
unidad de disquete genérica (FAT de 12 bits)
.TP
\&\fR\&\f(CWGENHD\fR\ 
disco duro genérico (FAT de 16 bits)
.TP
\&\fR\&\f(CWGEN\fR\ 
dispositivo genérico (todos los parámetros concuerdan)
.TP
\&\fR\&\f(CWZIPJAZ(flags)\fR\ 
unidad ZIP genérica que emplea acceso normal. Esto usa la partición 4.
\&\fR\&\f(CWFlags\fR son cualesquiera opciones especiales que se pasen
a open.
.TP
\&\fR\&\f(CWRZIPJAZ(flags)\fR\ 
unidad ZIP genérica que emplea acceso crudo SCSI. Esto usa la
partición 4.
\&\fR\&\f(CWFlags\fR son cualesquiera opciones especiales que se pasen
a open.
.PP
Las entradas pueden describirse en más detalle:
 
.nf
.ft 3
.in +0.3i
 bits_fat,args_open,cilindros,cabezas,sectores,DEF_ARG
.fi
.in -0.3i
.ft R
.lp
 
\&\fR o, si Ud. necesita describir un desplazamiento (el sistema de
ficheros no empieza al principio)
 
.nf
.ft 3
.in +0.3i
 bits_fat,args_open,cilindros,cabezas,sectores,desplazamiento,DEF_ARG
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.TP
\&\fR\&\f(CWbits_fat\fR\ 
es uno de 12, 16 ó 0. 0 significa que el dispositivo acepta ambos
tipos de FAT.
.TP
\&\fR\&\f(CWargs_open\fR\ 
puede incluir argumentos a open como O_NDELAY u O_RDONLY, que pueden
ser necesarios para abrir el dispositivo. 0 significa que no se
necesita ningún argumento especial a open.
.TP
\&\fR\&\f(CWcilindros,cabezas,sectores\fR\ 
describen la geometría del disco. Si cilindros es 0, los parámetros de
cabezas y sectores no se tienen en cuenta, y la unidad acepta
cualquier geometría.
.TP
\&\fR\&\f(CWdesplazamiento\ \fR\ 
se emplea si el sistema de ficheros DOS no empieza al principio del
dispositivo o fichero imagen. Esto es útil sobre todo en los discos
RAM de Atari (que contienen su controlador de dispositivo al comienzo
del fichero) o para las imágenes del emulador de DOS DOSEmu (que
pueden representar un dispositivo particionado).
.PP
La definición de los valores predeterminados en el fichero de
dispositivos debería hacerse sólo si estos mismos dispositivos se
encuentran en un gran número de computadores anfitriones de este
tipo. En ese caso, por favor ¿podría notificarme sus nuevas
definiciones para que yo pueda incluirlas en la siguiente
distribución? Para ficheros puramente locales, yo recomiendo que
Ud. use los ficheros de configuración \fR\&\f(CW/etc/mtools.conf\fR y
\&\fR\&\f(CW~/.mtoolsrc\fR.
.PP
Sin embargo, los ficheros de dispositivo también permiten suministrar
las rutinas de establecimiento de la geometría. Éstas son necesarias
si Ud. quiere acceder a discos de alta capacidad.
.PP
Deberían suministrarse dos rutinas:
.TP
1.\ 
Lectura de los parámetros en curso
 
.nf
.ft 3
.in +0.3i
static inline int get_parameters(int fd, 
		      struct generic_floppy_struct *floppy)
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.IP
Ésta prueba la geometría actualmente configurada, y la devuelve en la
estructura generic_floppy_struct (que también debe ser declarada).
Fd es un descriptor de fichero abierto para el dispositivo.
.\", y buf es
.\"una estructura struct stat ya rellena, que puede ser útil.
Esta rutina debería devolver 1 si la prueba falla, y 0 en otro caso.
.TP
2.\ 
Establecimiento de nuevos parámetros
 
.nf
.ft 3
.in +0.3i
static inline int set_parameters(int fd, 
                      struct generic_floppy_struct *floppy,
                      struct stat *buf)
.fi
.in -0.3i
.ft R
.lp
 
\&\fR Ésta configura la geometría contenida en floppy en el descriptor
de fichero fd. Buf es el resultado de una llamada a stat (ya
rellena). Ésta debería devolver 1 si la nueva geometría no puede
configurarse, y 0 en otro caso.
.PP
También deberían darse un cierto número de macros del preprocesador:
.TP
\&\fR\&\f(CWTRACKS(floppy)\fR\ 
se refiere al campo track (pista) de la estructura floppy
.TP
\&\fR\&\f(CWHEADS(floppy)\fR\ 
se refiere al campo heads (cabezas) en la estructura floppy
.TP
\&\fR\&\f(CWSECTORS(floppy)\fR\ 
se refiere al campo de sectores por pista en la struct floppy
.TP
\&\fR\&\f(CWSECTORS_PER_DISK(floppy)\fR\ 
se refiere al campo de sectores por disco en la estructura floppy (si
es aplicable; si no, se deja sin definir)
.TP
\&\fR\&\f(CWBLOCK_MAJOR\fR\ 
número mayor del dispositivo floppy, cuando se ve como un dispositivo
de bloques
.TP
\&\fR\&\f(CWCHAR_MAJOR\fR\ 
número mayor del dispositivo floppy, cuando se ve como un dispositivo
de caracteres (también conocido como dispositivo "crudo", usado por
fsck) (deje esto sin definir, si su S.O. no tiene dispositivos crudos)
.PP
Para los formatos de verdadera alta capacidad (XDF, 2m, etc.), no hay
aún una interfaz limpia y documentada.
.SH "VÉASE TAMBIÉN"
mattrib
mbadblocks
mcd
mcopy
mdel
mdeltree
mdir
mformat
mkmanifest
mlabel
mmd
mmount
mmove
mrd
mread
mren
mtoolstest
mtype
mwrite
