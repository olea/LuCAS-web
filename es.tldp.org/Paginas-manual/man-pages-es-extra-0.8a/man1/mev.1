.TH MEV 1 "Febrero 1995"
.UC 4
.SH NOMBRE
     mev - un programa para informar de los eventos del ratón
.SH SINOPSIS
     mev [ opciones ]
.br
.SH DESCRIPCIÓN
El programa ``mev'' es parte del paquete gpm. La información
de más abajo está extraída del fichero texinfo, la cual es la
fuente de información preferida.

.LP
El programa mev se ha realizado tomando como modelo xev. Imprime en la
salida estándar (stdout) de la consola los eventos que 
recibe, tanto del telclado como del ratón.

.LP
El comportamiento por defecto de mev es capturar cualquier cosa, 
pero se pueden usar las opciones de la línea de comandos
para establecer diferentes campos en la estructura 
Gpm_Connect, para personalizar el comportamiento del programa. 
Estoy usando mev para manejar los eventos del ratón en emacs.

.LP
Las opciones de la línea de comandos para mev son las 
siguientes:
.TP
-C número
Selecciona una consola virtual desde la que recibir eventos.
Esto está pensado para ser usado para depuración
.TP
-d número
Selecciona una máscara por defecto. Por defecto el servidor recibe
cualquier evento no perteneciente a la máscara de eventos. La
máscara puede ser suministrada bien como un número decimal o
una cadena simbólica.
.TP
-e número
Selecciona la máscara de eventos. Por defecto cualquier evento es
recibido. La máscara puede ser suministrada bien como un
número decimal o una cadena simbólica
.TP
-E
Pasa a modo emacs. En modo emacs los eventos son
informados en formato lisp en lugar de números. Este es el
formato usado por el paquete t-mouse dentro de emacs.
.TP
-f
Adapta eventos dentro de la pantalla antes de informar de ellos.
Estas opciones readaptan los eventos de arrastre, los cuales están
autorizados para salir del borde de la pantalla, márgenes.
.TP
-i
Modo interactivo. Acepta entradas desde la entrada estándar para cambiar
parámetros de conexión.
.TP
-m número
Selecciona la máscara de modificadores mínimos. Cualquier evento menos
modificadores de los indicados no serán informado a mev. Por defecto es
0. La máscara debe ser suministrada bien como un número
decimal o una cadena simbólica.
.TP
-M número
Selecciona la máscara de modificadores máximos. Cualquier evento con más
modificadores que los indicados  no será informado a mev.
Por defecto es 0, es decir, todos los eventos serán recibidos.
La máscara debe ser suministrada bien como un número
decimal o una cadena simbólica.
.TP
-p
Solicita dibujar el puntero mientras se arrastra. Esta opción es
usada por emacs para evitar invocar a ioctl() desde el código
lisp.

.LP
Cuando los argumento no son decimales enteros, son 
considerados listas de caracteres alfanuméricos, separados 
por un único carácter no alfanumérico. Yo uso la coma ``,'',
pero cualquier otro funcionará.

.LP
Los nombres permitidos para eventos son move, drag, down o press,
up o release, motion (el cual es move y drag) y hard.

.LP
Los nombres permitidos para modificadores son shift, leftAlt,
rightAlt, anyAlt (uno o el otro) y control.

.LP
Cuando se especificada la opción -i, mev mira a su entrada
estándar como una línea de comandos en lugar de eventos. Las
líneas de entrada son analizadas, y los comandos push y pop
son reconocidos.

.LP
El comando push, entonces, acepta las opciones -d, -e, -m y
-M, con el mismo significado descrito anteriormente. Las opciones
no especificadas mantienen los valores previos y las máscaras
resultante son usadas para reabrir la conexión con el servidor.
pop es usado para desapilar de la pila la conexión. Si se intenta desapilar
de una pila vacía, el programa terminará.

.LP
Otros comandos reconocidos son info, usado para
devolver el tamaño de la pila, y quit para terminar
prematuramente el programa

.LP
.SH AUTOR
Alessandro Rubini <rubini@ipvvis.unipv.it>

.LP
.SH FICHEROS
.nf
/var/run/gpmctl En enchufe (socket) usado para conectarse a gpm.
.fi

.LP
.SH VÉASE TAMBIÉN
.nf
gpm(1)      El servidor del ratón
gpm-root(1) Un manejador de eventos para Control-Mouse.

.fi
El fichero info sobre `gpm', el cual da una completa
información y explica como escribir un cliente gpm.
