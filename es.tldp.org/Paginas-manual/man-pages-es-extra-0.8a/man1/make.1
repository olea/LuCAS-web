.\" Translated into Spanish on Fri May 29 1998 by Gerardo Aburruzaga
.\" García <gerardo@cica.es>
.\"
.TH MAKE 1L "22 Agosto 1989" "GNU" "Órdenes de Usuario"
.SH NOMBRE
make \- utilidad `make' de GNU para mantener grupos de programas
.SH SINOPSIS
.B "make "
[
.B \-f
makefile ] [ opción ] ... [ variable=valor ] ... [ objetivo ] ...
.SH AVISO
Esta página del Manual es un extracto de la documentación de
.IR "GNU make" .
Se actualiza sólo ocasionalmente, porque el proyecto GNU no emplea
nroff (ni incluso groff ;-) para su documentación. Para la
documentación completa y al día, remítase al fichero  
.B make
en formato Info, o al fichero
.B make.dvi
en formato DVI, que se construyen a partir del fichero fuente escrito
en TeXInfo
.BR make.texinfo .
.SH DESCRIPCIÓN
.LP
El propósito de la utilidad
.I make
es determinar automáticamente qué piezas de un programa necesitan ser
recompiladas, y lanzar las órdenes para recompilarlas.
Este manual describe la implementación de 
.I make 
del proyecto GNU, que ha sido escrita por el gran Richard Stallman y
por Roland McGrath.
Nuestros ejemplos muestran programas en C, que es lo más común, pero
se puede emplear
.I make
con cualquier lenguaje de programación cuyo compilador pueda
ejecutarse con una orden del shell.
De hecho,
.I make
no está limitado a compilar programas.
Se puede usar para describir cualquier tarea donde algunos ficheros
deban ser actualizados automáticamente a partir de otros en cualquier
momento en que éstos cambien.
.LP
Para prepararnos a utilizar
.IR make ,
debemos escribir antes un fichero llamado el
.I makefile
que describe las relaciones entre los ficheros de nuestro programa, y
las órdenes necesarias para actualizar cada fichero.
En un programa, normalmente el fichero ejecutable se actualiza a
partir de los ficheros o módulos objeto, los cuales a su vez se
construyen mediante la compilación de los ficheros con el código
fuente. 
.LP
Una vez que exista un \fImakefile\fP apropiado, cada vez que cambiemos
algún fichero fuente, esta simple orden:
.sp 1
.RS
.B make
.RE
.sp 1
basta y sobra para que se realicen todas las recompilaciones
necesarias. 
El programa
.I make
emplea los datos del \fImakefile\fP (y otros internos) y los tiempos
de última modificación de los ficheros para decidir cuáles de ellos
necesitan ser actualizados.  Para cada uno de esos ficheros, lanza las
órdenes que tiene grabadas en su base de datos.
.LP
.I make
ejecuta órdenes en el
.I makefile
para actualizar uno o más nombres de
.IR objetivo ,
donde
.I nombre
es típicamente un programa.
Si no se ha dado la opción
.BR \-f ,
.I make
buscará los 
.I makefiles
llamados
.IR GNUmakefile ,
.IR makefile ,
y
.IR Makefile ,
en este orden, parando en el primero que encuentre y dando un error si
no encuentra ninguno.
.LP
Normalmente deberíamos llamar a nuestro \fImakefile\fP o bien
.I makefile
o bien
.IR Makefile .
(Recomendamos
.I Makefile
porque normalmente aparece cerca del principio del listado de un
directorio, al lado de otros ficheros importantes como
.IR  LÉAME .)
El primer nombre que se busca,
.IR GNUmakefile ,
no se recomienda para la mayoría de los \fImakefiles\fP.
Solamente deberíamos emplear este nombre si tenemos un \fImakefile\fP
que sea específico del 
.I make 
de GNU y no pueda ser leído y comprendido por otras versiones de
.IR make .
Si
.I makefile
es `\-', se lee de la entrada estándar.
.LP
.I make
actualiza un objetivo si éste depende de ficheros de prerrequisito (o
dependencias) que hayan sido modificados desde la última modificación
del objetivo, o si éste no existe.
.SH OPCIONES
.sp 1
.TP 0.5i
.B \-b
.TP 0.5i
.B \-m
Estas opciones no hacen nada, y sólo se reconocen por compatibilidad
con otras versiones de 
.IR make .
.TP 0.5i
.BI "\-C " dir
Cambia el directorio de trabajo a
.I dir
antes de leer los \fImakefiles\fP o hacer otra cosa.
Si se especifican varias opciones
.BR \-C ,
cada una se interpreta en relación a la anterior:
.BR "\-C " /
.BR "\-C " etc
es equivalente a
.BR "\-C " /etc.
Esto se usa típicamente en llamadas recursivas a
.IR make .
.TP 0.5i
.B \-d
Muestra información de depuración además del procesamiento normal.
Esta información dice qué ficheros están siendo considerados para ser
rehechos, qué tiempos de ficheros están siendo comparados y con qué
resultados, qué ficheros necesitan realmente ser rehechos, qué reglas
implícitas están siendo tenidas en cuenta y cuáles se están aplicando:
o sea, todo lo interesante sobre cómo
.I make
decide las cosas que tiene que hacer.
.TP 0.5i
.B \-e
Da a las variables que vienen del entorno precedencia a las que vienen
de los \fImakefiles\fP.
.TP 0.5i
.BI "\-f " makefile
Emplea
.I makefile
como un
.IR makefile .
.TP 0.5i
.B \-i
No tiene en cuenta ningún error en las órdenes ejecutadas para
reconstruir ficheros.
.TP 0.5i
.BI "\-I " dir
Especifica un directorio
.I dir
en donde buscar \fImakefiles\fP incluidos.
Si se usan varias opciones
.B \-I
para especificar varios directorios, éstos se buscan en el orden
dado. 
De forma distinta a como se deben dar los argumentos de otras opciones
de
.IR make ,
los directorios dados en las opciones
.B \-I
pueden ir inmediatamente tras la I:
o sea, se permite tanto
.BI \-I dir
como
.BI "\-I " dir.
Esta sintaxis se permite por compatibilidad con la misma opción
.B \-I
del preprocesador de C.
.TP 0.5i
.BI "\-j " trabajos
Especifica el número de trabajos (órdenes) que se deban ejecutar
simultáneamente.  Si hay más de una opción
.BR \-j ,
sólo la última vale.
Si se da la opción
.B \-j
sin ningún argumento,
.I make
no pondrá límites al número de trabajos que puedan ejecutarse
simultáneamente. 
.TP 0.5i
.B \-k
Continúa tanto como sea posible tras un error.
Mientras que el objetivo que ha fallado, y los que dependen de él,
no pueden ser reconstruidos, las otras dependencias de estos objetivos
sí que pueden procesarse, así que con esta opción se procesan.
.TP 0.5i
.B \-l
.TP 0.5i
.BI "\-l " carga
Dice que no deberá empezarse ningún nuevo trabajo (mandato) si hay
otros trabajos en ejecución y la carga media es como poco
.I carga
(un número real, en coma flotante).
Sin el argumento, anula un límite anterior de carga, si lo hubiera.
.TP 0.5i
.B \-n
Muestra las órdenes que se ejecutarían, pero no se hace nada más. Muy
útil. 
.TP 0.5i
.BI "\-o " fichero
No reconstruye el
.I fichero
especificado, incluso siendo más antiguo que sus dependencias, y
tampoco reconstruye nada que dependa de cambios en
.IR fichero .
Esencialmente el fichero se trata como muy viejo, y sus reglas no son
tenidas en cuenta.
.TP 0.5i
.B \-p
Muestra la base de datos (reglas y valores de variables) que resultan
de leer los \fImakefiles\fP; luego todo se procesa de la forma usual o
de la que se haya especificado.
También se muestra la información de versión dada por la opción
.B \-v
(vea más abajo).
Para ver la base de datos sin hacer ninguna otra cosa, dé la orden
.B make
.B \-p
.BI \-f /dev/null.
.TP 0.5i
.B \-q
``Modo de interrogación (Query)''.
No ejecuta ninguna orden ni muestra nada; sólo devuelve un status de
salida cero si los objetivos especificados ya están actualizados, o no
cero si no lo están.
.TP 0.5i
.B \-r
Elimina el empleo de las reglas implícitas incorporadas.
También borra la lista predeterminada de sufijos para las reglas de
sufijo. 
.TP 0.5i
.B \-s
Modo de operación silencioso; no muestra las órdenes que se están
ejecutando. 
.TP 0.5i
.B \-S
Cancela el efecto de la opción
.BR \-k .
Esto nunca es necesario salvo en un
.I make
recursivo, en el que
.B \-k
puede venir heredado del
.I make
superior a través de MAKEFLAGS o si activamos
.B \-k
en la variable de ambiente MAKEFLAGS.
.TP 0.5i
.B \-t
Toca los ficheros (los marca como actualizados sin cambiarlos
realmente) en vez de ejecutar las órdenes pertientes.
Esto se emplea para pretender que las órdenes han sido ejecutadas, con
el fin de engañar a futuras ejecuciones de
.IR make .
.TP 0.5i
.B \-v
Muestra la versión del programa
.I make
más la lista de autores, una nota sobre los derechos de copia y otra
sobre la falta de garantía y a dónde enviar informes de fallos.
Después de imprimirse esta información, el procesamiento continúa
normalmente. Para obtener esta información sin ningún otro efecto, dé
la orden
.B make
.B \-v
.BI \-f /dev/null.
.TP 0.5i
.B \-w
Muestra un mensaje conteniendo el directorio de trabajo antes y
después de otro procesamiento.
Esto puede ser útil para seguir la pista a errores que vienen de
anidamientos complicados de órdenes
.I make
recursivas.
.TP 0.5i
.BI "\-W " fichero
Pretende que el objetivo
.I fichero
acaba de ser modificado.
Cuando se emplea con la opción
.BR \-n ,
esto nos enseña lo que pasaría si fuéramos a modificar ese fichero. 
Sin
.BR \-n ,
es casi lo mismo que ejecutar la orden
.I touch
en el fichero dado antes de dar la orden
.IR make ,
salvo en que el tiempo de modificación se cambia solamente en la
imaginación de
.IR make .
.SH "OTROS ARGUMENTOS"
.sp 1
.TP 0.5i
.B variable=valor
Le da a la 
.I variable
de 
.B make
el 
.I valor 
especificado. Esta definición tiene precedencia sobre la que pudiera
haber en el 
.IR makefile .
.TP 0.5i
.B objetivo
Cualquier argumento que no empiece por \- o que no contenga un signo =
se considera un objetivo que 
.B make
tiene que construir. Si no se menciona ninguno en la línea de órdenes,
.B make 
construirá el primer objetivo que encuentre en el
.IR makefile .
.SH "VÉASE TAMBIÉN"
.PD 0
.TP 2.0i
/usr/info/make.info*
.I
The GNU Make Manual
.PD
.SH FALLOS
Consulte el capítulo `Problems and Bugs' en
.IR "The GNU Make Manual" .
.SH AUTORES
Dennis Morse, de la Stanford University, escribió originalmente esta
página del Manual.
Roland McGrath trabajó posteriormente en ella.
Fue traducida al español por Gerardo Aburruzaga García
(gerardo@cica.es), quien añadió además algunas líneas (además de ésta
;-). 
