.\" Copyright (c) 1991 Free Software Foundation
.\" See section COPYING for conditions for redistribution
.\" $Id: gdb.1,v 1.3 1991/12/13 22:22:58 pesch Exp $
.\" Translated on Dec 10 1998 by Antonio Flores Gil
.\"    <aflores@ditec.um.es>
.TH gdb 1 "4 Nov 1991" "Herramientas GNU" "Herramientas GNU"
.SH NOMBRE
gdb \- El depurador GNU
.SH SINOPSIS
.na
.TP
.B gdb
.RB "[\|" \-help "\|]"
.RB "[\|" \-nx "\|]"
.RB "[\|" \-q "\|]"
.RB "[\|" \-batch "\|]"
.RB "[\|" \-cd=\c
.I dir\c
\|]
.RB "[\|" \-f "\|]"
.RB "[\|" "\-b\ "\c
.IR bps "\|]"
.RB "[\|" "\-tty="\c
.IR dev "\|]"
.RB "[\|" "\-s "\c
.I symfile\c
\&\|]
.RB "[\|" "\-e "\c
.I prog\c
\&\|]  
.RB "[\|" "\-se "\c
.I prog\c
\&\|]
.RB "[\|" "\-c "\c
.I core\c
\&\|]
.RB "[\|" "\-x "\c
.I cmds\c
\&\|]
.RB "[\|" "\-d "\c
.I dir\c
\&\|]
.RB "[\|" \c
.I prog\c
.RB "[\|" \c
.IR core \||\| procID\c
\&\|]\&\|]
.ad b
.SH DESCRIPCIÓN
El proposito de un depurador como GDB es permitir al usuario ver lo que 
está ocurriendo ``dentro'' de otro programa mientras que se está ejecutando
\(em\& o lo que estaba haciendo en el momento que falló.

GDB puede hacer cuatro tipo de cosas (más otras cosas para dar soporte
a éstas) para ayudarte a capturar errores en el acto:

.TP
\ \ \ \(bu
Comenzar tu programa, especificando cualquier cosa que pueda afectar a su
comportamiento.

.TP
\ \ \ \(bu
Hacer que tu programa se pare al cumplirse las condiciones especificadas.

.TP
\ \ \ \(bu
Examinar que ha pasado, cuando tu programa se ha parado.

.TP
\ \ \ \(bu
Cambiar cosas de tu programa, de tal manera que puedas experimentar
corrigiendo los efectos de un fallo y continuar para descubrir otros.

.PP

Puedes usar GDB para depurar programas escritos en C, C++, y Modula-2.
El soporte para Fortran se añadirá cuando esté listo un compilador GNU
Fortran.

GDB se invoca con la orden de shell \c
.B gdb\c
\&.  Una vez comenzado, lee órdenes del terminal hasta que le dices que
salga con la orden GDB \c
.B quit.\c
\&
Usando la orden \c
.B help\c
\& puedes obtener una ayuda directa del \c
.B gdb.\c
\&

Se puede ejecutar \c
.B gdb\c
\& sin argumentos ni opciones; pero la manera más común de comenzar
GDB es con uno o dos argumentos, especificando un programa ejecutable con el
argumento: 
.sp
.br
gdb\ programa
.br
.sp

También puedes comenzar con un programa ejecutable y un fichero core
específico: 
.sp
.br
gdb\ programa\ core
.br
.sp

Puedes, en su lugar, especificar un ID de proceso como segundo argumento, si
quieres depurar un proceso en ejecución:
.sp
.br
gdb\ programa\ 1234
.br
.sp

ligaría GDB al proceso \c
.B 1234\c
\& (al menos que también tengas un fichero denominado `\|\c
.B 1234\c
\&\|'; GDB busca un fichero core en primer lugar).

Aquí están las ordenes más frecuentemente necesitadas en GDB:
.TP
.B break \fR[\|\fIfichero\fB:\fR\|]\fIfunción
\&
Pone un punto de ruptura en \c
.I función\c
\& (en \c
.I fichero\c
\&).
.TP
.B run \fR[\|\fIarglist\fR\|]
Comienza tu programa (con \c
.I arglist\c
\&, si se especifica).
.TP
.B bt
Backtrace: muestra la pila del programa.
.TP
.BI print " expr"\c
\&Muestra el valor de una expresión.
.TP
.B c
Continua ejecutando tu programa (después de parar,
p.e. en un punto de ruptura). 
.TP
.B next
Ejecuta la siguiente línea del programa (después de parar); pasa \c 
.I sobre\c
\& cualquier llamada a función que apareciera en la línea.
.TP
.B step
Ejecuta la siguiente línea del programa (despué de parar);  \c 
.I entrando\c
\& en cualquier llamada a función que apareciera en la línea.
.TP
.B help \fR[\|\fInombre\fR\|]
Muestra información sobre la orden GDB \c
.I nombre\c
\&, o información general sobre como utilizar GDB.
.TP
.B quit
Salir de GDB.
.PP
Para todos los detaller sobre GDB, véase \c
.I 
Using GDB: A Guide to the GNU Source-Level Debugger\c
\&, by Richard M. Stallman and Roland H. Pesch.  El mismo texto está
disponible en línea como la entrada \c
.B gdb\c
\& en el programa \c
.B info.\c
\&
.SH OPCIONES
Cualquier argumento distinto de las opciones indica un fichero ejecutable
y un fichero core (o un ID de proceso); es decir, el primer argumento
encontrado si la bandera de opción asociada es equivalente a la opción
`\|\c 
.B \-se\c
\&\|', y el segundo, si existe, es equivalente a la opción `\|\c
.B \-c\c
\&\|' si es el nombre de un fichero.  Muchas opciones tienen tanto
formato largo como corto; ambos se muestra aquí.  Los formatos largos
también se reconocen si los truncas, siempre que sea lo
suficientemente largo para que la opción que representa no sea ambigüa.
(Si lo deseas, puedes indicar los argumentos de opción con `\|\c 
.B +\c
\&\|' en  lugar de  `\|\c
.B \-\c
\&\|', aunque nosotros mostramos la convención más usual.)

Todas las opciones y argumentos en la línea de ordenes que des se 
procesann en orden secuencial. El orden es importante cuando se usa
la opción
`\|\c 
.B \-x\c
\&\|'.

.TP
.B \-help
.TP
.B \-h
Lista todas las opciones, con explicaciones breves.


.TP
.BI "\-symbols=" "fichero"\c
.TP
.BI "\-s " "fichero"\c
\&
Lee la tabla de símbolos del fichero \c
.I fichero\c
\&.

.TP
.BI "\-exec=" "fichero"\c
.TP
.BI "\-e " "fichero"\c
\&
Usa el fichero \c
.I fichero\c
\& como el fichero ejecutable a ejecutar cuando sea adecuado,
y para examinar los datos puros en unión con un volcado core.

.TP
.BI "\-se=" "fichero"\c
\&
Lee la tabla de símbolos del fichero \c
.I fichero\c
\& y la usa como el fichero ejecutable.

.TP
.BI "\-core=" "fichero"\c
.TP
.BI "\-c " "fichero"\c
\&
Usa el fichero \c
.I fichero\c
\& como un volcado core para examinar.

.TP
.BI "\-command=" "fichero"\c
.TP
.BI "\-x " "fichero"\c
\&
Ejecuta las ordenes GDB del fichero \c
.I fichero\c
\&.  

.TP
.BI "\-directory=" "directorio"\c
.TP
.BI "\-d " "directorio"\c
\&
Añade \c
.I directorio\c
\& al camino de búsqueda de los ficheros fuente. 
.PP

.TP
.B \-nx
.TP
.B \-n
No ejecuta las ordenes de ningún fichero de inicialización `\|\c 
.B .gdbinit\c
\&\|'.
Normalmente, las ordenes de estos ficheros se ejecutan después de que todas
las opciones de comando y los argumentos hayan sido procesados.


.TP
.B \-quiet
.TP
.B \-q
``Quiet''.  No imprime los mensajes introductorios y de copyright.   Estos
mensajes también se suprimen en el modo de trabajo por lotes.

.TP
.B \-batch
Se ejecuta en modo trabajo por lotes.  Finaliza con estado \c
.B 0\c
\& después de procesar todos los ficheros de ordenes especificados 
con
`\|\c
.B \-x\c
\&\|' (y `\|\c
.B .gdbinit\c
\&\|', si no está inhibido).
Finaliza con un estado distinto del cero si ocurre un error durante
la ejecución de las ordenes GDB en los ficheros de ordenes.

El modo de trabajo por lotes puede ser util cuando se ejecuta
GDB como un filtro, pot ejemplo para bajarse y ejecutar un programa
en otro ordenador; para hacer que sea más útil, el mensaje 
.sp 
.br
Program\ exited\ normally.
.br
.sp

(que se muestra normalmente siempre que un programa ejecutándose bajo el
control de GDB termina) no se muestra cuando se ejecuta en modo de trabajo
por lotes.

.TP
.BI "\-cd=" "directorio"\c
\&
Ejecuta GDB usando \c
.I directorio\c
\& como directorio de trabajo,
en lugar del directorio actual.

.TP
.B \-fullname
.TP
.B \-f
Emacs activa esta opción cuando ejecuta GDB como un subproceso.  Indica al 
GDB que saque el nombre completo del fichero y el número de línea de manera
estándar y reconocible cada vez que se muestra una porción de pila
(lo que incluye cada vez que el programa se para).  Este formato
reconocible se parece a do caracteres `\|\c 
.B \032\c
\&\|', seguidos del nombre del fichero, el número de línea y la
posición del caracter separados por comas, y una nueva línea.  
El programa de interface Emacs-a-GDB usa los dos caracteres
program uses the two 
`\|\c 
.B \032\c 
\&\|' como una señal para mostra el código fuente para
la porción.

.TP
.BI "\-b " "bps"\c
\&
Fija la velocidad de la línea (ratio de baudios o bits por
segundo) de cualquier interface serie usado por GDB
para la depuración remota.

.TP
.BI "\-tty=" "dispositivo"\c
\&
Se ejecuta usando \c
.I dispositivo\c
\& como la entrada y salida estándar de tu programa. 
.PP

.SH "VÉASE TAMBIÉN"
Entrada
.RB "`\|" gdb "\|'"
en
.B info\c
\&;
.I 
Using GDB: A Guide to the GNU Source-Level Debugger\c
, Richard M. Stallman and Roland H. Pesch, July 1991.
.SH COPYING
Copyright (c) 1991 Free Software Foundation, Inc.
.PP
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.
.PP
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.
.PP
Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be included in
translations approved by the Free Software Foundation instead of in
the original English.
