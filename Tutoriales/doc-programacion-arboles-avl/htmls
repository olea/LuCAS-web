<HTML
><HEAD
><TITLE
>Árboles AVL</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.74b"><LINK
REL="NEXT"
TITLE="Menor cantidad posible de nodos para una altura
    dada"
HREF="altura_vs_size.html"></HEAD
><BODY
CLASS="ARTICLE"
><DIV
CLASS="ARTICLE"
><DIV
CLASS="TITLEPAGE"
><H1
CLASS="TITLE"
><A
NAME="AEN2"
>Árboles AVL</A
></H1
><H3
CLASS="AUTHOR"
><A
NAME="AEN4"
>Sebastián Gurin (Cancerbero)</A
></H3
><SPAN
CLASS="RELEASEINFO"
><BR></SPAN
><P
CLASS="COPYRIGHT"
><A
HREF="ln10.html"
>Copyright</A
> &copy; 2004 by Sebastián Gurin</P
><HR></DIV
><DIV
CLASS="TOC"
><DL
><DT
><B
>Table of Contents</B
></DT
><DT
><A
HREF="t1.html#AEN13"
>Introducción</A
></DT
><DT
><A
HREF="altura_vs_size.html"
>Menor cantidad posible de nodos para una altura
    dada</A
></DT
><DT
><A
HREF="decl_tipo_dato.html"
>Declaración del tipo de dato</A
></DT
><DT
><A
HREF="altura_sec.html"
>Consideraciones sobre la altura de los nodos</A
></DT
><DT
><A
HREF="rotacion_simple.html"
>Rotaciones simples</A
></DT
><DT
><A
HREF="rotacion_doble.html"
>Rotaciones dobles</A
></DT
><DT
><A
HREF="balance_sec.html"
>Balance del árbol</A
></DT
><DT
><A
HREF="x229.html"
>Inserción</A
></DT
><DT
><A
HREF="x235.html"
>Eliminación</A
></DT
><DT
><A
HREF="x253.html"
>Conclusión</A
></DT
><DT
><A
HREF="x256.html"
>Performance</A
></DT
><DT
><A
HREF="b259.html"
>Bibliography</A
></DT
><DT
>A. <A
HREF="a268.html"
>GNU Free Documentation License</A
></DT
></DL
></DIV
><DIV
CLASS="SECTION"
><H1
CLASS="SECTION"
><A
NAME="AEN13"
>Introducción</A
></H1
><DIV
CLASS="FORMALPARA"
><P
><B
>Definición. </B
>Un <SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>árbol
      AVL</I
></SPAN
> es un árbol binario de búsqueda que cumple
      con la condición de que la diferencia entre las alturas de
      los subárboles de cada uno de sus nodos es, como mucho
      1. </P
></DIV
><P
>La denominación de árbol AVL viene dada por los
    creadores de tal estructura (Adelson-Velskii y
    Landis). </P
><P
>Recordamos que un <SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>árbol binario de
    búsqueda</I
></SPAN
> es un árbol binario en el cual cada nodo
    cumple con que todos los nodos de su subárbol izquierdo son
    menores que la raíz y todos los nodos del subárbol derecho
    son mayores que la raíz. </P
><P
>Recordamos también que el tiempo de las operaciones
    sobre un árbol binario de búsqueda son O(log n) promedio,
    pero el peor caso es O(n), donde n es el número de
    elementos.</P
><P
>La <SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>propiedad de equilibrio</I
></SPAN
> que
    debe cumplir un árbol para ser AVL asegura que la profundidad
    del árbol sea O(log(n)), por lo que las operaciones sobre
    estas estructuras no deberán recorrer mucho para hallar el
    elemento deseado. Como se verá, el tiempo de ejecución de las
    operaciónes sobre estos árboles es, a lo sumo O(log(n)) en el
    peor caso, donde n es la cantidad de elementos del
    árbol. </P
><P
>Sin embargo, y como era de esperarse, esta misma
      propiedad de equilibrio de los árboles AVL implica una
      <SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>dificultad</I
></SPAN
> a la hora de insertar o
      eliminar elementos: estas operaciones pueden no conservar
      dicha propiedad. </P
><DIV
CLASS="FIGURE"
><A
NAME="TREE01"
></A
><P
><B
>Figure 1. Árbol AVL de enteros</B
></P
><P
><IMG
SRC="tree01.png"
ALIGN="CENTER"></P
></DIV
><P
>A modo de ejemplificar esta dificultad, supongamos que
      al árbol AVL de enteros de <A
HREF="t1.html#TREE01"
>Figure 1</A
> le
      queremos agregar el entero 3. Si lo hacemos con el
      procedimiento normal de inserción de árbols binarios de
      búsqueda el resultado sería el árbol de <A
HREF="t1.html#TREE02"
>Figure 2</A
> el cual ya no cumple con la condición de
      equilibrio de los árboles AVL dado que la altura del
      subárbol izquierdo es 3 y la del subárbol derecho es
      1. </P
><DIV
CLASS="FIGURE"
><A
NAME="TREE02"
></A
><P
><B
>Figure 2. Árbol que no cumple con la condición de equilibrio
        de los árboles AVL.</B
></P
><P
><IMG
SRC="tree02.png"
ALIGN="CENTER"></P
></DIV
><P
>En <A
HREF="rotacion_simple.html"
>the Section called <I
>Rotaciones simples</I
></A
> se pasará a explicar una
    serie de operaciones sobre los nodos de un árbol AVL con las
    cuales poder restaurar la propiedad de equilibrio de un árbol
    AVL luego de agregar o eliminar elementos. </P
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="altura_vs_size.html"
ACCESSKEY="N"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Menor cantidad posible de nodos para una altura
    dada</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>