.\" Copyright Andries Brouwer, Ragnar Hojland Espinosa and A. Wik, 1998.
.\"
.\" This file may be copied under the conditions described
.\" in the LDP GENERAL PUBLIC LICENSE, Version 1, September 1998
.\" that should have been distributed together with this file.
.\" 
.\"
.\" Re-translated into Spanish on Wed Dec 9 1998 by Gerardo Aburruzaga
.\" García <gerardo.aburruzaga@uca.es>
.\" Translation revised on Sun Apr 4 1999 by Juan Piernas <piernas@ditec.um.es>
.\" Translation revised on Thu Jan 6 2000 by Juan Piernas <piernas@ditec.um.es>
.\"
.TH CHMOD 1 "Noviembre 1998" "GNU fileutils 4.0"
.SH NOMBRE
chmod \- cambia los permisos de acceso de ficheros
.SH SINOPSIS
.BI "chmod [" opciones "] " "modo fichero..."
.sp
Opciones de POSIX:
.B [\-R]
.sp
Opciones de GNU (en la forma más corta):
.B [\-cfvR]
.BI [\-\-reference= rfile ]
.B "[\-\-help] [\-\-version] [\-\-]"
.SH DESCRIPCIÓN
.B chmod
cambia los permisos de cada 
.I fichero
dado según
.IR modo ,
que puede ser o bien una representación simbolica de los cambios a
realizar, o bien un número octal que representa el patrón de bits de
los nuevos permisos.
.PP
El formato de un argumento de cambio de modo simbólico es
.br
\&`[ugoa...][[+\-=][rwxXstugo...]...][,...]'.
.PP
Tal argumento es una lista de órdenes de cambio de modo simbólico,
separadas por comas.
Cada orden de cambio de modo simbólico empieza con cero o más letras
del conjunto `ugoa': éstas controlan a qué usuarios se
referirán los nuevos permisos del fichero cuyos permisos se van a
cambiar: el usuario propietario (u), otros usuarios distintos del
propietario pero del mismo grupo
que el del fichero (g), otros usuarios que ni son el propietario ni
pertenecen al grupo del fichero (o), o todos los usuarios (a). De
forma que `a' equivale aquí a `ugo'.
Si no se da ninguna de estas letras, el efecto es el mismo que si se
hubiera puesto `a', salvo que los bits que están activos en la máscara
umask no se ven afectados.
.PP
El operador `+' hace que los permisos seleccionados se añadan a los ya
existentes en cada fichero; `\-' hace que se quiten de los que ya
había, y `=' hace que sean los únicos que el fichero va a tener.
.PP
Las letras `rwxXstugo' seleccionan los nuevos permisos para los
usuarios afectados: lectura (r), escritura o modificación (w),
ejecución (para un fichero ejecutable) o permiso de paso (para
directorios) (x), ejecución solamente si el fichero es un directorio o
ya tiene permiso de ejecución para algún usuario (X), activar el bit
SUID o SGID para ejecución (s), activar el bit "pegajoso" o STI (t), 
los permisos que el usuario propietario del fichero
ya tiene (u), los que otros usuarios del grupo del fichero, pero no el
propietario, ya tienen (g), y los que otros usuarios distintos de los
anteriores ya tienen (o).
(Así, `chmod g\-s fichero' quita el bit SGID (establecer el
identificador de grupo),
\&`chmod ug+s fichero' activa los bits SUID y SGID, pero en cambio 
\&`chmod o+s fichero' no hace nada.)
.PP
El `bit pegajoso' no está descrito por POSIX.
El nombre deriva del significado original: mantener el texto del
programa en el dispositivo de intercambio (swap).
Esto es un juego de palabras entre `pegajoso', en inglés STIcky, y
STI, por Save Text Image (N. del T.).

Hoy día, cuando se aplica a un directorio, significa que solamente el
propietario del fichero y el propietario de ese directorio pueden
borrar el fichero de dicho directorio.
(Esto se emplea comúnmente en directorios como /tmp que tienen permiso
de escritura general.)
.PP
Un modo numérico está compuesto de 1 a 4 dígitos octales (0-7),
formados mediante adición de los bits de valores 4, 2 y 1. Los dígitos
que falten se toman como ceros iniciales. El primer dígito selecciona
los atributos SUID (4), SGID (2) y STI [`sticky'] (1). El segundo selecciona
los permisos para el usuario propietario del fichero: lectura (4),
escritura (2) y ejecución (1); el tercero, los permisos para otros
usuarios del mismo grupo que el fichero, pero no el propietario, con
los mismos valores que antes; y por último, el cuarto dígito
selecciona los permisos para los otros usuarios que no son ni el
propietario ni están en el mismo grupo que el fichero, con los mismos
valores de nuevo.
.PP
.B chmod
nunca cambia los permisos de enlaces simbólicos; la llamada al sistema
.BR chmod (2)
no puede cambiar sus permisos. Esto no es un problema puesto que los
permisos de los enlaces simbólicos nunca se usan.
Sin embargo, para cada enlace simbólico puesto en la línea de órdenes,
.B chmod
cambia los permisos del fichero al cual apunta.
En cambio,
.B chmod
hace caso omiso de los enlaces simbólicos que encuentre durante el
recorrido recursivo de directorios.
.SH "OPCIONES DE POSIX"
.TP
.B "\-R"
Cambia recursivamente los permisos de directorios y sus contenidos.
.SH "OPCIONES DE GNU"
.TP
.B "\-c, \-\-changes"
Muestra un mensaje mencionando solamente aquellos ficheros cuyos
permisos cambian realmente.
.TP
.B "\-f, \-\-silent, \-\-quiet"
No muestra mensajes de error sobre ficheros cuyos permisos no se
pueden cambiar.
.TP
.B "\-v, \-\-verbose"
Describe prolijamente la acción efectuada o no para cada
.IR fichero .
.TP
.B "\-R, \-\-recursive"
Cambia recursivamente los permisos de directorios y sus contenidos.
.SH "OPCIONES ESTÁNDARES DE GNU"
.TP
.B "\-\-help"
Muestra un mensaje en la salida estándar sobre el modo de empleo y
acaba con código de éxito.
.TP
.B "\-\-version"
Muestra en la salida estándar información sobre la versión y luego
acaba con código de éxito.
.TP
.B "\-\-"
Termina la lista de opciones.
.TP
.BI "\-\-reference=" "rfile"
(Nueva en fileutils 4.0.)
Cambia el modo de
.I file
al del fichero
.IR rfile .
.SH ENTORNO
Las variables LANG, LC_ALL, LC_CTYPE y LC_MESSAGES tienen los
significados usuales.
.SH "CONFORME A"
POSIX 1003.2 sólo requiere la opción \-R. El empleo de otras opciones
puede no ser transportable. Este estándar no describe el bit de
permiso `t'. Este estándar no especifica si \fBchmod\fP debe preservar
la consistencia desactivando o rehusando activar los bits SUID y SGID,
p. ej., cuando se ponen a cero todos los bits de ejecución, o si
\fBchmod\fP debe hacer caso al bit `s' en absoluto.
.SH "MODOS NO ESTÁNDARES"
Arriba describimos el empleo del bit `t' en directorios.  Varios
sistemas adjudican significados especiales a combinaciones de bits de
modo, que de otra forma no tendrían sentido.  En particular, Linux,
siguiendo las directrices de System V (consulte la Definición de
Interfaz System V (SVID) versión 3), deja que el bit SGID para
ficheros sin permiso de ejecución para el grupo marque el fichero para
bloqueo ("candado") obligatorio. Para más detalles, vea el fichero
.IR /usr/src/linux/Documentation/mandatory.txt .
.SH OBSERVACIONES
Esta página describe
.B chmod
según se encuentra en el paquete fileutils-4.0; otras versiones
pueden diferir un poco. Envíe por correo electrónico correcciones y
adiciones a la dirección aeb@cwi.nl.
Informe de fallos en el programa a
fileutils-bugs@gnu.ai.mit.edu.

