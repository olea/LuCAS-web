.\" Copyright Andries Brouwer, Ragnar Hojland Espinosa and A. Wik, 1998.
.\"
.\" This file may be copied under the conditions described
.\" in the LDP GENERAL PUBLIC LICENSE, Version 1, September 1998
.\" that should have been distributed together with this file.
.\"
.\" Translated into Spanish on Mon Jan 11 1999 by Gerardo Aburruzaga
.\" García <gerardo.aburruzaga@uca.es>
.\" Translation revised on Thu Jan 6 2000 by Juan Piernas <piernas@ditec.um.es>
.\"
.TH LN 1 "Noviembre de 1998" "GNU fileutils 4.0"
.SH NOMBRE
ln \- crea enlaces entre ficheros
.SH SINOPSIS
.B ln [opciones]
.IB origen " [" dest ]
.br
.B ln [opciones]
.I origen... directorio
.sp
Opciones de POSIX:
.B [\-f]
.sp
Opciones de GNU (en la forma más corta):
.B [\-bdfinsvF]
.BI "[\-S " sufijo-de-respaldo ]
.B "[\-V {numbered,existing,simple}]"
.B "[\-\-help] [\-\-version] [\-\-]"
.SH DESCRIPCIÓN
Hay en Unix dos conceptos de `enlace', llamados usualmente enlace
duro (o físico) y enlace blando (o simbólico). Un enlace duro es
simplemente un nombre para un fichero. (Y un fichero puede tener varios
nombres. Se borra del disco solamente cuando se elimine el último nombre.
El número de nombres lo muestra 
.BR ls (1).
No existe el concepto de nombre `original': todos tienen la misma
categoría. Usualmente, pero no necesariamente, todos los nombres de un 
fichero se encuentran en el sistema de ficheros que también contiene
sus datos.)
.PP
Un enlace blando (o enlace simbólico, o acceso directo) es un animal
completamente diferente: es un ficherito especial que contiene un
nombre de camino. Así, los enlaces blandos pueden apuntar a ficheros
en sistemas de ficheros diferentes (posiblemente montados por NFS
desde máquinas diferentes), y no tienen por qué apuntar a ficheros que 
existan realmente.
Cuando se accede a ellos (con las llamadas al sistema
.BR open (2)
o
.BR stat (2)),
el núcleo del sistema operativo reemplaza una referencia a un enlace blando 
con una referencia al fichero nombrado en el nombre de camino.
(Sin embargo, con
.BR rm (1)
y
.BR unlink (2)
se borra el mismo enlace, no el fichero al cual apunte.
Existen las llamadas al sistema especiales
.BR lstat (2)
y
.BR readlink (2)
que leen el estado de un enlace blando y el nombre de fichero al cual apunte.
Para algunas otras llamadas al sistema, entre distintos sistemas
operativos hay algunas variaciones y faltas de certeza sobre si la
operación actúa en el mismo enlace, o sobre el fichero al que apunte.)
.PP
.B ln
crea enlaces entre ficheros. De forma predeterminada, hace enlaces
duros; con la opción
.BR "\-s" ,
hace enlaces simbólicos (o `blandos').
.PP
Si sólo se da un fichero, lo enlaza en el directorio en curso; esto
es, crea un enlace a ese fichero en el directorio de trabajo, con el
nombre igual al (último componente) del fichero. (Esto es una
extensión de GNU.)
De otro modo, si el último argumento se refiere a un directorio existente,
.B ln
creará enlaces a cada fichero
.I origen
mencionado, en ese directorio, con un nombre igual al (último
componente) de ese fichero
.IR origen .
(Pero vea la descripción de la opción
.B "\-\-no\-dereference"
más abajo.)
De otra forma, si sólo se dan dos ficheros, crea un enlace llamado
.I dest
al fichero
.IR origen .
Es un error que el último argumento no sea un directorio y que se den
más de dos ficheros.
.PP
De forma predeterminada,
.B ln
no borra ficheros o enlaces simbólicos que ya existan.
(Así, puede emplearse para propósitos de bloqueo: tendrá éxito
solamente si 
.I dest
no existía ya.)
Pero se le puede forzar a borrarlos con la opción \-f.
.PP
En implementaciones existentes, si es que fuera posible hacer un
enlace duro a un directorio, esto sólo debe ser hecho por el
súper-usuario. POSIX prohíbe que la llamada al sistema 
.BR link (2)
y la utilidad
.B ln
hagan enlaces duros a directorios (pero no prohíbe que los enlaces
duros crucen los limites de los sistemas de ficheros).
.SH "OPCIONES DE POSIX"
.TP
.B "\-f"
Borra los ficheros de destino que ya existieran.
.SH "OPCIONES DE GNU"
.TP
.B "\-d, \-F, \-\-directory"
Permite al súper-usuario hacer enlaces duros a directorios.
.TP
.B "\-f, \-\-force"
Borra los ficheros de destino que ya existieran.
.TP
.B "\-i, \-\-interactive"
Pregunta antes de borrar ficheros de destino existentes.
.TP
.B "\-n, \-\-no\-dereference"
Cuando se da un destino explícito que es un enlace blando a un
directorio, trata a ese destino como si fuera un fichero normal.

Cuando el destino es un directorio de verdad (no un enlace simbólico a 
uno), no hay ambigüedad. El enlace se crea en ese directorio.
Pero cuando el destino especificado es un enlace simbólico a un
directorio, hay dos maneras de tratar la petición del usuario.
.B ln
puede tratar el destino justo como si fuera un directorio normal y
crear el enlace en él. Por otra parte, el destino puede ser visto como 
un no-directorio: como el enlace simbólico en sí mismo. En ese caso,
.B ln
debe borrar o hacer copia de respaldo de ese enlace simbólico antes de 
crear el nuevo enlace. El comportamiento predeterminado es tratar un
destino que sea un enlace simbólico a un directorio como justamente un 
directorio.
.TP
.B "\-s, \-\-symbolic"
Hace enlaces simbólicos en lugar de enlaces duros. Esta opción
simplemente produce un mensaje de error en sistemas que no admitan
enlaces simbólicos.
.TP
.B "\-v, \-\-verbose"
Muestra el nombre de cada fichero antes de enlazarlo.
.SH "OPCIONES DE RESPALDO DE GNU"
Las versiones de GNU de programas como
.BR cp ,
.BR mv ,
.BR ln ,
.B install
y
.B patch 
harán una copia de respaldo de ficheros que estén a punto de ser
sobreescritos, cambiados o destruidos, si se desea. Y para indicar que
se desean estos ficheros de respaldo se emplea la opción \-b. Se
especifica cómo deberían nombrarse mediante la opción \-V. En el caso
de que el nombre del fichero de respaldo se dé con el nombre del
fichero extendido con un sufijo, este sufijo se especifica con la
opción \-S.
.TP
.B "\-b, \-\-backup"
Hace copias de respaldo de ficheros que estén a punto de ser
sobreescritos o borrados.
.TP
.BI "\-S " SUFIJO ", \-\-suffix=" SUFIJO
Añade
.I SUFIJO
a cada fichero de respaldo hecho.
Si esta opción no se da, se emplea el valor de la variable de entorno
.BR SIMPLE_BACKUP_SUFFIX .
Y si
.B SIMPLE_BACKUP_SUFFIX
no está definida, el valor predeterminado es `~'.
.TP
.BI "\-V " MÉTODO ", \-\-version\-control=" MÉTODO
.RS
Especifica cómo los ficheros de respaldo han de llamarse. El argumento
.I MÉTODO
puede ser `numbered' (o `t'), `existing' (o `nil'), o `never' (o
`simple').
Si esta opción no se da, se emplea el valor de la variable de entorno
.BR VERSION_CONTROL .
Y si
.B VERSION_CONTROL
no está definida, el tipo predeterminado de copia de respaldo es
`existing'.
.PP
Esta opción corresponde a la variable de Emacs `version-control'.
Los
.IR MÉTODO s
válidos son (se aceptan abreviaturas no ambiguas):
.TP
.BR t ", " numbered
Siempre hace copias de respaldo numeradas.
.TP
.BR nil ", " existing
Hace copias de respaldo numeradas de ficheros que ya las tengan,
copias simples de los otros.
.TP
.BR never ", " simple
Siempre hace copias de respaldo simples.
.RE
.SH "OPCIONES ESTÁNDARES DE GNU"
.TP
.B "\-\-help"
Muestra un mensaje en la salida estándar sobre el modo de empleo y
acaba con estado de éxito.
.TP
.B "\-\-version"
Muestra en la salida estándar información sobre la versión, y luego
acaba con estado de éxito.
.TP
.B "\-\-"
Termina con la lista de opciones.
.SH ENTORNO
Las variables LANG, LC_ALL, LC_CTYPE y LC_MESSAGES tienen los
significados usuales. Para la versión de GNU, las variables
SIMPLE_BACKUP_SUFFIX y VERSION_CONTROL controlan cómo se nombran los
ficheros de respaldo, según se ha descrito anteriormente.
.SH "CONFORME A"
POSIX 1003.2. Sin embargo, POSIX 1003.2 (1996) no discute sobre
enlaces blandos.
Los enlaces blandos fueron introducidos por BSD, y no existen en
sistemas System V release 3 (ni más antiguos).
.SH "VÉASE TAMBIÉN"
.BR ls (1),
.BR rm (1),
.BR link (2),
.BR lstat (2),
.BR open (2),
.BR readlink (2),
.BR stat (2),
.BR unlink (2)
.SH OBSERVACIONES
Esta página describe
.B ln
según se encuentra en el paquete fileutils-4.0; otras versiones
pueden diferir un poco. Envíe por correo electrónico correcciones y
adiciones a la dirección aeb@cwi.nl.
Informe de fallos en el programa a
fileutils-bugs@gnu.ai.mit.edu.
