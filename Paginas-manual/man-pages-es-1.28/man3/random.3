.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sun Mar 28 00:25:51 1993, David Metcalfe
.\" Modified Sat Jul 24 18:13:39 1993 by Rik Faith (faith@cs.unc.edu)
.\" Translated into Spanish Thu Mar  5 15:51:13 CET 1998 by Gerardo
.\" Aburruzaga García <gerardo.aburruzaga@uca.es>
.\"
.TH RANDOM 3  "5 Marzo 1998" "GNU" "Manual del Programador de Linux"
.SH NOMBRE
random, srandom, initstate, setstate \- generador de números aleatorios.
.SH SINOPSIS
.nf
.B #include <stdlib.h>
.sp
.B long int random(void);
.snl
.BI "void srandom(unsigned int " semilla );
.nl
.BI "char *initstate(unsigned int " semilla ", char *" estado ", int " n );
.nl
.BI "char *setstate(char *" estado );
.fi
.SH DESCRIPCIÓN
La función \fBrandom()\fP emplea un generador no lineal aditivo con
retroalimentación de números aleatorios utilizando una tabla
predeterminada de 31 enteros largos para devolver números
pseudo-aleatorios sucesivos en el rango de 0 a \fBRAND_MAX\fR.
El periodo de este generador de números aleatorios es muy grande,
aproximadamente 16*((2**31)\-1).
.PP
La función \fBsrandom()\fP establece su argumento como la
\fIsemilla\fP de una nueva secuencia de enteros seudo-aleatorios que
serán devueltos por \fBrandom()\fP en secuencia.
Estas secuencias son repetibles si se llama a \fBsrandom()\fP con el
mismo valor para la semilla. Si no se proporciona ninguna semilla,
porque no se llama a \fBsrandom()\fP, la función \fBrandom()\fP
automáticamente asume una semilla de valor 1.
.PP
La función \fBinitstate()\fP permite inicializar un vector de estado,
\fIestado\fP, para el uso por parte de \fBrandom()\fP.  El tamaño del
vector de estado, \fIn\fP, es usado por \fBinitstate()\fP para decidir
cuán sofisticado debe ser el generador de números aleatorios que
debería usar: cuanto más grande sea el vector de estado, más
aleatorios serán los números. El argumento \fIsemilla\fP es la semilla para la 
inicialización, que especifica un punto de arranque para la secuencia
de números aleatorios, y hace posible recomenzar en el mismo punto.
.PP
La función \fBsetstate()\fP cambia el vector de estado usado por la función
\fBrandom()\fP.  El vector de estado, \fIestado\fP, se usa para la
generación de números aleatorios hasta la siguiente llamada a
\fBinitstate()\fP o \fBsetstate()\fP.  El argumento \fIestado\fP debe
haber sido inicializado primero mediante \fBinitstate()\fP.
.SH "VALOR DEVUELTO"
La función \fBrandom()\fP devuelve un valor entre 0 y RAND_MAX.
La función \fBsrandom()\fP no devuelve nada. Las funciones \fBinitstate()\fP 
y \fBsetstate()\fP devuelven un puntero al vector de estado anterior.
.SH "ERRORES"
.TP
.B EINVAL
Se ha especificado un vector de estado de menos de 8 bytes para
\fBinitstate()\fP.
.SH OBSERVACIONES
Los valores actuales "óptimos" para el tamaño del vector de estado,
\fIn\fP, son 8, 32, 64, 128, y 256 bytes; otras cantidades serán
redondeadas por abajo hasta la cantidad conocida más cercana. Utilizar
menos de 8 bytes producirá un error.
.SH "CONFORME A"
BSD 4.3
.SH "VÉASE TAMBIÉN"
.BR rand "(3), " srand (3)
