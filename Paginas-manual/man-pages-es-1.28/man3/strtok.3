.\" Copyright (C) 1996 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Rewritten old page, 960210, aeb@cwi.nl
.\" Translated 11 Feb 1998 by Vicente Pastor Gómez <VPASTORG@santandersupernet.com , vicpastor@hotmail.com>
.\" Translation revised 27 April 1998 by Juan Piernas <piernas@dif.um.es>
.\"
.TH STRTOK 3  "10 Feb 1996" "GNU" "Manual del Programador de Linux"
.SH NOMBRE
strtok \- extrae un token de una cadena
.SH SINOPSIS
.nf
.B #include <string.h>
.sp
.BI "char *strtok(char *" s ", const char *" delim );
.fi
.SH DESCRIPCIÓN
Un `token' es una cadena de caracteres no vacía que no está en la cadena
\fIdelim\fP, seguida por \e0 o por un caracter que está en \fIdelim\fP.
.PP
La función \fBstrtok()\fP puede usarse para analizar (parse) la cadena \fIs\fP
en tokens. La primera llamada a \fBstrtok()\fP debería tener \fIs\fP
como primer argumento. Llamadas subsiguientes deberían tener el primer
argumento puesto a NULL. Cada llamada devuelve un puntero al siguiente token,
o NULL cuando no se pueden encontrar más tokens.
.PP
Si un token termina con un delimitador, este caracter de delimitación es
sobreescrito con un \e0 y se guarda un puntero al siguiente caracter para
la siguiente llamada a \fBstrtok\fP. La cadena de delimitación \fIdelim\fP
puede ser diferente para cada llamada.
.SH "FALLOS"
Nunca use esta función.
Esta función modifica su primer argumento.
La identidad del caracter delimitador se pierde.
Esta función no se puede usar sobre cadenas definidas como constantes.
.SH "VALOR DEVUELTO"
La función \fBstrtok()\fP devuelve un puntero al siguiente token, o NULL si
no hay más tokens.
.SH "CONFORME A"
SVID 3, POSIX, BSD 4.3, ISO 9899
.SH "VÉASE TAMBIÉN"
.BR index "(3), " memchr "(3), " rindex "(3), " strchr (3),
.BR strpbrk "(3), " strsep "(3), " strspn "(3), " strstr (3)
