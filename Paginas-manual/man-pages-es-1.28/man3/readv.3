.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Sat Jul 24 18:34:44 1993 by Rik Faith (faith@cs.unc.edu)
.\" Translated into Spanish Thu Mar  5 17:26:31 CET 1998 by Gerardo
.\" Aburruzaga García <gerardo.aburruzaga@uca.es>
.\"
.TH READV 3  "5 Marzo 1998" "GNU" "Manual del Progamador de Linux"
.SH NOMBRE
readv, writev \- lee o escribe datos en varios búferes
.SH SINOPSIS
.nf
.B #include <sys/uio.h>
.sp
.BI "int readv(int " descfic ", const struct iovec *" vector ","
.BI "          size_t " num ");"
.sp
.BI "int writev(int " descfic ", const struct iovec *" vector ","
.BI "          size_t " num ");"
.fi
.SH DESCRIPCIÓN
La función
.B readv()
lee
.I num
bloques del fichero asociado con el descriptor de fichero
.I descfic
en los múltiples búferes descritos por
.IR vector .
.PP
La función
.B writev()
escribe como mucho
.I num
bloques descritos por
.I vector
al fichero asociado con el descriptor de fichero
.IR descfic .
.PP
El puntero
.I vector
apunta a una
.B struct iovec
definida en
.B <sys/uio.h>
como
.PP
.br
.nf
.in 10
struct iovect
{
.in 14
void *iovbase;	/* Dirección de comienzo  */
size_t iov_len;    /* Número de bytes */
.in 10
} ;
.fi
.PP
Los búferes se procesan en el orden
.IR "vector[0]" ", " vector[1] ", ... " "vector[num]" .
.PP
La función
.B readv()
trabaja igual que
.BR read (2)
excepto en que se rellenan múltiples búferes.
.PP
La función
.B writev()
trabaja como
.BR write (2)
excepto en que se escriben múltiples búferes.
.PP
.SH "VALOR DEVUELTO"
La función
.B readv()
devuelve el número de bytes ó \-1 en caso de error; la función
.B writev()
devuelve el número de bytes escritos.
.SH "ERRORES"
Las funciones
.B readv()
y
.B writev()
pueden fallar y poner 
.I errno
a los siguientes valores:
.TP
.B EBADF
.I descfic
no es un descriptor de fichero válido.
.TP
.B EINVAL
.I descfic
no sirve para leer (para
.BR readv() )
o para escribir (para
.BR writev() ).
.TP
.B EFAULT
.I vector
está afuera del espacio de direcciones del proceso.
.TP
.B EAGAIN
Se ha seleccionado E/S no bloqueante en la llamada a
.B open()
y la lectura o escritura no ha podido hacerse inmediatamente.
.TP
.B EINTR
La lectura o la escritura han sido interrumpidas antes de que se hayan
transferido datos.
.SH "CONFORMES CON"
No se sabe.
.SH "FALLOS"
No es recomendable mezclar llamadas a funciones como
.BR readv() " o " writev() ,
que operan con descriptores de ficheros, con las funciones de la
biblioteca stdio; los resultados serán indefinidos y probablemente no
los deseados.
.SH "VÉASE TAMBIÉN"
.BR read "(2), " write (2)
