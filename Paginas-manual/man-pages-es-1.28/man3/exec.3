.\" Copyright (c) 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)exec.3	6.4 (Berkeley) 4/19/91
.\"
.\" Converted for Linux, Mon Nov 29 11:12:48 1993, faith@cs.unc.edu
.\" Updated more for Linux, Tue Jul 15 11:54:18 1997, pacman@cqc.com
.\"
.\" Translated into Spanish, Fri Jan 9 1998 by Gerardo Aburruzaga
.\" García <gerardo.aburruzaga@uca.es>
.\"
.TH EXEC 3  "9 Enero 1998" "BSD" "Manual del Programador de Linux"
.SH NOMBRE
execl, execlp, execle, execv, execvp \- ejecutan un fichero
.SH SINOPSIS
.B #include <unistd.h>
.sp
.B extern char **environ;
.sp
.BI "int execl( const char *" camino ", const char *" arg ", ...);
.br
.BI "int execlp( const char *" fichero ", const char *" arg ", ...);
.br
.BI "int execle( const char *" camino ", const char *" arg
.BI ", ..., char * const " envp "[]);"
.br
.BI "int execv( const char *" camino ", char *const " argv "[]);"
.br
.BI "int execvp( const char *" fichero ", char *const " argv "[]);"
.SH DESCRIPCIÓN
La familia de funciones
.B exec
reemplaza la imagen del proceso en curso con una nueva. Las funciones
descritas en esta página del Manual son interfaces para la primitiva
.BR execve (2).
(Consulte la página del Manual de
.B execve
para información detallada acerca del reemplazo del proceso en curso.)
.PP
El primer argumento de estas funciones es el camino de un fichero que
va a ser ejecutado.
.PP
El
.I "const char *arg"
y puntos suspensivos siguientes en las funciones
.BR execl ,
.BR execlp ,
y
.B execle
pueden ser contemplados como
.IR arg0 ,
.IR arg1 ,
\&...,
.IR argn .
Todos juntos, describen una lista de uno o más punteros a cadenas de
caracteres terminadas en cero, que representan la lista de argumentos
disponible para el programa ejecutado. El primer argumento, por
convenio, debe apuntar al nombre de fichero asociado con el fichero
que se esté ejecutando. La lista de argumentos
.I debe
ser terminada por un puntero
.B NULL.
.PP
Las funciones
.B execv
y
.B execvp
proporcionan un vector de  punteros a cadenas de
caracteres terminadas en cero, que representan la lista de argumentos
disponible para el nuevo programa. El primer argumento, por
convenio, debe apuntar al nombre de fichero asociado con el fichero
que se esté ejecutando. El vector de punteros
.I debe
ser terminado por un puntero
.B NULL.
.PP
La función
.B execle
también especifica el entorno del proceso ejecutado mediante un
parámetro adicional que va detrás del puntero 
.B NULL
que termina la lista de argumentos de la lista de parámetros o el
puntero al vector argv. Este parámetro adicional es un vector de
punteros a cadenas de caracteres acabadas en cero y 
.I debe
ser terminada por un puntero
.B NULL.
Las otras funciones obtienen el entorno para la nueva imagen de
proceso de la variable externa
.I environ
en el proceso en curso.
.PP
Algunas de estas funciones tienen una semántica especial.
.PP
Las funciones
.B execlp
y
.B execvp
duplicarán las acciones del shell al buscar un fichero ejecutable si
el nombre de fichero especificado no contiene un carácter de barra
inclinada (/). El camino de búsqueda es el especificado en el entorno
por la variable
.B PATH.
Si esta variable no es especificada, se emplea el camino predeterminado
``:/bin:/usr/bin''. Además, ciertos errores se tratan de forma especial.
.PP
Si a un fichero se le deniega el permiso (la función intentada
.B execve
devuelve
.BR EACCES ),
estas funciones continuarán buscando en el resto del camino de
búsqueda. Si no se encuentra otro fichero, empero, retornarán dando el
valor
.BR EACCES
a la variable global
.I errno .
.PP
Si no se reconoce la cabecera de un fichero (la función intentada
.B execve
devuelve
.BR ENOEXEC ),
estas funciones ejecutarán el shell con el camino del fichero como su
primer argumento. (Si este intento falla, no se busca más.)
.SH "VALOR DEVUELTO"
Si cualquiera de las funciones
.B exec
regresa, es que ha ocurrido un error. El valor de retorno es \-1, y en
la variable global
.I errno
se pondrá el código de error adecuado.
.SH FICHEROS
.I /bin/sh
.SH ERRORES
Todas estas funciones pueden fallar y dar un valor a
.I errno
para cualquiera de los errores especificados para la función
.BR execve (2).
.SH "VÉASE TAMBIÉN"
.BR sh (1),
.BR execve (2),
.BR fork (2),
.BR environ (5),
.BR ptrace (2)
.SH COMPATIBILIDAD
En algunos otros sistemas, el \fBPATH\fP predeterminado tiene el
directorio de trabajo listado detrás de
.I /bin
y
.IR /usr/bin ,
como una medida anti-caballo de Troya. En libc 5.4.7, Linux aún utiliza
el valor de \fBPATH\fP predeterminado con el tradicional "el directorio
de trabajo, el primero".
.PP
El comportamiento de
.B execlp
y
.B execvp
cuando hay errores al intentar ejecutar el fichero es una práctica de
antiguo, pero tradicionalmente no ha sido documentada y el estándar
POSIX no lo especifica. BSD (y quizás otros sistemas) hacen un sleep()
automático y un reintento a continuación, si se encuentra el error
ETXTBSY. Linux trata esto como un error importante y el regreso de la
función es inmediato.
.PP
Tradicionalmente, las funciones
.B execlp
y
.B execvp
hacían caso omiso de todos los errores salvo los descritos arriba y
.B ENOMEM
y
.BR E2BIG ,
que provocaban el regreso. Ahora también regresan si tiene lugar algún
error distinto de los descritos anteriormente.
.SH CONFORME A
.BR Execl ,
.BR execv ,
.BR execle ,
.B execlp
y
.B execvp
son conformes con
IEEE Std1003.1-88 (``POSIX.1'').
