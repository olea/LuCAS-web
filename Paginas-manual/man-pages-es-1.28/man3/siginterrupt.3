.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sun Jul 25 10:40:51 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sun Apr 14 16:20:34 1996 by Andries Brouwer (aeb@cwi.nl)
.\" Translated into Spanish Mon Mar  9 09:26:18 CET 1998 by Gerardo
.\" Aburruzaga García <gerardo.aburruzaga@uca.es>
.\"
.TH SIGINTERRUPT 3  "9 Marzo 1998" "Linux" "Manual del Programador de Linux"
.SH NOMBRE
siginterrupt \- permite que señales interrumpan llamadas al sistema
.SH SINOPSIS
.nf
.B #include <signal.h>
.sp
.BI "int siginterrupt(int " sig ", int " flag );
.fi
.SH DESCRIPCIÓN
La función \fBsiginterrupt()\fP cambia el comportamiento de reanudación
cuando una señal \fIsig\fP interrumpe una llamada al sistema. Si el
argumento \fIflag\fP es falso (0), entonces las llamadas al sistema se
reanudarán si han sido interrumpidas por la señal especificada en
\fIsig\fP. Éste es el comportamiento predeterminado en Linux. Sin
embargo, cuando se especifica un nuevo manejador de señal mediante la
función \fBsignal\fP(2), la llamada al sistema se interrumpe de manera
predeterminada.
.PP
Si el argumento \fIflags\fP es verdad (distinto de cero, 1 por
ejemplo) y no se han transferido datos, cuando una señal \fIsig\fP
interrumpe una llamada al sistema, ésta devolverá \-1 y la variable
global  \fIerrno\fP contendrá el valor \fBEINTR\fP.
.PP
Si el argumento \fIflags\fP es verdad y ha empezado la transferencia
de datos, entonces la llamada al sistema será interrumpida y devolverá
la cantidad real de datos transferidos.
.SH "VALOR DEVUELTO"
La función \fBsiginterrupt()\fP devuelve 0 si acaba bien, ó \-1 si el
número de señal \fIsig\fP es inválido.
.SH "ERRORES"
.TP
.B EINVAL
El número de señal especificado no es válido.
.SH "CONFORME A"
BSD 4.3
.SH "VÉASE TAMBIÉN"
.BR signal (2)
