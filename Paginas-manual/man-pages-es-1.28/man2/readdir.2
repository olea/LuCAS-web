.\" Copyright (C) 1995 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Written 11 June 1995 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 22 July 1995 by Michael Chastain <mec@duracef.shout.net>:
.\"   In 1.3.X, returns only one entry each time; return value is different.
.\" Translated 23 Jan 1998 by Vicente Pastor Gómez <VPASTORG@santandersupernet.com , vicpastor@hotmail.com>
.\"
.TH READDIR 2  "22 julio 1995" "Linux 1.3.6" "Manual del Programador de Linux"
.SH NOMBRE
readdir \- lee una entrada de un directorio
.SH SINOPSIS
.nf
.B #include <unistd.h>
.B #include <linux/dirent.h>
.B #include <linux/unistd.h>
.sp
.B _syscall3(int, readdir, uint, fd, struct dirent *, dirp, uint, count);
.sp
.BI "int readdir(unsigned int " fd ", struct dirent *" dirp ", unsigned int " count );
.fi
.SH DESCRIPCIÓN
Esta no es la funcion que buscabas.
Mira
.BR readdir (3)
para ver la interfase de la biblioteca C que se conforma a POSIX.
Esta página documenta la interfaz desnuda de la llamada de sistema del kernel,
que puede cambiar, y que está superada por
.BR getdents (2).
.PP
.B readdir
lee una estructura
.I dirent
del directorio al que apunta
.I fd
y lo mete en el área de memoria al que apunta
.IR dirp .
El parámetro
.I count
es ignorado; como mucho se lee una estructura dirent.
.PP
La estructura
.I dirent
se declara como sigue:
.PP
.RS
.nf
struct dirent
{
    long d_ino;                 /* número de nodo-i */
    off_t d_off;                /* ajuste hasta el \fIdirent\fP */
    unsigned short d_reclen;    /* longitud del \fId_name\fP */
    char d_name [NAME_MAX+1];   /* nombre fichero
                                   (acabado en nulo) */
}
.fi
.RE
.PP
.I d_ino
es un número de nodo-i.
.I d_off
es la distancia desde el principio del directorio hasta este
.IR dirent .
.I d_reclen
es el tamaño de
.IR d_name,
sin contar el carácter nulo del final.
.I d_name
es un nombre de fichero, una cadena de caracteres terminada en nulo.
.PP
.SH "VALOR DEVUELTO"
En caso de éxito, se devuelve 1.
Si se halló el final del directorio, se devuelve 0.
Si hubo un error, se devuelve \-1, y
.I errno
es actualizada de acuerdo al error.
.SH "ERRORES"
.TP
.B EBADF
Descriptor de fichero
.IR fd 
inválido.
.TP
.B EFAULT
El argumento señala fuera del espacio de direcciones del proceso
que realiza la llamada.
.TP
.B EINVAL
El buffer para el resultado es demasiado pequeño.
.TP
.B ENOENT
No existe el directorio.
.TP
.B ENOTDIR
El descriptor de fichero no se refiere a un directorio.
.SH "CONFORME A"
Esta llamada al sistema es específica de Linux.
.SH "VÉASE TAMBIÉN"
.BR getdents (2),
.BR readdir (3)
