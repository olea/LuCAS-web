.\" Copyright (C), 1994, Graeme W. Wilford. (Wilf.)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Fri Jul 29th 12:56:44 BST 1994  Wilf. <G.Wilford@ee.surrey.ac.uk> 
.\" Modified Fri Jan 31 17:06:56 1997 by Eric S. Raymond <esr@thyrsus.com>
.\" Translated into Spanish Mon Jan 26 1998 by Gerardo Aburruzaga
.\" García <gerardo.aburruzaga@uca.es>
.\" Translation revised Sat Jan 29 2000 by Juan Piernas <piernas@ditec.um.es>
.\"
.TH SETGID 2 "29 julio 1994" "Linux 1.1.36" "Manual del Programador de Linux"
.SH NOMBRE
setgid \- establece la identidad de grupo
.SH SINOPSIS
.B #include <unistd.h>
.sp
.BI "int setgid(gid_t " gid )
.SH DESCRIPCIÓN
.B setgid
establece el ID de grupo efectivo del proceso en curso. Si quien llama
a la función es el súper-usuario, se ponen también las IDs de grupo
real y salvado.

Bajo Linux, 
.B setgid
está implementada como la versión POSIX con la característica _POSIX_SAVED_IDS.
Esto permite que un programa SGID (distinto de root) renuncie a todos
sus privilegios de grupos, haga algún trabajo no privilegiado, y luego
recupere su ID de grupo efectivo original de una manera segura.

Si el usuario es root o si el programa es SGID a root, deben tomarse
precauciones especiales. La función
.B setgid
comprueba el GID efectivo de quien la llama y si es el súper-usuario,
todos los IDs relacionados con el proceso se ponen a
.IR gid . 
Después de esto, es imposible para el programa recuperar sus
privilegios de root.

Así, un programa SGID a root que desea temporalmente renunciar a sus
provilegios de root, asumir la identidad de un grupo no-root y luego
recuperar sus privilegios de root no puede emplear
.BR setgid .
Esto se puede hacer con la llamada (no POSIX, BSD)
.BR setegid .
.SH "VALOR DEVUELTO"
En caso de éxito, se devuelve cero. En caso de error, se devuelve \-1,
y se pone un valor apropiado en \fIerrno\fP.
.SH ERRORES
.TP
.B EPERM
El usuario no es el súper-usuario, y
.I gid
no concuerda con el ID de grupo efectivo ni con el setgid salvado del proceso
que llama a la función.
.SH "CONFORME A"
SVr4, SVID.
.SH "VÉASE TAMBIÉN"
.BR getgid (2),
.BR setregid (2),
.BR setegid (2)
