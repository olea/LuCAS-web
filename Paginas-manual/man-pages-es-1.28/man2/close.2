.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Michael Haardt, Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Wed Jul 21 22:40:25 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sat Feb 18 15:27:48 1995 by Michael Haardt
.\" Modified Sun Apr 14 11:40:50 1996 by Andries Brouwer <aeb@cwi.nl>:
.\"   corrected description of effect on locks (thanks to
.\"   Tigran Aivazian <tigran@sco.com>).
.\" Modified Fri Jan 31 16:21:46 1997 by Eric S. Raymond <esr@thyrsus.com>
.\"
.\" Translated 21 Dec 1995 Miguel A. Sepulveda (miguel@typhoon.harvard.edu)
.\" Modified 1 Jul 1996 Miguel A. Sepulveda (angel@vivladi.princeton.edu)
.\" Revisado Mon May 11 13:59:57 1998 por:
.\"         Cesar D. Lobejon (cesar@alien.mec.es)            
.\" Translation revised Oct 2 1998 by Juan Piernas <piernas@ditec.um.es>
.\" Translation revised Apr 4 1999 by Juan Piernas <piernas@ditec.um.es>
.\"
.TH CLOSE 2 "14 Abril 1996" "Linux" "Manual del Programador de Linux"
.SH NOMBRE
close \- cierra un descriptor de fichero
.SH SINOPSIS
.nf
.B #include <unistd.h>
.sp
.BI "int close(int " fd );
.fi
.SH DESCRIPCIÓN
.B close
cierra un descriptor de fichero de forma que ya no se refiera a fichero
alguno y pueda ser reutilizado. Cualesquiera bloqueos mantenidos sobre el
fichero con el que estaba asociado, y propiedad del proceso, son eliminados
(sin importar qué descriptor de fichero fue utilizado para obtener el bloqueo).
.PP
Si
.I fd
es la última copia de cierto descriptor de fichero, los recursos
asociados con dicho descriptor son liberados;
si el descriptor fuera la última referencia a un fichero que haya sido
eliminada mediante
.BR unlink (2)
entonces el fichero es borrado.
.SH "VALOR DEVUELTO"
.BR close
devuelve 0 en caso de éxito y \-1 si ocurre algún error.
.SH ERRORES
.TP
.B EBADF
.I fd
no es un descriptor de fichero abierto válido.
.SH "CONFORME A"
SVID, AT&T, POSIX, X/OPEN, BSD 4.3.  SVr4 documenta una condición de
error ENOLINK adicional.
.SH "NOTA"
El no comprobar el valor devuelto por close es un error de
programación común y no obstante serio. Aquellas implementaciones
de sistemas de ficheros que usan técnicas tales como la conocida por
``write-behind'' (``escribe por detrás'') a fin de incrementar el
rendimiento pueden resultar en que
.BR write (2)
tenga éxito aunque aún no se hayan escrito los datos. El estado de
error puede ser informado durante una posterior operación de
escritura, pero está garantizado que será informado al cerrar el fichero.
No comprobar el valor devuelto cuando se cierra un fichero puede dar
lugar a una pérdida silenciosa de datos.
Esto se observa especialmente en NFS y con las cuotas de discos.
.SH "VÉASE TAMBIÉN"
.BR open (2),
.BR fcntl (2),
.BR shutdown (2),
.BR unlink (2),
.BR fclose (3).
