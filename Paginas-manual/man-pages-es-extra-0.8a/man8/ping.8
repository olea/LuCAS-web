.\"Traducido por Antonio Aneiros
.\"aneiros1@arrakis.es
.\" Copyright (c) 1985, 1991 The Regents of the University of California. 
.\" All rights reserved. 
.\" 
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions 
.\" are met: 
.\" 1. Redistributions of source code must retain the above copyright 
.\"    notice, this list of conditions and the following disclaimer. 
.\" 2. Redistributions in binary form must reproduce the above copyright 
.\"    notice, this list of conditions and the following disclaimer in the 
.\"    documentation and/or other materials provided with the distribution. 
.\" 3. All advertising materials mentioning features or use of this software 
.\"    must display the following acknowledgement: 
.\"	This product includes software developed by the University of 
.\"	California, Berkeley and its contributors. 
.\" 4. Neither the name of the University nor the names of its contributors 
.\"    may be used to endorse or promote products derived from this software 
.\"    without specific prior written permission. 
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND 
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE 
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
.\" SUCH DAMAGE. 
.\" 
.\"     from: @(#)ping.8	6.7 (Berkeley) 3/16/91 
.\"	$Id: ping.8,v 1.4 1997/02/01 23:08:04 dholland Exp $ 
.\" 
.Dd August 30, 1996
.Dt PING 8
.Os "Linux Netkit 0.09"
.Sh NAME
.Nm ping
.Nd envía 
paquetes 
.Tn ICMP ECHO_REQUEST a servidores de red
.Sh SINOPSIS
.Nm ping
.Op Fl dfnqrvR 
.Op Fl c Ar count 
.Op Fl i Ar wait 
.Op Fl l Ar preload 
.Op Fl p Ar pattern 
.Op Fl s Ar packetsize 
.Sh DESCRIPCIÓN
.Nm Ping 
utiliza el datagrama obligatorio 
.Tn ICMP
del protocolo
.Tn ECHO_REQUEST
para solicitar una 
.Tn ICMP ECHO_RESPONSE
por parte de un servidor o una puerta de acceso.
Los datagramas
.Tn ECHO_REQUEST
("pings") tienen una IP y cabecera
.Tn ICMP,
seguidos por un
.Dq struct timeval
y un número arbitrario de bytes "pad" usados para completar el paquete.
Las opciones son las siguientes:
.Bl -tag -width Ds 
.It Fl c Ar count
Para después de enviar (y recibir)
.Ar count
paquetes
.Tn ECHO_RESPONSE.
.It Fl d
Establece la opción 
.Dv SO_DEBUG
en el socket en uso.
.It Fl f
Envío masivo de pings.
Envía paquetes a la misma velocidad a la que regresan o cien veces por segundo, lo que sea mayor.
Por cada
.Tn ECHO_REQUEST
enviado se escribe un ".", mientras que por cada
.Tn ECHO_REPLY
recibido se escribe un backspace.
Esto proporciona una muestra rápida de cuántos paquetes se están perdiendo.
Sólo el super-usuario puede utilizar esta opción.
.Bf -emphasis
Esto puede resultar muy peligroso en una red y debe usarse con precaución.
.Ef
.It Fl i Ar wait
Espera
.Ar wait
segundos
.Em entre el envío de cada paquete.
Por defecto se espera un segundo entre el envío de los paquetes.
Esta opción es incompatible con la opción
.Fl f.
.It Fl l Ar preload
Si se especifica
.Ar preload,
.Nm ping
envía tantos paquetes tan rápido como le sea posible antes de volver a
su comportamiento normal.
Sólo el super-usuario puede usar esta opción.
.It Fl n
Sólo salida numérica.
No se realiza ningún intento de buscar nombres simbólicos para las direcciones del servidor.
.It Fl p Ar pattern
Se pueden especificar un total de 16 bytes "pad" para completar el paquete que se envía.
Esto resulta útil para el diagnóstico de problemas de red relaccionados con los datos.
Por ejemplo,
.Dq Li \-p ff
hará que el paquete enviado se complete en su totalidad con unos.
.It Fl q
Salida muda.
No se muestra ninguna información excepto las líneas de resumen
al comenzar y al terminar.
.It Fl R
Registro de ruta.
Incluye la opción
.Tn RECORD_ROUTE
en el paquete
.Tn ECHO_REQUEST
y muestra el buffer de ruta sobre los paquetes devueltos.
Nótese que la cabecera IP tan sólo tiene tamaño suficiente para nueve rutas de este tipo.
Muchos servidores ignoran y descartan esta opción.
.It Fl r
Pasa por alto las tablas de encaminamiento y envía datos directamente a un ordenador
en una red conectada a la propia.
Si el ordenador receptor no está en una red con conexión directa,
se devuelve un error. Esta opción se puede usar para hacer ping 
a un ordenador local a través de un interfaz que carezca
de una ruta que pase por él (por ejemplo, después de que 
el interfaz haya sido anulado por
.Xr routed 8).
.It Fl s Ar packetsize
Especifica el número de bytes de datos que se van a enviar.
La cantidad por defecto es 56, que pasan a ser 64
bytes de datos
.Tn ICMP
cuando se combinan con los 8 bytes de los 
datos de la cabecera
.Tn ICMP.
.It Fl v
Aumenta la longitud de la información del programa en pantalla.
Se listan los paquetes
.Tn ICMP
que no sean
.Tn ECHO_RESPONSE
que se reciben.
.El
.Pp
Al usar
.Nm ping
para la detección de errores, debe de probarse primero en el
ordenador local, para verificar que el interfaz de red local
funciona correctamente.
Luego, deben probarse otros ordenadores y puertas de acceso
cada vez más lejos. Al hacerlo, se computan tanto el tiempo
invertido por los paquetes en su viaje de ida y vuelta como
las estadísticas de pérdida de paquetes.
Si se reciben paquetes duplicados, no se incluyen en la estadística 
de pérdida de paquetes, aunque el tiempo invertido en su viaje
de ida y vuelta se usa para calcular las cantidades de tiempo
de viaje mínimas, medias y máximas.
Una vez que se ha enviado (y recibido) la cantidad de paquetes especificada
o si el programa se cierra con un
.Dv SIGNIT,
se muestra un pequeño resumen en pantalla.
.Pp
Si
.Nm ping
no recibe ningún paquete de respuesta en absoluto,
se cerrará con un código 1. Si ocurre un error, mostrará
el código 2. En cualquier otro caso, el programa terminará con un
código 0. Esto hace posible utilizar los códigos de terminación
del programa para comprobar si el ordenador al que se dirige
el ping da señales de vida o no.
.Pp
La finalidad de este programa es el de ser utilizado en la comprobación,
medición y mantenimiento de redes.
Debido a la sobrecarga de la red que supone su uso, no resulta muy
adecuado usar
.Nm ping
durante las operaciones normales o en scripts automáticos.
.Sh DETALLES DE LOS PAQUETES ICMP
Una cabecera IP sin opciones tiene un tamaño de 20 bytes.
Un paquete
.Tn ICMP
.Tn ECHO_REQUEST
contiene una cantidad adicional de 8 bytes
de cabecera
.Tn ICMP
seguida por una cantidad arbitraria de datos.
Cuando se especifica un
.Ar packetsize,
éste indica el tamaño de esta porción extra de datos (por defecto es 56).
Por lo tanto, la cantidad de datos recibidos dentro de un paquete IP del
tipo
.Tn ICMP
.Tn ECHO_REPLY
será siempre 8 bytes mayor que el espacio de datos requerido (la cabecera
.Tn ICMP).
.Pp
Si el espacio de datos tiene un tamaño de al menos 8 bytes,
.Nm ping
usa los primeros 8 bytes de este espacio para incluir un registro de tiempo
que utiliza en el cómputo de  los tiempos de los viajes de ida y vuelta de los paquetes.
Si se especifican menos de 8 bytes, el programa no proporcionará
estos tiempos.
.Sh PAQUETES DUPLICADOS Y DAÑADOS
.Nm Ping
informará de los paquetes duplicados y dañados.
Nunca debe de aparecer ningún paquete duplicado. Éstos parecen
ocurrir por retrasmisiones inapropiadas a nivel de conexión.
Los paquetes duplicados pueden aparecer en muchas situaciones
y rara vez (por no decir nunca) son buena señal, aunque la aparición
de niveles bajos de duplicados no ha de ser siempre una señal de alarma.
.Pp
Los paquetes dañados constituyen obviamente una causa seria de alarma
y normalmente indican que en alguna lugar del camino seguido
por el paquete
.Nm ping
(en la red o en los ordenadores) hay hardware dañado.
.Sh INTENTAR DIFERENTES PATRONES DE DATOS
La red no debería tratar a los paquetes de manera diferente
en función de los datos contenidos en la porción de datos.
Por desgracia, se sabe que ha habido problemas relaccionados con los datos
en algunas redes, que han permanecido ocultos durante largos períodos
de tiempo.
En muchas ocasiones, el patrón problemático será aquel que no tiene
suficientes "transiciones", tales como todo unos o todo ceros.
No es necesario especificar un patrón de datos con todo ceros (por ejemplo)
en la línea de comandos porque el patrón que interesa está al nivel de la
unión de los datos, y la relación entre lo que tú escribes y lo que transmiten
los controladores puede ser complicada.
.Pp
Esto quiere decir que si tienes un problema relacionado con datos
probablemente tendrás que hacer muchas pruebas para detectarlo.
Si tienes suerte, es posible que consigas encontrar un archivo que,
o bien no se puede transmitir por tu red, o que tarda mucho más en enviarse que 
otros archivos de tamaño similar.
En ese caso, puedes examinar este archivo en busca de patrones repetidos
que puedes comprobar usando la opción
.Fl p
de
.Nm ping.
.Sh DETALLES DEL TTL
El valor
.Tn TTL
de un paquete IP representa el número máximo de routers IP que un paquete
puede atravesar antes de ser deshechado.
En el trabajo diario, lo normal es que cada router en internet reste exactamente uno
del campo
.Tn TTL
.
.Pp
La especificación
.Tn TCP/IP
dice que el valor del campo
.Tn TTL
para los paquetes
.Tn TCP
debe ser de 60, pero muchos sistemas usan valores más pequeños (4.3
.Tn BSD
usa 30, el 4.2 usaba 15).
.Pp
El valor máximo posible para este campo es de 255, y la mayoría de los sistemas Unix
configuran el campo
.Tn TTL
de los paquetes
.Tn ICMP ECHO_REQUEST
para un valor de 255.
Por eso notarás que puedes hacer "ping" a algunos ordenadores,
aunque no puedas alcanzarlos con
.Xr telnet 1
o
.Xr ftp 1 .
.Pp
En una operación normal, ping muestra el valor ttl de los paquetes que recibe.
Cuando un sistema remoto recibe un paquete ping, puede hacer cualquiera
de estas tres cosas con el campo
.Tn TTL
en su respuesta:
.Bl -bullet
.It
No cambiarlo; esto es lo que hacían los sistemas Unix de Berkeley
antes de la aparición del
.Bx 4.3 tahoe
.
En este caso, el valor
.Tn TTL
del paquete recibido será de 255 menos el número de routers
en el camino
.Em desde
el sistema remoto
.Em al
ordenador que envía el
.Nm ping .
.It
Cambiarlo por cualquier otro valor.
Algunas máquinas usan el mismo valor para los paquetes
.Tn ICMP
que el que usan para los paquetes
.Tn TCP,
por ejemplo 30 ó 60.
Otros puede que usen valores totalmente inesperados.
.El
.Sh FALLOS (BUGS)
Muchos ordenadores y puertas de acceso ignoran la opción
.Tn RECORD_ROUTE.
.Pp
La longitud máxima de la cabecera IP resulta demasiado pequeña para opciones
como
.Tn RECORD_ROUTE
puedan resultar completamente útiles.
Sin embargo, no hay mucho que se pueda hacer sobre esto.
.Pp
El ping masivo no se recomienda generalmente y sólo se debería hacer
este tipo de ping a una dirección en condiciones muy controladas.
.Sh VÉASE TAMBIÉN
.Xr netstat 1 , 
.Xr ifconfig 8 , 
.Xr routed 8 
.Sh HISTORIA
El comando
.Nm
apareció en
.Bx 4.3 .
