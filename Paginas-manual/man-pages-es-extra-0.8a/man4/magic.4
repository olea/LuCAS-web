.\" Translated into Spanish on Mon Nov 23 1998 by 
.\" Gerardo Aburruzaga Gª <gerardo.aburruzaga@uca.es>
.\"
.TH MAGIC 4 "Dominio Público"
.\" install as magic.4 on USG, magic.5 on V7 or Berkeley systems.
.SH NOMBRE
magic \- fichero de números mágicos para la orden file
.SH DESCRIPCIÓN
Esta página del Manual documenta el formato del fichero mágico que emplea
la orden
.BR file (1),
versión 3.26. La orden
.B file
identifica el tipo de un fichero utilizando, entre otras pruebas, una
que mira si el fichero empieza con un cierto
.IR "número mágico" .
El fichero
.I /usr/share/misc/magic
especifica qué números mágicos hay que buscar, qué mensaje mostrar si
se encuentra un número mágico en particular, e información adicional
que haya que extraer del fichero.
.PP
Cada línea del fichero especifica una prueba a realizar.
Una prueba compara los datos que comiencen en una posición particular
en el fichero con un valor numérico de 1, 2 ó 4 bytes o una cadena de
caracteres. Si la prueba tiene éxito, se muestra un mensaje. La línea
consiste en los campos siguientes:
.IP desplazamiento \w'mensaje'u+2n
Un número que especifica el desplazamiento, en bytes, desde el
principio del fichero de datos que se esté comprobando.
.IP tipo
El tipo de los datos a comprobar. Los valores posibles son:
.RS
.IP byte \w'mensaje'u+2n
Un valor de un byte.
.IP short
Un valor de dos bytes (en la mayoría de los sistemas) en el orden de
bytes nativo de la máquina.
.IP long
Un valor de cuatro bytes (en la mayoría de los sistemas) en el orden de
bytes nativo de la máquina.
.IP string
Una cadena de bytes.
.IP date
Un valor de cuatro bytes interpretado como una fecha de Unix.
.IP beshort
Un valor de dos bytes (en la mayoría de los sistemas) en orden de
bytes ascendiente hacia la derecha.
.IP belong
Un valor de cuatro bytes (en la mayoría de los sistemas) en orden de
bytes ascendente hacia la derecha.
.IP bedate
Un valor de cuatro bytes (en la mayoría de los sistemas) en orden de
bytes ascendente hacia la derecha, interpretado como una fecha de Unix.
.IP leshort
Un valor de dos bytes (en la mayoría de los sistemas) en orden de
bytes ascendente hacia la izquierda.
.IP lelong
Un valor de cuatro bytes (en la mayoría de los sistemas) en orden de
bytes ascendente hacia la izquierda.
.IP ledate
Un valor de cuatro bytes (en la mayoría de los sistemas) en orden de
bytes ascendente hacia la izquierda, interpretado como una fecha de Unix.
.RE
.PP
Los tipos numéricos pueden opcionalmente ir seguidos por
.B &
y un valor numérico, para especificar la operación de bits Y con dicho 
valor antes de que se realice la comparación. Preceder el tipo de una
.B u
indica que las comparaciones ordenadas deben hacerse sobre valores sin 
signo.
.IP test
El valor a ser comparado con el valor del fichero. Si el tipo es
numérico, este valor se especifica como en el lenguaje C; si es una
cadena, como una cadena de caracteres de C, permitiéndose las
secuencias de escape habituales (como \en para la nueva línea).
.IP
Los valores numéricos pueden hacerse preceder por un carácter que
indique la operación a realizarse. Puede ser
.BR = ,
para especificar que el valor del fichero debe igualar al especificado,
.BR < ,
para especificar que el valor del fichero debe ser menor que el valor
especificado, 
.BR > ,
para especificar que el valor del fichero debe ser mayor que el valor
especificado, 
.BR & ,
para especificar que el valor del fichero debe tener a 1 todos los
bits que estén a 1 en el valor especificado,
.BR ^ ,
para especificar que el valor del fichero debe tener a 0 cualquiera de 
los bits que estén a 1 en el valor especificado, o
.BR x ,
para especificar que cualquier valor concordará. Si el carácter se
omite, se asume que es
.BR = .
.IP
Los valores numéricos se especifican como en C; por ejemplo,
.B 13
es en base diez,
.B 013
es octal, y
.B 0x13
es hexadecimal.
.IP
Para valores de cadena, la cadena de bytes del fichero debe concordar
con la cadena de bytes especificada. 
Los operadores
.BR = ,
.B <
y
.B >
(pero no
.BR & )
pueden aplicarse a cadenas.
La longitud empleada para la concordancia es la del argumento cadena
en el fichero mágico. Esto significa que una línea puede concordar con 
cualquier cadena, y por tanto presumiblemente mostrarla, haciendo
.B >\e0
(porque todas las cadenas son mayores que la cadena nula).
.IP mensaje
EL mensaje a mostrarse si la comparación tiene éxito. Si la cadena
contiene una especificación de formato como las de
.BR printf (3S),
el valor del fichero (con cualquier enmascaramiento especificado ya
realizado) se muestra empleando el mensaje como la cadena de formato.
.PP
Algunos formatos de fichero contienen información adicional que se
mostrará junto con el tipo del fichero. Una línea que comience con el
carácter 
.B >
indica pruebas y mensajes a mostrarse adicionales. El número de
.B >
en la línea indica el nivel de la prueba; una línea sin ningún
.B >
al principio se considera que está en el nivel 0.
Cada línea en el nivel
.IB n \(pl1
está bajo el control de la línea en el nivel
.IB n
más cercano que la preceda en el fichero mágico.
Si la prueba en una línea en el nivel
.I n
tiene éxito, se realizan las pruebas especificadas en todas las líneas 
subsiguientes en el nivel
.IB n \(pl1
y se muestran los mensajes si las pruebas tienen éxito. La línea
siguiente en el nivel
.I n
termina con esto.
Si el primer carácter que siga al último
.B >
es un
.B (
entonces la cadena tras el paréntesis se interpreta como un
desplazamiento indirecto. Eso significa que el número tras el
paréntesis se emplea como un desplazamiento en el fichero. Se lee el
valor en tal desplazamiento, y se emplea de nuevo como un
desplazamiento en el fichero. Los desplazamientos indirectos son de la 
forma:
.BI (( x [.[bslBSL]][+-][ y ]).
El valor de
.I x
se emplea como un desplazamiento en el fichero. Se lee en tal sitio un 
byte, un entero corto o uno largo, dependiendo del especificador de tipo
.BR [bslBSL]  .
Los tipos en mayúsculas interpretan el número como un valor ascendente
hacia la derecha, mientras que las versiones en minúsculas lo
interpretan como ascendente hacia la izquierda. A ese número se le
suma el valor de
.I y
y el resultado se emplea como un desplazamiento en el fichero. El tipo 
predeterminado si no se especifica uno es long, un entero largo.
.PP
A veces uno no sabe la posición exacta puesto que ésta depende de la
longitud de los campos anteriores. Entonces se puede especificar un
desplazamiento o posición relativa al final del último campo del nivel 
superior (por supuesto esto sólo puede hacerse para pruebas en
subniveles, como en las que empiezan con
.BR > ).
Tal desplazamiento relativo se especifica empleando
.B &
como prefijo del desplazamiento.
.SH FALLOS
Los formatos 
.IR long ,
.IR belong ,
.IR lelong ,
.IR short ,
.IR beshort ,
.IR leshort ,
.IR date ,
.IR bedate ,
y
.I ledate
son dependientes del sistema; quizás deberían especificarse como un
número de bytes (2B, 4B, etc.), puesto que los ficheros que se están
reconociendo vienen normalmente de un sistema en el que las longitudes 
son invariantes.
.PP
No hay (actualmente) soporte para que se empleen datos con sexo (endianess)
especificado en desplazamientos indirectos.
.SH VÉASE TAMBIÉN
.BR file (1)
\- la orden que lee este fichero.
.\"
.\" From: guy@sun.uucp (Guy Harris)
.\" Newsgroups: net.bugs.usg
.\" Subject: /etc/magic's format isn't well documented
.\" Message-ID: <2752@sun.uucp>
.\" Date: 3 Sep 85 08:19:07 GMT
.\" Organization: Sun Microsystems, Inc.
.\" Lines: 136
.\" 
.\" Here's a manual page for the format accepted by the "file" made by adding
.\" the changes I posted to the S5R2 version.
.\"
.\" Modified for Ian Darwin's version of the file command.
.\" @(#)$Id: magic.man,v 1.15 1998/08/13 17:32:24 christos Exp $
