.\" Copyright (C) 1996 Free Software Foundation, Inc.
.\" This file is distributed accroding to the GNU General Public License.
.\" See the file COPYING in the top level source directory for details.
.\" Translated into Spanish Wed Feb 18 16:35:53 CET 1998 by Gerardo
.\" Aburruzaga García <gerardo.aburruzaga@uca.es>
.\"
.TH QUERY_MODULE 2 "26 Diciembre 1996" "Linux 2.1.17" "Soporte de Módulos de Linux"
.SH NOMBRE
query_module \- interroga al núcleo sobre varias cosas relacionadas
con los módulos
.SH SINOPSIS
.nf
.B #include <linux/module.h>
.sp
\fBint query_module(const char *\fInombre\fB, int \fIque\fB,
void *\fIbuf\fB, size_t \fItambuf\fB, size_t *\fIret\fB);
.fi
.SH DESCRIPCIÓN
.B query_module
pide información al núcleo relativa a módulos cargables. La naturaleza
precisa de la información y su formato depende de la subfunción
\fIque\fP. Algunas funciones requieren que \fInombre\fP se refiera a
un módulo cargado actualmente, otras permiten que \fInombre\fP sea
\fBNULL\fP, indicando el propio núcleo.

.SS "VALORES DE `QUE'"
.TP
.B 0
Siempre devuelve `éxito'. Se emplea para probar la llamada al sistema.
.TP
.B QM_MODULES
Devuelve los nombres de todos los módulos cargados. El formato del
búfer de salida consiste en cadenas de caracteres adyacentes
terminadas en cero; \fIret\fP contendrá el número de módulos.
.TP
.B QM_DEPS
Devuelve los nombres de todos los módulos utilizados por el módulo
indicado. El formato del búfer de salida consiste en cadenas de
caracteres adyacentes terminadas en cero; \fIret\fP contendrá el
número de módulos.
.TP
.B QM_REFS
Devuelve los nombres de todos los módulos que utilizan al
indicado. Esto es lo inverso de \fBQM_DEPS\fP. 
El formato del búfer de salida consiste en cadenas de
caracteres adyacentes terminadas en cero; \fIret\fP contendrá el
número de módulos.
.TP
.B QM_SYMBOLS
Devuelve los símbolos y valores exportados por el núcleo o el módulo
indicado. El formato del búfer consiste en un vector de:
.RS
.PP
.nf
struct module_symbol
{
  unsigned long value;
  unsigned long name;
};
.fi
.PP
seguido por cadenas de caracteres terminadas en cero. El valor de
\fInombre\fP es el desplazamiento de la cadena relativo al comienzo de
\fIbuf\fP; \fIret\fP contendrá el número de símbolos.
.RE
.TP
.B QM_INFO
Devuelve información variada sobre el módulo indicado. El formato del
búfer de salida es:
.RS
.PP
.nf
struct module_info
{
  unsigned long address;
  unsigned long size;
  unsigned long flags;
};
.fi
.PP
donde \fIaddress\fP es la dirección del núcleo en la que reside el módulo,
\fIsize\fP es el tamaño del modulo en bytes, y \fIflags\fP es 
una máscara de \fBMOD_RUNNING\fP, \fBMOD_AUTOCLEAN\fP, etcétera, que
indica el estado actual del módulo. \fIret\fP contendrá el tamaño de la
struct \fBmodule_info\fP.
.RE
.SH "VALOR DEVUELTO"
En caso de éxito, se devuelve cero. En caso de error, se devuelve \-1
y se pone un valor apropiado en \fIerrno\fP.
.SH ERRORES
.TP
.B ENOENT
No existe ningún módulo con ese \fInombre\fP.
.TP
.B EINVAL
Inválido \fIque\fP, o \fInombre\fP le indica al núcleo una subfunción
inapropiada. 
.TP
.B ENOSPC
El tamaño del búfer proporcionado era demasiado pequeño. \fIret\fP
contendrá el mínimo tamaño que se necesita.
.TP
.B EFAULT
Al menos uno de \fInombre\fP, \fIbuf\fP o \fIret\fP estaban afuera del
espacio de direcciones accesible al programa.
.SH "VÉASE TAMBIÉN"
.BR create_module "(2), " init_module "(2), " delete_module "(2).
