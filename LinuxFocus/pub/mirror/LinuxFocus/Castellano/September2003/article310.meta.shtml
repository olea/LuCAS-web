<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org">
    <!-- this stylesheet will later on be added by lfparser automatically: -->
<style type="text/css">
<!--
  pre { font-family:monospace,Courier }
  pre.code { font-family:monospace,Courier;background-color:#aedbe8; }
  p.code { width:80%; alignment:center; background-color:#aedbe8; 
        border-style:none; border-width:medium; border-color:#aedbe8; 
        padding:0.1cm ; text-align:left }
-->
</style>

    <title></title>
  </head>

  <body>
    <h1>Una pequeña guía de instalación de CVW en Linux</h1>

    <h4>ArticleCategory:</h4>
    Applications 

    <h4>AuthorImage:</h4>
    <img src=
    "../../common/images/article310/JuanManuelTriana_CarlosAndresPerez.jpg"
     alt="[Photo of the Author]" width="110" height="210"> 

    <h4>TranslationInfo:</h4>

  <p>original in es <a href=
    "mailto:jutriana@uniweb.net.co,caperez@usaca.edu.co">Juan
    Manuel Triana,Carlos Andr&eacute;s P&eacute;rez</a></p>

    <h4>AboutTheAuthor:</h4>

    <p>Juan Manuel Triana ha trabajado con Linux desde su
    introducción en Colombia, alrededor de 1995. Defensor a
    ultranza de Slackware, ha centralizado su trabajo en
    aplicaciones multimedia y streaming de sonido.</p>

    <p>Carlos Andrés Pérez es especialista en Simulación Molecular,
    Doctorando en Biotecnología. Asesor técnico del Grupo de
    Investigación en Educación Virtual (GIEV). Dirección:
    Universidad Santiago de Cali, Calle 5ª carrera 62 Campus
    Pampalinda, Cali &ndash; Colombia.</p>

    <h4>Abstract:</h4>
    CVW (Collaborative Virtual Workspaces) es una de las
    herramientas más interesantes disponibles en código fuente
    abierto para el desarrollo de entornos de educación virtual.
    Este artículo describe la instalación en un sistema con Suse
    Linux Professional 8.0. 

    <h4>ArticleIllustration:</h4>
    <img src="../../common/images/article310/cvwlogo.jpg" alt=
    "[Illustration]" hspace="10" width="83" height="103"> 

    <h4>ArticleBody:</h4>

    <h2>Qué es CVW?</h2>
    <a href="http://cvw.sourceforge.net">CVW</a> es un medio de
    software colaborativo escrito principalmente en Java, el cual
    no sbrinda un "edificio virtual" donde los diferentes equipos
    de trabajo pueden comunicarse, colaborar, y compartir
    información sin importar su localización geográfica. Con CVW
    las posibilidades interactivas de la Red pueden aprovecharse en
    espacios virtuales donde la gente se reúne a aprender,
    interactuar, discutir y compartir información, utilizando una
    serie de herramientas sencillas. CVW ha sido desarrollado por
    la <a href="http://cvw.sourceforge.net">Mitre Corporation</a> y
    es un desarrollo 100% Código Abierto. 

    <h2>Porqué elegimos CVW?</h2>

    <p>El grupo <a href="http://www.gievirtual.com">GIEV</a> de la
    Universidad Santiago de Cali en Colombia, ha estado trabajando
    durante varios años en la investigación de nuevas plataformas y
    medios virtuales que aseguren una fácil integración con los
    métodos educativos existentes. Tras probar diferentes softwares
    comerciales, decidimos buscar las alternativas de Código
    Abierto y descubrimos CVW. Como contenía todos los elementos
    que estábamos buscando decidimos probarlo.</p>

    <p>CVW no es fácil de instalar, como descubrimos muy pronto. En
    las siguientes líneas describiré el proceso de poner afuncionar
    esta maravillosa plataforma bajo Suse 8.0.</p>

    <p>Recibimos un IBM Netvista para probar este software. <a
    href="http://cvw.usaca.edu.co">El servidor</a> es un Pentium 4,
    2.0Ghz, 256MB Ram y 40G HD, conectado a la red de la
    Universidad. La instalación de Suse no causó mayor
    inconveniente, sólo el vídeo presentó algún conflicto (un
    integrado Intel 845), pero tras compilar el kernel, corrió de
    manera más que aceptable (1024x768 a 24 bits).</p>

    <h2>Paso por paso</h2>

    <p>Lo primero es la descarga del software en el <a href=
    "http://sourceforge.net/projects/cvw">sitio web</a> :</p>

    <p>Descargaremos las siguientes aplicaciones:</p>

    <ul>
      <li>CVW server</li>

      <li>CVW document server</li>

      <li>CVW client</li>
    </ul>

    <p>También existe un CVW Federated server que corre para
    clusters de servidores CVW.</p>

    <p>Lo primero en instalarse fue el servidor CVW. Descomprimí en
    /opt/CVWserver y cree un usuario para que lo ejecutara. El
    script de funcionamiento es</p>

    <p>./cvw.boot start</p>

    <p>Y para finalizar la aplicación:</p>

    <p>./cvw.boot stop</p>

    <p>El software recomienda la creación de un usuario, generamos
    un usuario cvw y le otorgamos derechos en el directorio. Cuando
    revisamos el script (cvw.boot) debemos acondicionar ciertos
    datos como el directorio de instalación y lo más importante, el
    puerto TCP donde CVW revisará las conexiones de cliente. Por
    defecto el puerto es 8888. Sólo confirmamos en el script
    /etc/services. El único cambio importante bajo Linux se refiere
    al número máximo de clientes, por defecto es ilimitado, pero en
    Linux esto resulta en un problema del servicio.<br>
    <br>
     Al conectarnos con un navegador obtenemos este mensaje:</p>

    <p>&lt;!--YourMOO--&gt;<br>
     &lt;!--<br>
     Welcome to the Collaborative Virtual Workspace.<br>
     This is version 4.0.2 of the CVW core.<br>
     If you are not using a CVW client ...<br>
     type: connect username password<br>
     to connect as an existing user<br>
     type: quit<br>
     to disconnect<br>
     --&gt;<br>
     I don't understand that. Valid commands at this point are<br>
     Help, COnnect, or Quit</p>

    <p>Con esto sabemos que nuestro servidor está listo para
    recibir a cualquier cliente.El segundo paso (y el más
    engorroso) es instalar el servidor de documentos.</p>

    <p>Seguimos el mismo procedimiento que con el server y
    descomprimimos en /opt/cvwdocserver revisando el README. Ahora
    llega el momento de nuestra primera elección.<br>
    <br>
     El servidor de dcumentos del CVW utiliza una base de datos
    Mysql y <a href="http://jakarta.apache.org">Tomcat</a> (una
    utilidad Java de Apache) para administrar los archivos del
    entorno virtual. El archivo tar incluye un directorio
    jakarta/tomcat directory y una instalación de Mysql
    (3.23.27-beta).</p>

    <p>No nos gustan las versiones beta y Suse venía con jakarta y
    mysql más recientes que corrían sin problemas, así que
    procedimos a ajustarlos a los requerimientos del docserv. Con
    Mysql no hubo contratiempos y sólo trasladamos la base
    instalada a nuestro directorio funcional (/var/lib/mysql).<br>
     El verdadero problema apareció con la configuración de Tomcat.
    Intentar adaptar la configuración preexistente de jakarta a la
    del CVW fue tortuoso, ya que los comandos estaban (cuando
    existían) en diferentes sitios, así que al final decidimos
    darle una prueba a la instalación del CVW.</p>

    <p>Sin embargo hay que hacer varios cambios: Dejé el directorio
    jakarta/tomcat donde se descomprimió, en el árbol del docserv
    (/opt/cvwdocserv). En el archivo de configuración de apache
    (/etc/httpd/httpd.conf) debe adicionarse esta línea:</p>

    <p>Include
    /opt/cvwdocserver/jakarta/tomcat/conf/tomcat-apache.conf</p>

    <p>Ahora al archivo tomcat-apache.conf . Lo primero es apuntar
    a la dirección correcta del módulo Jserv en apache:</p>

    <p>LoadModule jserv_module libexec/mod_jserv.so<br>
    </p>

    <p>De igual forma debemos corregir la dirección bajo la cual
    instalamos y el puerto de aplicación:</p>

    <p>ApJServDefaultPort 8007<br>
     AddType test/jsp .jsp<br>
     AddHandler jserv-servlet .jsp<br>
     Alias /examples
    /opt/cvwdocserver/jakarta/tomcat/webapps/examples<br>
     &lt;Directory
    "/opt/cvwdocserver/jakarta/tomcat/webapps/examples"&gt;<br>
     Options Indexes FollowSymLinks<br>
     &lt;/Directory&gt;<br>
     ApJServMount /examples/servlet /examples<br>
     &lt;Location /examples/WEB-INF/ &gt;<br>
     AllowOverride None<br>
     deny from all<br>
     &lt;/Location&gt;<br>
     Alias /test /opt/cvwdocserver/jakarta/tomcat/webapps/test<br>
     &lt;Directory
    "/opt/cvwdocserver/jakarta/tomcat/webapps/test"&gt;<br>
     Options Indexes FollowSymLinks<br>
     &lt;/Directory&gt;<br>
     ApJServMount /examples/servlet /examples<br>
     &lt;Location /examples/WEB-INF/ &gt;<br>
     AllowOverride None<br>
     deny from all<br>
     &lt;/Location&gt;<br>
     Alias /test /opt/cvwdocserver/jakarta/tomcat/webapps/test<br>
     &lt;Directory
    "/opt/cvwdocserver/jakarta/tomcat/webapps/test"&gt;<br>
     Options Indexes FollowSymLinks<br>
     &lt;/Directory&gt;<br>
     ApJServMount /test/servlet /test<br>
     &lt;Location /test/WEB-INF/ &gt;<br>
     AllowOverride None<br>
     deny from all<br>
     &lt;/Location&gt;<br>
     ApJServMount /servlet /ROOT<br>
    </p>

    <p>Una vez listo cambiamos el script del docserv, cvwds.boot el
    cual se ejecuta de la misma forma que el cvw.boot (start |
    stop). Sólo cambiamos los directorios locales del servidor y de
    la base de datos y comentamos la línea de apagado de mysql
    (porque las otras bases se necesitan siempre funcionando).</p>

    <p>También hay que confirmar que los archivos .jar dentro del
    directorio webapps/app se encuentren allí y no en otro
    subdirectorio.</p>

    <p>Con suerte todo estará listo.</p>

    <p>Sólo nos queda descomprimir el cliente. Usamos
    /opt/CVWclient/ . El script con los datos necesarios se llama
    Server.cvw, la siguiente es una copia del nuestro:</p>

    <p># Property file for CVW<br>
     #<br>
     cvw.server.host=cvw<br>
     cvw.server.port=8888<br>
     cvw.server.name=cvw<br>
     cvw.docserver.host=cvw<br>
     cvw.docserver.port=8080<br>
     cvw.docserver.url=/app/docservlet<br>
     cvw.version=4.0<br>
     cvw.debug=true<br>
    <br>
     #############<br>
     # User Images<br>
     #############<br>
     #this url must end with a /<br>
     cvw.userimages.url=http://localhost/cvw/user-images/<br>
    </p>

    <p>La línea cvw.docserver.url es fundamental... No sabemos
    porqué la configuración por defecto apunta a otra dirección.
    Después de la prueba y error usted se dará cuenta que esta es
    la línea MAS IMPORTANTE para acceder al docserver.</p>

    <p>Todo está listo para entrar a nuestro servidor CVW. Para el
    primer login debemos ingresar como "Admin" sin contraseña.</p>

    <center>
      <p><img src=
      "../../common/images/article310/administracion.png" width=
      "574" height="739"></p>
    </center>

    <p>Podemos ahora agregar una contraseña en el menú File y
    utilizar la herramienta administrativa Admin Tool en el menú
    View.</p>

    <p>Como el menú lo indica, hay una gran cantidad de
    herramientas disponibles y que hacen de esta aplicación una
    referencia en educación vitual.</p>

    <center>
      <p><img src="../../common/images/article310/Cvw40-1.gif" alt=
      "cvw" width="374" height="354"><br>
       <img src="../../common/images/article310/Cvw40-2.gif" alt=
      "cvw" width="299" height="197"><br>
       <img src="../../common/images/article310/Cvw40-3.gif" alt=
      "cvw" width="495" height="553"></p>
    </center>

    <p>Esta configuarción esá funcionando perfectamente en nuestro
    servidor. Pruebe esta utilidad, para mayor información puede
    descargar el manual en pdf.</p>

    <p>Disfrútenla.</p>
    <!-- vim: set sw=2 ts=2 et tw=74: -->
  </body>
</html>

